; ModuleID = 'klee_init_env64_Debug+Asserts.bc'
source_filename = "/home/laboni/kleeEnv/klee/runtime/POSIX/klee_init_env.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._Demo1_Access_Key_PROTOCOL = type { {}*, i8* }
%struct._DEMO1_ACCESS_KEY = type { [2 x i64] }
%struct._LINK = type { %struct._DEMO1_ACCESS_KEY, %struct._LINK*, %struct._LINK* }
%struct._EFI_RNG_PROTOCOL = type { i64 (%struct._EFI_RNG_PROTOCOL*, i64*, %struct.GUID*)*, i64 (%struct._EFI_RNG_PROTOCOL*, %struct.GUID*, i64, i8*)* }
%struct.GUID = type { i32, i16, i16, [8 x i8] }
%struct.VARIABLE_STORE_HEADER = type { %struct.GUID, i32, i8, i8, i16, i32 }
%struct._VARIABLE_INFO_ENTRY = type { %struct._VARIABLE_INFO_ENTRY*, %struct.GUID, i16*, i32, i32, i32, i32, i32, i8 }
%struct.VARIABLE_MODULE_GLOBAL = type { %struct.VARIABLE_GLOBAL, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i8*, i8*, i8*, [4 x i8], %struct._EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL* }
%struct.VARIABLE_GLOBAL = type { i64, i64, i64, %struct.VARIABLE_RUNTIME_CACHE_CONTEXT, %struct.EFI_LOCK, i32, i8, i8, i8 }
%struct.VARIABLE_RUNTIME_CACHE_CONTEXT = type { i8*, i8*, i8*, %struct.VARIABLE_RUNTIME_CACHE, %struct.VARIABLE_RUNTIME_CACHE, %struct.VARIABLE_RUNTIME_CACHE }
%struct.VARIABLE_RUNTIME_CACHE = type { i32, i32, %struct.VARIABLE_STORE_HEADER* }
%struct.EFI_LOCK = type { i64, i64, i32 }
%struct._EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL = type { i64 (%struct._EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL*, i32*)*, i64 (%struct._EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL*, i32*)*, i64 (%struct._EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL*, i64*)*, i64 (%struct._EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL*, i64, i64*, i64*)*, i64 (%struct._EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL*, i64, i64, i64*, i8*)*, i64 (%struct._EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL*, i64, i64, i64*, i8*)*, i64 (%struct._EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL*, ...)*, i8* }
%struct.exe_file_t.17 = type { i32, i32, i64, %struct.exe_disk_file_t.16* }
%struct.exe_disk_file_t.16 = type { i32, i8*, %struct.stat64.15* }
%struct.stat64.15 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec.14, %struct.timespec.14, %struct.timespec.14, [3 x i64] }
%struct.timespec.14 = type { i64, i64 }
%struct.exe_file_system_t.18 = type { i32, %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16*, i32, %struct.exe_disk_file_t.16*, i32, i32*, i32*, i32*, i32*, i32*, i32*, i32* }
%struct.EFI_SYSTEM_TABLE = type { %struct.EFI_TABLE_HEADER, i16*, i32, i8*, %struct._EFI_SIMPLE_TEXT_INPUT_PROTOCOL*, i8*, %struct._EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL*, i8*, %struct._EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL*, %struct.EFI_RUNTIME_SERVICES*, %struct.EFI_BOOT_SERVICES*, i64, %struct.EFI_CONFIGURATION_TABLE* }
%struct.EFI_TABLE_HEADER = type { i64, i32, i32, i32, i32 }
%struct._EFI_SIMPLE_TEXT_INPUT_PROTOCOL = type { i64 (%struct._EFI_SIMPLE_TEXT_INPUT_PROTOCOL*, i8)*, i64 (%struct._EFI_SIMPLE_TEXT_INPUT_PROTOCOL*, %struct.EFI_INPUT_KEY*)*, i8* }
%struct.EFI_INPUT_KEY = type { i16, i16 }
%struct._EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL = type { i64 (%struct._EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL*, i8)*, i64 (%struct._EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL*, i16*)*, i64 (%struct._EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL*, i16*)*, i64 (%struct._EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL*, i64, i64*, i64*)*, i64 (%struct._EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL*, i64)*, i64 (%struct._EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL*, i64)*, i64 (%struct._EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL*)*, i64 (%struct._EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL*, i64, i64)*, i64 (%struct._EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL*, i8)*, %struct.EFI_SIMPLE_TEXT_OUTPUT_MODE* }
%struct.EFI_SIMPLE_TEXT_OUTPUT_MODE = type { i32, i32, i32, i32, i32, i8 }
%struct.EFI_RUNTIME_SERVICES = type { %struct.EFI_TABLE_HEADER, i64 (%struct.EFI_TIME*, %struct.EFI_TIME_CAPABILITIES*)*, i64 (%struct.EFI_TIME*)*, i64 (i8*, i8*, %struct.EFI_TIME*)*, i64 (i8, %struct.EFI_TIME*)*, i64 (i64, i64, i32, %struct.EFI_MEMORY_DESCRIPTOR*)*, i64 (i64, i8**)*, i64 (i16*, %struct.GUID*, i32*, i64*, i8*)*, i64 (i64*, i16*, %struct.GUID*)*, i64 (i16*, %struct.GUID*, i32, i64, i8*)*, i64 (i16*, %struct.GUID*, i32*, %struct._DEMO1_ACCESS_KEY*, i64*, i8*)*, i64 (i16*, %struct.GUID*, i32, %struct._DEMO1_ACCESS_KEY*, i64, i8*)*, i64 (i32*)*, void (i32, i64, i64, i8*)*, i64 (%struct.EFI_CAPSULE_HEADER**, i64, i64)*, i64 (%struct.EFI_CAPSULE_HEADER**, i64, i64*, i32*)*, i64 (i32, i64*, i64*, i64*)* }
%struct.EFI_TIME = type { i16, i8, i8, i8, i8, i8, i8, i32, i16, i8, i8 }
%struct.EFI_TIME_CAPABILITIES = type { i32, i32, i8 }
%struct.EFI_MEMORY_DESCRIPTOR = type { i32, i64, i64, i64, i64 }
%struct.EFI_CAPSULE_HEADER = type { %struct.GUID, i32, i32, i32 }
%struct.EFI_BOOT_SERVICES = type { %struct.EFI_TABLE_HEADER, i64 (i64)*, void (i64)*, i64 (i32, i32, i64, i64*)*, i64 (i64, i64)*, i64 (i64*, %struct.EFI_MEMORY_DESCRIPTOR*, i64*, i64*, i32*)*, i64 (i32, i64, i8**)*, i64 (i8*)*, i64 (i32, i64, void (i8*, i8*)*, i8*, i8**)*, i64 (i8*, i32, i64)*, i64 (i64, i8**, i64*)*, i64 (i8*)*, i64 (i8*)*, i64 (i8*)*, i64 (i8**, %struct.GUID*, i32, i8*)*, i64 (i8*, %struct.GUID*, i8*, i8*)*, i64 (i8*, %struct.GUID*, i8*)*, i64 (i8*, %struct.GUID*, i8**)*, i8*, i64 (%struct.GUID*, i8*, i8**)*, i64 (i32, %struct.GUID*, i8*, i64*, i8**)*, i64 (%struct.GUID*, %struct.EFI_DEVICE_PATH_PROTOCOL**, i8**)*, i64 (%struct.GUID*, i8*)*, i64 (i8, i8*, %struct.EFI_DEVICE_PATH_PROTOCOL*, i8*, i64, i8**)*, i64 (i8*, i64*, i16**)*, i64 (i8*, i64, i64, i16*)*, i64 (i8*)*, i64 (i8*, i64)*, i64 (i64*)*, i64 (i64)*, i64 (i64, i64, i64, i16*)*, i64 (i8*, i8**, %struct.EFI_DEVICE_PATH_PROTOCOL*, i8)*, i64 (i8*, i8*, i8*)*, i64 (i8*, %struct.GUID*, i8**, i8*, i8*, i32)*, i64 (i8*, %struct.GUID*, i8*, i8*)*, i64 (i8*, %struct.GUID*, %struct.EFI_OPEN_PROTOCOL_INFORMATION_ENTRY**, i64*)*, i64 (i8*, %struct.GUID***, i64*)*, i64 (i32, %struct.GUID*, i8*, i64*, i8***)*, i64 (%struct.GUID*, i8*, i8**)*, i64 (i8**, ...)*, i64 (i8*, ...)*, i64 (i8*, i64, i32*)*, void (i8*, i8*, i64)*, void (i8*, i64, i8)*, i64 (i32, i64, void (i8*, i8*)*, i8*, %struct.GUID*, i8**)* }
%struct.EFI_DEVICE_PATH_PROTOCOL = type { i8, i8, [2 x i8] }
%struct.EFI_OPEN_PROTOCOL_INFORMATION_ENTRY = type { i8*, i8*, i32, i32 }
%struct.EFI_CONFIGURATION_TABLE = type { %struct.GUID, i8* }
%struct.ACCESS_VARIABLE_HEADER = type { i16, i8, i8, i32, i32, i32, %struct.GUID, %struct._DEMO1_ACCESS_KEY }
%struct.AUTHENTICATED_VARIABLE_HEADER = type <{ i16, i8, i8, i32, i64, %struct.EFI_TIME, i32, i32, i32, %struct.GUID }>
%struct.ACCESS_VARIABLE_POINTER_TRACK = type { %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER*, i8 }
%struct.DEMO1_ACCESS_KEY = type opaque
%struct.exe_sym_env_t.19 = type { [32 x %struct.exe_file_t.17], i32, i32 }
%struct.__va_list_tag.13 = type { i32, i32, i8*, i8* }
%struct.statfs.11 = type { i64, i64, i64, i64, i64, i64, i64, %struct.__fsid_t.10, i64, i64, i64, [4 x i64] }
%struct.__fsid_t.10 = type { [2 x i32] }
%struct.dirent64.12 = type { i64, i64, i16, i8, [256 x i8] }
%struct.termios = type { i32, i32, i32, i32, i8, [32 x i8], i32, i32 }
%struct.winsize = type { i16, i16, i16, i16 }
%struct.flock = type { i16, i16, i64, i64, i32 }
%struct.fd_set = type { [16 x i64] }

@__const.klee_init_env.sym_arg_name = private unnamed_addr constant [6 x i8] c"arg\00\00\00", align 1
@.str = private unnamed_addr constant [7 x i8] c"--help\00", align 1
@.str.1 = private unnamed_addr constant [964 x i8] c"klee_init_env\0A\0Ausage: (klee_init_env) [options] [program arguments]\0A  -sym-arg <N>              - Replace by a symbolic argument with length N\0A  -sym-args <MIN> <MAX> <N> - Replace by at least MIN arguments and at most\0A                              MAX arguments, each with maximum length N\0A  -sym-files <NUM> <N>      - Make NUM symbolic files ('A', 'B', 'C', etc.),\0A                              each with size N\0A  -sym-stdin <N>            - Make stdin symbolic with size N.\0A  -sym-stdout               - Make stdout symbolic.\0A  -save-all-writes          - Allow write operations to execute as expected\0A                              even if they exceed the file size. If set to 0, all\0A                              writes exceeding the initial file size are discarded.\0A                              Note: file offset is always incremented.\0A  -max-fail <N>             - Allow up to N injected failures\0A  -fd-fail                  - Shortcut for '-max-fail 1'\0A\0A\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"--sym-arg\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"-sym-arg\00", align 1
@.str.4 = private unnamed_addr constant [48 x i8] c"--sym-arg expects an integer argument <max-len>\00", align 1
@.str.5 = private unnamed_addr constant [45 x i8] c"No more than 100 symbolic arguments allowed.\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"--sym-args\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"-sym-args\00", align 1
@.str.8 = private unnamed_addr constant [77 x i8] c"--sym-args expects three integer arguments <min-argvs> <max-argvs> <max-len>\00", align 1
@.str.9 = private unnamed_addr constant [28 x i8] c"Invalid range to --sym-args\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"n_args\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"--sym-files\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"-sym-files\00", align 1
@.str.13 = private unnamed_addr constant [72 x i8] c"--sym-files expects two integer arguments <no-sym-files> <sym-file-len>\00", align 1
@.str.14 = private unnamed_addr constant [39 x i8] c"Multiple --sym-files are not allowed.\0A\00", align 1
@.str.15 = private unnamed_addr constant [65 x i8] c"The first argument to --sym-files (number of files) cannot be 0\0A\00", align 1
@.str.16 = private unnamed_addr constant [60 x i8] c"The second argument to --sym-files (file size) cannot be 0\0A\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"--sym-stdin\00", align 1
@.str.18 = private unnamed_addr constant [11 x i8] c"-sym-stdin\00", align 1
@.str.19 = private unnamed_addr constant [57 x i8] c"--sym-stdin expects one integer argument <sym-stdin-len>\00", align 1
@.str.20 = private unnamed_addr constant [13 x i8] c"--sym-stdout\00", align 1
@.str.21 = private unnamed_addr constant [12 x i8] c"-sym-stdout\00", align 1
@.str.22 = private unnamed_addr constant [18 x i8] c"--save-all-writes\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"-save-all-writes\00", align 1
@.str.24 = private unnamed_addr constant [10 x i8] c"--fd-fail\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"-fd-fail\00", align 1
@.str.26 = private unnamed_addr constant [12 x i8] c"--bout-file\00", align 1
@.str.27 = private unnamed_addr constant [11 x i8] c"-bout-file\00", align 1
@.str.28 = private unnamed_addr constant [11 x i8] c"--max-fail\00", align 1
@.str.29 = private unnamed_addr constant [10 x i8] c"-max-fail\00", align 1
@.str.30 = private unnamed_addr constant [54 x i8] c"--max-fail expects an integer argument <max-failures>\00", align 1
@.str.31 = private unnamed_addr constant [31 x i8] c"out of memory in klee_init_env\00", align 1
@.str.32 = private unnamed_addr constant [56 x i8] c"/home/laboni/kleeEnv/klee/runtime/POSIX/klee_init_env.c\00", align 1
@.str.33 = private unnamed_addr constant [9 x i8] c"user.err\00", align 1
@.str.34 = private unnamed_addr constant [37 x i8] c"too many arguments for klee_init_env\00", align 1
@gDemo1_Access_Key_Protocol = dso_local global { i64 (%struct._Demo1_Access_Key_PROTOCOL*, i8*, i8, %struct._DEMO1_ACCESS_KEY*)*, i8* } { i64 (%struct._Demo1_Access_Key_PROTOCOL*, i8*, i8, %struct._DEMO1_ACCESS_KEY*)* @Demo1GenerateAccessKey, i8* bitcast (i64 (%struct._Demo1_Access_Key_PROTOCOL*, i8*, %struct._DEMO1_ACCESS_KEY*, i8, i8*)* @Demo1ValidateAccessKey to i8*) }, align 8, !dbg !0
@head = dso_local global %struct._LINK* null, align 8, !dbg !186
@accessKeyLock = dso_local global i8 0, align 1, !dbg !184
@masterKey = dso_local global %struct._DEMO1_ACCESS_KEY* null, align 8, !dbg !181
@.str.35 = private unnamed_addr constant [13 x i8] c"link != NULL\00", align 1
@.str.1.36 = private unnamed_addr constant [41 x i8] c"./../Demo1_Access_Key/Demo1_Access_Key.c\00", align 1
@__PRETTY_FUNCTION__.InsertFirst = private unnamed_addr constant [37 x i8] c"void InsertFirst(DEMO1_ACCESS_KEY *)\00", align 1
@last = dso_local global %struct._LINK* null, align 8, !dbg !195
@__PRETTY_FUNCTION__.InsertLast = private unnamed_addr constant [36 x i8] c"void InsertLast(DEMO1_ACCESS_KEY *)\00", align 1
@RngProtocol = dso_local global %struct._EFI_RNG_PROTOCOL* null, align 8, !dbg !159
@keychain = dso_local global %struct._LINK* null, align 8, !dbg !197
@gAuthVarGUID = dso_local global %struct.GUID { i32 -1426903944, i16 -27525, i16 17306, [8 x i8] c"\A1\80.\14N\C3w\92" }, align 4, !dbg !199
@gEfiVarGuid = dso_local global %struct.GUID { i32 -573622762, i16 12917, i16 16740, [8 x i8] c"\98\B6\FE\85p\7F\FE}" }, align 4, !dbg !201
@gEfiGlobalVarGuid = dso_local global %struct.GUID { i32 -1947934879, i16 -27702, i16 4562, [8 x i8] c"\AA\0D\00\E0\98\03+\8C" }, align 4, !dbg !203
@AccessKeyProtocol = dso_local global %struct._Demo1_Access_Key_PROTOCOL* null, align 8, !dbg !205
@mineNvVariableCache = dso_local global %struct.VARIABLE_STORE_HEADER* null, align 8, !dbg !220
@gVarInfo = dso_local global %struct._VARIABLE_INFO_ENTRY* null, align 8, !dbg !222
@mineVariableModuleGlobal = dso_local global %struct.VARIABLE_MODULE_GLOBAL* null, align 8, !dbg !237
@.str.2.37 = private unnamed_addr constant [54 x i8] c"sizeof (VARIABLE_STORE_HEADER) <= VariableStoreLength\00", align 1
@.str.3.38 = private unnamed_addr constant [17 x i8] c"Demo1_Variable.c\00", align 1
@__PRETTY_FUNCTION__.mineInitEmuNonVolatileVariableStore = private unnamed_addr constant [71 x i8] c"EFI_STATUS mineInitEmuNonVolatileVariableStore(EFI_PHYSICAL_ADDRESS *)\00", align 1
@.str.4.39 = private unnamed_addr constant [31 x i8] c"The variable store base is %d\0A\00", align 1
@.str.5.40 = private unnamed_addr constant [21 x i8] c"Not in error state \0A\00", align 1
@.str.6.41 = private unnamed_addr constant [22 x i8] c"*VariableInfo != NULL\00", align 1
@__PRETTY_FUNCTION__.UpdateAccessVariableInfo = private unnamed_addr constant [121 x i8] c"void UpdateAccessVariableInfo(CHAR16 *, EFI_GUID *, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN, VARIABLE_INFO_ENTRY **)\00", align 1
@.str.7.42 = private unnamed_addr constant [30 x i8] c"(*VariableInfo)->Name != NULL\00", align 1
@.str.8.43 = private unnamed_addr constant [20 x i8] c"Entry->Next != NULL\00", align 1
@.str.9.44 = private unnamed_addr constant [26 x i8] c"Entry->Next->Name != NULL\00", align 1
@.str.10.45 = private unnamed_addr constant [62 x i8] c"NameSizeOfAccessVariable (PtrTrack->CurrPtr, AuthFormat) != 0\00", align 1
@__PRETTY_FUNCTION__.FindAccessVariableEx = private unnamed_addr constant [105 x i8] c"EFI_STATUS FindAccessVariableEx(CHAR16 *, EFI_GUID *, BOOLEAN, ACCESS_VARIABLE_POINTER_TRACK *, BOOLEAN)\00", align 1
@.str.11.46 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__PRETTY_FUNCTION__.mineVariableServiceSetVariable = private unnamed_addr constant [107 x i8] c"EFI_STATUS mineVariableServiceSetVariable(CHAR16 *, EFI_GUID *, UINT32, DEMO1_ACCESS_KEY *, UINTN, void *)\00", align 1
@.str.12.47 = private unnamed_addr constant [17 x i8] c"VarDataSize != 0\00", align 1
@__PRETTY_FUNCTION__.mineVariableServiceGetVariable = private unnamed_addr constant [111 x i8] c"EFI_STATUS mineVariableServiceGetVariable(CHAR16 *, EFI_GUID *, UINT32 *, DEMO1_ACCESS_KEY *, UINTN *, void *)\00", align 1
@.str.13.50 = private unnamed_addr constant [10 x i8] c"AccessKey\00", align 1
@.str.14.51 = private unnamed_addr constant [11 x i8] c"VendorGuid\00", align 1
@.str.15.52 = private unnamed_addr constant [11 x i32] [i32 65, i32 108, i32 105, i32 99, i32 101, i32 95, i32 77, i32 111, i32 100, i32 101, i32 0], align 4
@__exe_env = dso_local global { <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32 } { <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }> <{ %struct.exe_file_t.17 { i32 0, i32 5, i64 0, %struct.exe_disk_file_t.16* null }, %struct.exe_file_t.17 { i32 1, i32 9, i64 0, %struct.exe_disk_file_t.16* null }, %struct.exe_file_t.17 { i32 2, i32 9, i64 0, %struct.exe_disk_file_t.16* null }, [29 x %struct.exe_file_t.17] zeroinitializer }>, i32 18, i32 0 }, align 8, !dbg !347
@__exe_fs = dso_local global %struct.exe_file_system_t.18 zeroinitializer, align 8, !dbg !352
@__const.klee_init_fds.name = private unnamed_addr constant [7 x i8] c"?-data\00", align 1
@.str.55 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1.56 = private unnamed_addr constant [50 x i8] c"/home/laboni/kleeEnv/klee/runtime/POSIX/fd_init.c\00", align 1
@.str.2.57 = private unnamed_addr constant [31 x i8] c"out of memory in klee_init_env\00", align 1
@.str.3.58 = private unnamed_addr constant [9 x i8] c"user.err\00", align 1
@.str.4.59 = private unnamed_addr constant [6 x i8] c"stdin\00", align 1
@.str.5.60 = private unnamed_addr constant [10 x i8] c"read_fail\00", align 1
@.str.6.61 = private unnamed_addr constant [11 x i8] c"write_fail\00", align 1
@.str.7.62 = private unnamed_addr constant [11 x i8] c"close_fail\00", align 1
@.str.8.63 = private unnamed_addr constant [15 x i8] c"ftruncate_fail\00", align 1
@.str.9.64 = private unnamed_addr constant [12 x i8] c"getcwd_fail\00", align 1
@.str.10.65 = private unnamed_addr constant [7 x i8] c"stdout\00", align 1
@.str.11.66 = private unnamed_addr constant [6 x i8] c"-stat\00", align 1
@.str.12.67 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@__PRETTY_FUNCTION__.__create_new_dfile = private unnamed_addr constant [88 x i8] c"void __create_new_dfile(exe_disk_file_t *, unsigned int, const char *, struct stat64 *)\00", align 1
@.str.70 = private unnamed_addr constant [57 x i8] c"/home/laboni/kleeEnv/klee/runtime/Intrinsic/klee_range.c\00", align 1
@.str.1.71 = private unnamed_addr constant [14 x i8] c"invalid range\00", align 1
@.str.2.72 = private unnamed_addr constant [5 x i8] c"user\00", align 1
@getcwd.n_calls = internal global i32 0, align 4, !dbg !442
@.str.77 = private unnamed_addr constant [46 x i8] c"Undefined call to open(): O_TRUNC | O_RDONLY\0A\00", align 1
@.str.1.78 = private unnamed_addr constant [47 x i8] c"Undefined call to open(): O_EXCL w/o O_RDONLY\0A\00", align 1
@.str.2.81 = private unnamed_addr constant [44 x i8] c"symbolic file descriptor, ignoring (ENOENT)\00", align 1
@close.n_calls = internal global i32 0, align 4, !dbg !509
@read.n_calls = internal global i32 0, align 4, !dbg !514
@.str.3.82 = private unnamed_addr constant [12 x i8] c"f->off >= 0\00", align 1
@.str.4.83 = private unnamed_addr constant [45 x i8] c"/home/laboni/kleeEnv/klee/runtime/POSIX/fd.c\00", align 1
@__PRETTY_FUNCTION__.read = private unnamed_addr constant [34 x i8] c"ssize_t read(int, void *, size_t)\00", align 1
@write.n_calls = internal global i32 0, align 4, !dbg !521
@.str.5.84 = private unnamed_addr constant [7 x i8] c"r >= 0\00", align 1
@__PRETTY_FUNCTION__.write = private unnamed_addr constant [41 x i8] c"ssize_t write(int, const void *, size_t)\00", align 1
@.str.6.85 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.7.86 = private unnamed_addr constant [24 x i8] c"write() ignores bytes.\0A\00", align 1
@.str.8.89 = private unnamed_addr constant [18 x i8] c"new_off == f->off\00", align 1
@__PRETTY_FUNCTION__.__fd_lseek = private unnamed_addr constant [38 x i8] c"off64_t __fd_lseek(int, off64_t, int)\00", align 1
@.str.9.92 = private unnamed_addr constant [5 x i8] c"path\00", align 1
@__PRETTY_FUNCTION__.fstatat = private unnamed_addr constant [51 x i8] c"int fstatat(int, const char *, struct stat *, int)\00", align 1
@.str.10.95 = private unnamed_addr constant [33 x i8] c"symbolic file, ignoring (ENOENT)\00", align 1
@chmod.n_calls = internal global i32 0, align 4, !dbg !528
@fchmod.n_calls = internal global i32 0, align 4, !dbg !535
@.str.26.96 = private unnamed_addr constant [32 x i8] c"symbolic file, ignoring (EPERM)\00", align 1
@__fd_ftruncate.n_calls = internal global i32 0, align 4, !dbg !540
@.str.11.101 = private unnamed_addr constant [30 x i8] c"symbolic file, ignoring (EIO)\00", align 1
@.str.12.104 = private unnamed_addr constant [33 x i8] c"symbolic file, ignoring (EINVAL)\00", align 1
@.str.13.105 = private unnamed_addr constant [18 x i8] c"s != (off64_t) -1\00", align 1
@__PRETTY_FUNCTION__.__fd_getdents = private unnamed_addr constant [65 x i8] c"int __fd_getdents(unsigned int, struct dirent64 *, unsigned int)\00", align 1
@.str.14.106 = private unnamed_addr constant [22 x i8] c"f->off != (off64_t)-1\00", align 1
@.str.15.107 = private unnamed_addr constant [41 x i8] c"(TCGETS) symbolic file, incomplete model\00", align 1
@.str.16.108 = private unnamed_addr constant [42 x i8] c"(TCSETS) symbolic file, silently ignoring\00", align 1
@.str.17.109 = private unnamed_addr constant [43 x i8] c"(TCSETSW) symbolic file, silently ignoring\00", align 1
@.str.18.110 = private unnamed_addr constant [43 x i8] c"(TCSETSF) symbolic file, silently ignoring\00", align 1
@.str.19.111 = private unnamed_addr constant [45 x i8] c"(TIOCGWINSZ) symbolic file, incomplete model\00", align 1
@.str.20.112 = private unnamed_addr constant [46 x i8] c"(TIOCSWINSZ) symbolic file, ignoring (EINVAL)\00", align 1
@.str.21.113 = private unnamed_addr constant [43 x i8] c"(FIONREAD) symbolic file, incomplete model\00", align 1
@.str.22.114 = private unnamed_addr constant [44 x i8] c"(MTIOCGET) symbolic file, ignoring (EINVAL)\00", align 1
@.str.23.117 = private unnamed_addr constant [32 x i8] c"symbolic file, ignoring (EBADF)\00", align 1
@.str.24.118 = private unnamed_addr constant [17 x i8] c"ignoring (EPERM)\00", align 1
@.str.25.119 = private unnamed_addr constant [18 x i8] c"ignoring (ENOENT)\00", align 1
@.str.126 = private unnamed_addr constant [8 x i8] c"IGNORED\00", align 1
@.str.1.127 = private unnamed_addr constant [16 x i8] c"overshift error\00", align 1
@.str.2.128 = private unnamed_addr constant [14 x i8] c"overshift.err\00", align 1

@__getdents64 = dso_local alias i64 (i32, i8*, i64), i64 (i32, i8*, i64)* @getdents64

; Function Attrs: noinline nounwind uwtable
define dso_local void @klee_init_env(i32* %0, i8*** %1) #0 !dbg !596 {
  %3 = alloca i32*, align 8
  %4 = alloca i8***, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8**, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [1024 x i8*], align 16
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i8**, align 8
  %20 = alloca [6 x i8], align 1
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i8*, align 8
  %25 = alloca i8*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i8*, align 8
  %28 = alloca i8*, align 8
  store i32* %0, i32** %3, align 8
  call void @llvm.dbg.declare(metadata i32** %3, metadata !601, metadata !DIExpression()), !dbg !602
  store i8*** %1, i8**** %4, align 8
  call void @llvm.dbg.declare(metadata i8**** %4, metadata !603, metadata !DIExpression()), !dbg !604
  call void @llvm.dbg.declare(metadata i32* %5, metadata !605, metadata !DIExpression()), !dbg !606
  %29 = load i32*, i32** %3, align 8, !dbg !607
  %30 = load i32, i32* %29, align 4, !dbg !608
  store i32 %30, i32* %5, align 4, !dbg !606
  call void @llvm.dbg.declare(metadata i8*** %6, metadata !609, metadata !DIExpression()), !dbg !610
  %31 = load i8***, i8**** %4, align 8, !dbg !611
  %32 = load i8**, i8*** %31, align 8, !dbg !612
  store i8** %32, i8*** %6, align 8, !dbg !610
  call void @llvm.dbg.declare(metadata i32* %7, metadata !613, metadata !DIExpression()), !dbg !614
  store i32 0, i32* %7, align 4, !dbg !614
  call void @llvm.dbg.declare(metadata i32* %8, metadata !615, metadata !DIExpression()), !dbg !616
  call void @llvm.dbg.declare(metadata [1024 x i8*]* %9, metadata !617, metadata !DIExpression()), !dbg !621
  call void @llvm.dbg.declare(metadata i32* %10, metadata !622, metadata !DIExpression()), !dbg !623
  call void @llvm.dbg.declare(metadata i32* %11, metadata !624, metadata !DIExpression()), !dbg !625
  call void @llvm.dbg.declare(metadata i32* %12, metadata !626, metadata !DIExpression()), !dbg !627
  call void @llvm.dbg.declare(metadata i32* %13, metadata !628, metadata !DIExpression()), !dbg !629
  store i32 0, i32* %13, align 4, !dbg !629
  call void @llvm.dbg.declare(metadata i32* %14, metadata !630, metadata !DIExpression()), !dbg !631
  store i32 0, i32* %14, align 4, !dbg !631
  call void @llvm.dbg.declare(metadata i32* %15, metadata !632, metadata !DIExpression()), !dbg !633
  store i32 0, i32* %15, align 4, !dbg !633
  call void @llvm.dbg.declare(metadata i32* %16, metadata !634, metadata !DIExpression()), !dbg !635
  store i32 0, i32* %16, align 4, !dbg !635
  call void @llvm.dbg.declare(metadata i32* %17, metadata !636, metadata !DIExpression()), !dbg !637
  store i32 0, i32* %17, align 4, !dbg !637
  call void @llvm.dbg.declare(metadata i32* %18, metadata !638, metadata !DIExpression()), !dbg !639
  store i32 0, i32* %18, align 4, !dbg !639
  call void @llvm.dbg.declare(metadata i8*** %19, metadata !640, metadata !DIExpression()), !dbg !641
  call void @llvm.dbg.declare(metadata [6 x i8]* %20, metadata !642, metadata !DIExpression()), !dbg !646
  %33 = bitcast [6 x i8]* %20 to i8*, !dbg !646
  %34 = call i8* @memcpy(i8* %33, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__const.klee_init_env.sym_arg_name, i32 0, i32 0), i64 6), !dbg !646
  call void @llvm.dbg.declare(metadata i32* %21, metadata !647, metadata !DIExpression()), !dbg !648
  store i32 0, i32* %21, align 4, !dbg !648
  call void @llvm.dbg.declare(metadata i32* %22, metadata !649, metadata !DIExpression()), !dbg !650
  store i32 0, i32* %22, align 4, !dbg !650
  call void @llvm.dbg.declare(metadata i32* %23, metadata !651, metadata !DIExpression()), !dbg !652
  %35 = getelementptr inbounds [6 x i8], [6 x i8]* %20, i64 0, i64 5, !dbg !653
  store i8 0, i8* %35, align 1, !dbg !654
  %36 = load i32, i32* %5, align 4, !dbg !655
  %37 = icmp eq i32 %36, 2, !dbg !657
  br i1 %37, label %38, label %45, !dbg !658

38:                                               ; preds = %2
  %39 = load i8**, i8*** %6, align 8, !dbg !659
  %40 = getelementptr inbounds i8*, i8** %39, i64 1, !dbg !659
  %41 = load i8*, i8** %40, align 8, !dbg !659
  %42 = call i32 @__streq(i8* %41, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0)), !dbg !660
  %43 = icmp ne i32 %42, 0, !dbg !660
  br i1 %43, label %44, label %45, !dbg !661

44:                                               ; preds = %38
  call void @__emit_error(i8* getelementptr inbounds ([964 x i8], [964 x i8]* @.str.1, i64 0, i64 0)), !dbg !662
  br label %45, !dbg !664

45:                                               ; preds = %44, %38, %2
  br label %46, !dbg !665

46:                                               ; preds = %404, %45
  %47 = load i32, i32* %22, align 4, !dbg !666
  %48 = load i32, i32* %5, align 4, !dbg !667
  %49 = icmp slt i32 %47, %48, !dbg !668
  br i1 %49, label %50, label %405, !dbg !665

50:                                               ; preds = %46
  %51 = load i8**, i8*** %6, align 8, !dbg !669
  %52 = load i32, i32* %22, align 4, !dbg !672
  %53 = sext i32 %52 to i64, !dbg !669
  %54 = getelementptr inbounds i8*, i8** %51, i64 %53, !dbg !669
  %55 = load i8*, i8** %54, align 8, !dbg !669
  %56 = call i32 @__streq(i8* %55, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0)), !dbg !673
  %57 = icmp ne i32 %56, 0, !dbg !673
  br i1 %57, label %66, label %58, !dbg !674

58:                                               ; preds = %50
  %59 = load i8**, i8*** %6, align 8, !dbg !675
  %60 = load i32, i32* %22, align 4, !dbg !676
  %61 = sext i32 %60 to i64, !dbg !675
  %62 = getelementptr inbounds i8*, i8** %59, i64 %61, !dbg !675
  %63 = load i8*, i8** %62, align 8, !dbg !675
  %64 = call i32 @__streq(i8* %63, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0)), !dbg !677
  %65 = icmp ne i32 %64, 0, !dbg !677
  br i1 %65, label %66, label %103, !dbg !678

66:                                               ; preds = %58, %50
  call void @llvm.dbg.declare(metadata i8** %24, metadata !679, metadata !DIExpression()), !dbg !681
  store i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4, i64 0, i64 0), i8** %24, align 8, !dbg !681
  %67 = load i32, i32* %22, align 4, !dbg !682
  %68 = add nsw i32 %67, 1, !dbg !682
  store i32 %68, i32* %22, align 4, !dbg !682
  %69 = load i32, i32* %5, align 4, !dbg !684
  %70 = icmp eq i32 %68, %69, !dbg !685
  br i1 %70, label %71, label %73, !dbg !686

71:                                               ; preds = %66
  %72 = load i8*, i8** %24, align 8, !dbg !687
  call void @__emit_error(i8* %72), !dbg !688
  br label %73, !dbg !688

73:                                               ; preds = %71, %66
  %74 = load i8**, i8*** %6, align 8, !dbg !689
  %75 = load i32, i32* %22, align 4, !dbg !690
  %76 = add nsw i32 %75, 1, !dbg !690
  store i32 %76, i32* %22, align 4, !dbg !690
  %77 = sext i32 %75 to i64, !dbg !689
  %78 = getelementptr inbounds i8*, i8** %74, i64 %77, !dbg !689
  %79 = load i8*, i8** %78, align 8, !dbg !689
  %80 = load i8*, i8** %24, align 8, !dbg !691
  %81 = call i64 @__str_to_int(i8* %79, i8* %80), !dbg !692
  %82 = trunc i64 %81 to i32, !dbg !692
  store i32 %82, i32* %10, align 4, !dbg !693
  %83 = load i32, i32* %21, align 4, !dbg !694
  %84 = icmp ugt i32 %83, 99, !dbg !696
  br i1 %84, label %85, label %86, !dbg !697

85:                                               ; preds = %73
  call void @__emit_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.5, i64 0, i64 0)), !dbg !698
  br label %86, !dbg !698

86:                                               ; preds = %85, %73
  %87 = load i32, i32* %21, align 4, !dbg !699
  %88 = udiv i32 %87, 10, !dbg !700
  %89 = add i32 48, %88, !dbg !701
  %90 = trunc i32 %89 to i8, !dbg !702
  %91 = getelementptr inbounds [6 x i8], [6 x i8]* %20, i64 0, i64 3, !dbg !703
  store i8 %90, i8* %91, align 1, !dbg !704
  %92 = load i32, i32* %21, align 4, !dbg !705
  %93 = urem i32 %92, 10, !dbg !706
  %94 = add i32 48, %93, !dbg !707
  %95 = trunc i32 %94 to i8, !dbg !708
  %96 = getelementptr inbounds [6 x i8], [6 x i8]* %20, i64 0, i64 4, !dbg !709
  store i8 %95, i8* %96, align 1, !dbg !710
  %97 = load i32, i32* %21, align 4, !dbg !711
  %98 = add i32 %97, 1, !dbg !711
  store i32 %98, i32* %21, align 4, !dbg !711
  %99 = getelementptr inbounds [1024 x i8*], [1024 x i8*]* %9, i64 0, i64 0, !dbg !712
  %100 = load i32, i32* %10, align 4, !dbg !713
  %101 = getelementptr inbounds [6 x i8], [6 x i8]* %20, i64 0, i64 0, !dbg !714
  %102 = call i8* @__get_sym_str(i32 %100, i8* %101), !dbg !715
  call void @__add_arg(i32* %7, i8** %99, i8* %102, i32 1024), !dbg !716
  br label %404, !dbg !717

103:                                              ; preds = %58
  %104 = load i8**, i8*** %6, align 8, !dbg !718
  %105 = load i32, i32* %22, align 4, !dbg !720
  %106 = sext i32 %105 to i64, !dbg !718
  %107 = getelementptr inbounds i8*, i8** %104, i64 %106, !dbg !718
  %108 = load i8*, i8** %107, align 8, !dbg !718
  %109 = call i32 @__streq(i8* %108, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0)), !dbg !721
  %110 = icmp ne i32 %109, 0, !dbg !721
  br i1 %110, label %119, label %111, !dbg !722

111:                                              ; preds = %103
  %112 = load i8**, i8*** %6, align 8, !dbg !723
  %113 = load i32, i32* %22, align 4, !dbg !724
  %114 = sext i32 %113 to i64, !dbg !723
  %115 = getelementptr inbounds i8*, i8** %112, i64 %114, !dbg !723
  %116 = load i8*, i8** %115, align 8, !dbg !723
  %117 = call i32 @__streq(i8* %116, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0)), !dbg !725
  %118 = icmp ne i32 %117, 0, !dbg !725
  br i1 %118, label %119, label %199, !dbg !726

119:                                              ; preds = %111, %103
  call void @llvm.dbg.declare(metadata i8** %25, metadata !727, metadata !DIExpression()), !dbg !729
  store i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.8, i64 0, i64 0), i8** %25, align 8, !dbg !729
  %120 = load i32, i32* %22, align 4, !dbg !730
  %121 = add nsw i32 %120, 3, !dbg !732
  %122 = load i32, i32* %5, align 4, !dbg !733
  %123 = icmp sge i32 %121, %122, !dbg !734
  br i1 %123, label %124, label %126, !dbg !735

124:                                              ; preds = %119
  %125 = load i8*, i8** %25, align 8, !dbg !736
  call void @__emit_error(i8* %125), !dbg !737
  br label %126, !dbg !737

126:                                              ; preds = %124, %119
  %127 = load i32, i32* %22, align 4, !dbg !738
  %128 = add nsw i32 %127, 1, !dbg !738
  store i32 %128, i32* %22, align 4, !dbg !738
  %129 = load i8**, i8*** %6, align 8, !dbg !739
  %130 = load i32, i32* %22, align 4, !dbg !740
  %131 = add nsw i32 %130, 1, !dbg !740
  store i32 %131, i32* %22, align 4, !dbg !740
  %132 = sext i32 %130 to i64, !dbg !739
  %133 = getelementptr inbounds i8*, i8** %129, i64 %132, !dbg !739
  %134 = load i8*, i8** %133, align 8, !dbg !739
  %135 = load i8*, i8** %25, align 8, !dbg !741
  %136 = call i64 @__str_to_int(i8* %134, i8* %135), !dbg !742
  %137 = trunc i64 %136 to i32, !dbg !742
  store i32 %137, i32* %11, align 4, !dbg !743
  %138 = load i8**, i8*** %6, align 8, !dbg !744
  %139 = load i32, i32* %22, align 4, !dbg !745
  %140 = add nsw i32 %139, 1, !dbg !745
  store i32 %140, i32* %22, align 4, !dbg !745
  %141 = sext i32 %139 to i64, !dbg !744
  %142 = getelementptr inbounds i8*, i8** %138, i64 %141, !dbg !744
  %143 = load i8*, i8** %142, align 8, !dbg !744
  %144 = load i8*, i8** %25, align 8, !dbg !746
  %145 = call i64 @__str_to_int(i8* %143, i8* %144), !dbg !747
  %146 = trunc i64 %145 to i32, !dbg !747
  store i32 %146, i32* %12, align 4, !dbg !748
  %147 = load i8**, i8*** %6, align 8, !dbg !749
  %148 = load i32, i32* %22, align 4, !dbg !750
  %149 = add nsw i32 %148, 1, !dbg !750
  store i32 %149, i32* %22, align 4, !dbg !750
  %150 = sext i32 %148 to i64, !dbg !749
  %151 = getelementptr inbounds i8*, i8** %147, i64 %150, !dbg !749
  %152 = load i8*, i8** %151, align 8, !dbg !749
  %153 = load i8*, i8** %25, align 8, !dbg !751
  %154 = call i64 @__str_to_int(i8* %152, i8* %153), !dbg !752
  %155 = trunc i64 %154 to i32, !dbg !752
  store i32 %155, i32* %10, align 4, !dbg !753
  %156 = load i32, i32* %11, align 4, !dbg !754
  %157 = load i32, i32* %12, align 4, !dbg !756
  %158 = icmp ugt i32 %156, %157, !dbg !757
  br i1 %158, label %164, label %159, !dbg !758

159:                                              ; preds = %126
  %160 = load i32, i32* %11, align 4, !dbg !759
  %161 = icmp eq i32 %160, 0, !dbg !760
  %162 = load i32, i32* %12, align 4
  %163 = icmp eq i32 %162, 0
  %or.cond = and i1 %161, %163, !dbg !761
  br i1 %or.cond, label %164, label %165, !dbg !761

164:                                              ; preds = %159, %126
  call void @__emit_error(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.9, i64 0, i64 0)), !dbg !762
  br label %165, !dbg !762

165:                                              ; preds = %164, %159
  %166 = load i32, i32* %11, align 4, !dbg !763
  %167 = load i32, i32* %12, align 4, !dbg !764
  %168 = add i32 %167, 1, !dbg !765
  %169 = call i32 @klee_range(i32 %166, i32 %168, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0)), !dbg !766
  store i32 %169, i32* %8, align 4, !dbg !767
  %170 = load i32, i32* %21, align 4, !dbg !768
  %171 = load i32, i32* %12, align 4, !dbg !770
  %172 = add i32 %170, %171, !dbg !771
  %173 = icmp ugt i32 %172, 99, !dbg !772
  br i1 %173, label %174, label %175, !dbg !773

174:                                              ; preds = %165
  call void @__emit_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.5, i64 0, i64 0)), !dbg !774
  br label %175, !dbg !774

175:                                              ; preds = %174, %165
  store i32 0, i32* %23, align 4, !dbg !775
  br label %176, !dbg !777

176:                                              ; preds = %180, %175
  %177 = load i32, i32* %23, align 4, !dbg !778
  %178 = load i32, i32* %8, align 4, !dbg !780
  %179 = icmp slt i32 %177, %178, !dbg !781
  br i1 %179, label %180, label %404, !dbg !782

180:                                              ; preds = %176
  %181 = load i32, i32* %21, align 4, !dbg !783
  %182 = udiv i32 %181, 10, !dbg !785
  %183 = add i32 48, %182, !dbg !786
  %184 = trunc i32 %183 to i8, !dbg !787
  %185 = getelementptr inbounds [6 x i8], [6 x i8]* %20, i64 0, i64 3, !dbg !788
  store i8 %184, i8* %185, align 1, !dbg !789
  %186 = load i32, i32* %21, align 4, !dbg !790
  %187 = urem i32 %186, 10, !dbg !791
  %188 = add i32 48, %187, !dbg !792
  %189 = trunc i32 %188 to i8, !dbg !793
  %190 = getelementptr inbounds [6 x i8], [6 x i8]* %20, i64 0, i64 4, !dbg !794
  store i8 %189, i8* %190, align 1, !dbg !795
  %191 = load i32, i32* %21, align 4, !dbg !796
  %192 = add i32 %191, 1, !dbg !796
  store i32 %192, i32* %21, align 4, !dbg !796
  %193 = getelementptr inbounds [1024 x i8*], [1024 x i8*]* %9, i64 0, i64 0, !dbg !797
  %194 = load i32, i32* %10, align 4, !dbg !798
  %195 = getelementptr inbounds [6 x i8], [6 x i8]* %20, i64 0, i64 0, !dbg !799
  %196 = call i8* @__get_sym_str(i32 %194, i8* %195), !dbg !800
  call void @__add_arg(i32* %7, i8** %193, i8* %196, i32 1024), !dbg !801
  %197 = load i32, i32* %23, align 4, !dbg !802
  %198 = add nsw i32 %197, 1, !dbg !802
  store i32 %198, i32* %23, align 4, !dbg !802
  br label %176, !dbg !803, !llvm.loop !804

199:                                              ; preds = %111
  %200 = load i8**, i8*** %6, align 8, !dbg !806
  %201 = load i32, i32* %22, align 4, !dbg !808
  %202 = sext i32 %201 to i64, !dbg !806
  %203 = getelementptr inbounds i8*, i8** %200, i64 %202, !dbg !806
  %204 = load i8*, i8** %203, align 8, !dbg !806
  %205 = call i32 @__streq(i8* %204, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0)), !dbg !809
  %206 = icmp ne i32 %205, 0, !dbg !809
  br i1 %206, label %215, label %207, !dbg !810

207:                                              ; preds = %199
  %208 = load i8**, i8*** %6, align 8, !dbg !811
  %209 = load i32, i32* %22, align 4, !dbg !812
  %210 = sext i32 %209 to i64, !dbg !811
  %211 = getelementptr inbounds i8*, i8** %208, i64 %210, !dbg !811
  %212 = load i8*, i8** %211, align 8, !dbg !811
  %213 = call i32 @__streq(i8* %212, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0)), !dbg !813
  %214 = icmp ne i32 %213, 0, !dbg !813
  br i1 %214, label %215, label %254, !dbg !814

215:                                              ; preds = %207, %199
  call void @llvm.dbg.declare(metadata i8** %26, metadata !815, metadata !DIExpression()), !dbg !817
  store i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.13, i64 0, i64 0), i8** %26, align 8, !dbg !817
  %216 = load i32, i32* %22, align 4, !dbg !818
  %217 = add nsw i32 %216, 2, !dbg !820
  %218 = load i32, i32* %5, align 4, !dbg !821
  %219 = icmp sge i32 %217, %218, !dbg !822
  br i1 %219, label %220, label %222, !dbg !823

220:                                              ; preds = %215
  %221 = load i8*, i8** %26, align 8, !dbg !824
  call void @__emit_error(i8* %221), !dbg !825
  br label %222, !dbg !825

222:                                              ; preds = %220, %215
  %223 = load i32, i32* %13, align 4, !dbg !826
  %224 = icmp ne i32 %223, 0, !dbg !828
  br i1 %224, label %225, label %226, !dbg !829

225:                                              ; preds = %222
  call void @__emit_error(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.14, i64 0, i64 0)), !dbg !830
  br label %226, !dbg !830

226:                                              ; preds = %225, %222
  %227 = load i32, i32* %22, align 4, !dbg !831
  %228 = add nsw i32 %227, 1, !dbg !831
  store i32 %228, i32* %22, align 4, !dbg !831
  %229 = load i8**, i8*** %6, align 8, !dbg !832
  %230 = load i32, i32* %22, align 4, !dbg !833
  %231 = add nsw i32 %230, 1, !dbg !833
  store i32 %231, i32* %22, align 4, !dbg !833
  %232 = sext i32 %230 to i64, !dbg !832
  %233 = getelementptr inbounds i8*, i8** %229, i64 %232, !dbg !832
  %234 = load i8*, i8** %233, align 8, !dbg !832
  %235 = load i8*, i8** %26, align 8, !dbg !834
  %236 = call i64 @__str_to_int(i8* %234, i8* %235), !dbg !835
  %237 = trunc i64 %236 to i32, !dbg !835
  store i32 %237, i32* %13, align 4, !dbg !836
  %238 = load i8**, i8*** %6, align 8, !dbg !837
  %239 = load i32, i32* %22, align 4, !dbg !838
  %240 = add nsw i32 %239, 1, !dbg !838
  store i32 %240, i32* %22, align 4, !dbg !838
  %241 = sext i32 %239 to i64, !dbg !837
  %242 = getelementptr inbounds i8*, i8** %238, i64 %241, !dbg !837
  %243 = load i8*, i8** %242, align 8, !dbg !837
  %244 = load i8*, i8** %26, align 8, !dbg !839
  %245 = call i64 @__str_to_int(i8* %243, i8* %244), !dbg !840
  %246 = trunc i64 %245 to i32, !dbg !840
  store i32 %246, i32* %14, align 4, !dbg !841
  %247 = load i32, i32* %13, align 4, !dbg !842
  %248 = icmp eq i32 %247, 0, !dbg !844
  br i1 %248, label %249, label %250, !dbg !845

249:                                              ; preds = %226
  call void @__emit_error(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.15, i64 0, i64 0)), !dbg !846
  br label %250, !dbg !846

250:                                              ; preds = %249, %226
  %251 = load i32, i32* %14, align 4, !dbg !847
  %252 = icmp eq i32 %251, 0, !dbg !849
  br i1 %252, label %253, label %404, !dbg !850

253:                                              ; preds = %250
  call void @__emit_error(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.16, i64 0, i64 0)), !dbg !851
  br label %404, !dbg !851

254:                                              ; preds = %207
  %255 = load i8**, i8*** %6, align 8, !dbg !852
  %256 = load i32, i32* %22, align 4, !dbg !854
  %257 = sext i32 %256 to i64, !dbg !852
  %258 = getelementptr inbounds i8*, i8** %255, i64 %257, !dbg !852
  %259 = load i8*, i8** %258, align 8, !dbg !852
  %260 = call i32 @__streq(i8* %259, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0)), !dbg !855
  %261 = icmp ne i32 %260, 0, !dbg !855
  br i1 %261, label %270, label %262, !dbg !856

262:                                              ; preds = %254
  %263 = load i8**, i8*** %6, align 8, !dbg !857
  %264 = load i32, i32* %22, align 4, !dbg !858
  %265 = sext i32 %264 to i64, !dbg !857
  %266 = getelementptr inbounds i8*, i8** %263, i64 %265, !dbg !857
  %267 = load i8*, i8** %266, align 8, !dbg !857
  %268 = call i32 @__streq(i8* %267, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0)), !dbg !859
  %269 = icmp ne i32 %268, 0, !dbg !859
  br i1 %269, label %270, label %287, !dbg !860

270:                                              ; preds = %262, %254
  call void @llvm.dbg.declare(metadata i8** %27, metadata !861, metadata !DIExpression()), !dbg !863
  store i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.19, i64 0, i64 0), i8** %27, align 8, !dbg !863
  %271 = load i32, i32* %22, align 4, !dbg !864
  %272 = add nsw i32 %271, 1, !dbg !864
  store i32 %272, i32* %22, align 4, !dbg !864
  %273 = load i32, i32* %5, align 4, !dbg !866
  %274 = icmp eq i32 %272, %273, !dbg !867
  br i1 %274, label %275, label %277, !dbg !868

275:                                              ; preds = %270
  %276 = load i8*, i8** %27, align 8, !dbg !869
  call void @__emit_error(i8* %276), !dbg !870
  br label %277, !dbg !870

277:                                              ; preds = %275, %270
  %278 = load i8**, i8*** %6, align 8, !dbg !871
  %279 = load i32, i32* %22, align 4, !dbg !872
  %280 = add nsw i32 %279, 1, !dbg !872
  store i32 %280, i32* %22, align 4, !dbg !872
  %281 = sext i32 %279 to i64, !dbg !871
  %282 = getelementptr inbounds i8*, i8** %278, i64 %281, !dbg !871
  %283 = load i8*, i8** %282, align 8, !dbg !871
  %284 = load i8*, i8** %27, align 8, !dbg !873
  %285 = call i64 @__str_to_int(i8* %283, i8* %284), !dbg !874
  %286 = trunc i64 %285 to i32, !dbg !874
  store i32 %286, i32* %15, align 4, !dbg !875
  br label %404, !dbg !876

287:                                              ; preds = %262
  %288 = load i8**, i8*** %6, align 8, !dbg !877
  %289 = load i32, i32* %22, align 4, !dbg !879
  %290 = sext i32 %289 to i64, !dbg !877
  %291 = getelementptr inbounds i8*, i8** %288, i64 %290, !dbg !877
  %292 = load i8*, i8** %291, align 8, !dbg !877
  %293 = call i32 @__streq(i8* %292, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0)), !dbg !880
  %294 = icmp ne i32 %293, 0, !dbg !880
  br i1 %294, label %303, label %295, !dbg !881

295:                                              ; preds = %287
  %296 = load i8**, i8*** %6, align 8, !dbg !882
  %297 = load i32, i32* %22, align 4, !dbg !883
  %298 = sext i32 %297 to i64, !dbg !882
  %299 = getelementptr inbounds i8*, i8** %296, i64 %298, !dbg !882
  %300 = load i8*, i8** %299, align 8, !dbg !882
  %301 = call i32 @__streq(i8* %300, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21, i64 0, i64 0)), !dbg !884
  %302 = icmp ne i32 %301, 0, !dbg !884
  br i1 %302, label %303, label %306, !dbg !885

303:                                              ; preds = %295, %287
  store i32 1, i32* %16, align 4, !dbg !886
  %304 = load i32, i32* %22, align 4, !dbg !888
  %305 = add nsw i32 %304, 1, !dbg !888
  store i32 %305, i32* %22, align 4, !dbg !888
  br label %404, !dbg !889

306:                                              ; preds = %295
  %307 = load i8**, i8*** %6, align 8, !dbg !890
  %308 = load i32, i32* %22, align 4, !dbg !892
  %309 = sext i32 %308 to i64, !dbg !890
  %310 = getelementptr inbounds i8*, i8** %307, i64 %309, !dbg !890
  %311 = load i8*, i8** %310, align 8, !dbg !890
  %312 = call i32 @__streq(i8* %311, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0)), !dbg !893
  %313 = icmp ne i32 %312, 0, !dbg !893
  br i1 %313, label %322, label %314, !dbg !894

314:                                              ; preds = %306
  %315 = load i8**, i8*** %6, align 8, !dbg !895
  %316 = load i32, i32* %22, align 4, !dbg !896
  %317 = sext i32 %316 to i64, !dbg !895
  %318 = getelementptr inbounds i8*, i8** %315, i64 %317, !dbg !895
  %319 = load i8*, i8** %318, align 8, !dbg !895
  %320 = call i32 @__streq(i8* %319, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i64 0, i64 0)), !dbg !897
  %321 = icmp ne i32 %320, 0, !dbg !897
  br i1 %321, label %322, label %325, !dbg !898

322:                                              ; preds = %314, %306
  store i32 1, i32* %17, align 4, !dbg !899
  %323 = load i32, i32* %22, align 4, !dbg !901
  %324 = add nsw i32 %323, 1, !dbg !901
  store i32 %324, i32* %22, align 4, !dbg !901
  br label %404, !dbg !902

325:                                              ; preds = %314
  %326 = load i8**, i8*** %6, align 8, !dbg !903
  %327 = load i32, i32* %22, align 4, !dbg !905
  %328 = sext i32 %327 to i64, !dbg !903
  %329 = getelementptr inbounds i8*, i8** %326, i64 %328, !dbg !903
  %330 = load i8*, i8** %329, align 8, !dbg !903
  %331 = call i32 @__streq(i8* %330, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i64 0, i64 0)), !dbg !906
  %332 = icmp ne i32 %331, 0, !dbg !906
  br i1 %332, label %341, label %333, !dbg !907

333:                                              ; preds = %325
  %334 = load i8**, i8*** %6, align 8, !dbg !908
  %335 = load i32, i32* %22, align 4, !dbg !909
  %336 = sext i32 %335 to i64, !dbg !908
  %337 = getelementptr inbounds i8*, i8** %334, i64 %336, !dbg !908
  %338 = load i8*, i8** %337, align 8, !dbg !908
  %339 = call i32 @__streq(i8* %338, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0)), !dbg !910
  %340 = icmp ne i32 %339, 0, !dbg !910
  br i1 %340, label %341, label %344, !dbg !911

341:                                              ; preds = %333, %325
  store i32 1, i32* %18, align 4, !dbg !912
  %342 = load i32, i32* %22, align 4, !dbg !914
  %343 = add nsw i32 %342, 1, !dbg !914
  store i32 %343, i32* %22, align 4, !dbg !914
  br label %404, !dbg !915

344:                                              ; preds = %333
  %345 = load i8**, i8*** %6, align 8, !dbg !916
  %346 = load i32, i32* %22, align 4, !dbg !918
  %347 = sext i32 %346 to i64, !dbg !916
  %348 = getelementptr inbounds i8*, i8** %345, i64 %347, !dbg !916
  %349 = load i8*, i8** %348, align 8, !dbg !916
  %350 = call i32 @__streq(i8* %349, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i64 0, i64 0)), !dbg !919
  %351 = icmp ne i32 %350, 0, !dbg !919
  br i1 %351, label %360, label %352, !dbg !920

352:                                              ; preds = %344
  %353 = load i8**, i8*** %6, align 8, !dbg !921
  %354 = load i32, i32* %22, align 4, !dbg !922
  %355 = sext i32 %354 to i64, !dbg !921
  %356 = getelementptr inbounds i8*, i8** %353, i64 %355, !dbg !921
  %357 = load i8*, i8** %356, align 8, !dbg !921
  %358 = call i32 @__streq(i8* %357, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i64 0, i64 0)), !dbg !923
  %359 = icmp ne i32 %358, 0, !dbg !923
  br i1 %359, label %360, label %363, !dbg !924

360:                                              ; preds = %352, %344
  %361 = load i32, i32* %22, align 4, !dbg !925
  %362 = add nsw i32 %361, 2, !dbg !925
  store i32 %362, i32* %22, align 4, !dbg !925
  br label %404, !dbg !927

363:                                              ; preds = %352
  %364 = load i8**, i8*** %6, align 8, !dbg !928
  %365 = load i32, i32* %22, align 4, !dbg !930
  %366 = sext i32 %365 to i64, !dbg !928
  %367 = getelementptr inbounds i8*, i8** %364, i64 %366, !dbg !928
  %368 = load i8*, i8** %367, align 8, !dbg !928
  %369 = call i32 @__streq(i8* %368, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i64 0, i64 0)), !dbg !931
  %370 = icmp ne i32 %369, 0, !dbg !931
  br i1 %370, label %379, label %371, !dbg !932

371:                                              ; preds = %363
  %372 = load i8**, i8*** %6, align 8, !dbg !933
  %373 = load i32, i32* %22, align 4, !dbg !934
  %374 = sext i32 %373 to i64, !dbg !933
  %375 = getelementptr inbounds i8*, i8** %372, i64 %374, !dbg !933
  %376 = load i8*, i8** %375, align 8, !dbg !933
  %377 = call i32 @__streq(i8* %376, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i64 0, i64 0)), !dbg !935
  %378 = icmp ne i32 %377, 0, !dbg !935
  br i1 %378, label %379, label %396, !dbg !936

379:                                              ; preds = %371, %363
  call void @llvm.dbg.declare(metadata i8** %28, metadata !937, metadata !DIExpression()), !dbg !939
  store i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.30, i64 0, i64 0), i8** %28, align 8, !dbg !939
  %380 = load i32, i32* %22, align 4, !dbg !940
  %381 = add nsw i32 %380, 1, !dbg !940
  store i32 %381, i32* %22, align 4, !dbg !940
  %382 = load i32, i32* %5, align 4, !dbg !942
  %383 = icmp eq i32 %381, %382, !dbg !943
  br i1 %383, label %384, label %386, !dbg !944

384:                                              ; preds = %379
  %385 = load i8*, i8** %28, align 8, !dbg !945
  call void @__emit_error(i8* %385), !dbg !946
  br label %386, !dbg !946

386:                                              ; preds = %384, %379
  %387 = load i8**, i8*** %6, align 8, !dbg !947
  %388 = load i32, i32* %22, align 4, !dbg !948
  %389 = add nsw i32 %388, 1, !dbg !948
  store i32 %389, i32* %22, align 4, !dbg !948
  %390 = sext i32 %388 to i64, !dbg !947
  %391 = getelementptr inbounds i8*, i8** %387, i64 %390, !dbg !947
  %392 = load i8*, i8** %391, align 8, !dbg !947
  %393 = load i8*, i8** %28, align 8, !dbg !949
  %394 = call i64 @__str_to_int(i8* %392, i8* %393), !dbg !950
  %395 = trunc i64 %394 to i32, !dbg !950
  store i32 %395, i32* %18, align 4, !dbg !951
  br label %404, !dbg !952

396:                                              ; preds = %371
  %397 = getelementptr inbounds [1024 x i8*], [1024 x i8*]* %9, i64 0, i64 0, !dbg !953
  %398 = load i8**, i8*** %6, align 8, !dbg !955
  %399 = load i32, i32* %22, align 4, !dbg !956
  %400 = add nsw i32 %399, 1, !dbg !956
  store i32 %400, i32* %22, align 4, !dbg !956
  %401 = sext i32 %399 to i64, !dbg !955
  %402 = getelementptr inbounds i8*, i8** %398, i64 %401, !dbg !955
  %403 = load i8*, i8** %402, align 8, !dbg !955
  call void @__add_arg(i32* %7, i8** %397, i8* %403, i32 1024), !dbg !957
  br label %404

404:                                              ; preds = %176, %277, %322, %360, %396, %386, %341, %303, %250, %253, %86
  br label %46, !dbg !665, !llvm.loop !958

405:                                              ; preds = %46
  %406 = load i32, i32* %7, align 4, !dbg !960
  %407 = add nsw i32 %406, 1, !dbg !961
  %408 = sext i32 %407 to i64, !dbg !962
  %409 = mul i64 %408, 8, !dbg !963
  %410 = call noalias i8* @malloc(i64 %409) #15, !dbg !964
  %411 = bitcast i8* %410 to i8**, !dbg !965
  store i8** %411, i8*** %19, align 8, !dbg !966
  %412 = load i8**, i8*** %19, align 8, !dbg !967
  %413 = icmp ne i8** %412, null, !dbg !967
  br i1 %413, label %415, label %414, !dbg !969

414:                                              ; preds = %405
  call void @__emit_error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.31, i64 0, i64 0)), !dbg !970
  br label %415, !dbg !970

415:                                              ; preds = %414, %405
  %416 = load i8**, i8*** %19, align 8, !dbg !971
  %417 = bitcast i8** %416 to i8*, !dbg !971
  call void @klee_mark_global(i8* %417), !dbg !972
  %418 = load i8**, i8*** %19, align 8, !dbg !973
  %419 = bitcast i8** %418 to i8*, !dbg !974
  %420 = getelementptr inbounds [1024 x i8*], [1024 x i8*]* %9, i64 0, i64 0, !dbg !974
  %421 = bitcast i8** %420 to i8*, !dbg !974
  %422 = load i32, i32* %7, align 4, !dbg !975
  %423 = sext i32 %422 to i64, !dbg !975
  %424 = mul i64 %423, 8, !dbg !976
  %425 = call i8* @memcpy(i8* %419, i8* %421, i64 %424), !dbg !974
  %426 = load i8**, i8*** %19, align 8, !dbg !977
  %427 = load i32, i32* %7, align 4, !dbg !978
  %428 = sext i32 %427 to i64, !dbg !977
  %429 = getelementptr inbounds i8*, i8** %426, i64 %428, !dbg !977
  store i8* null, i8** %429, align 8, !dbg !979
  %430 = load i32, i32* %7, align 4, !dbg !980
  %431 = load i32*, i32** %3, align 8, !dbg !981
  store i32 %430, i32* %431, align 4, !dbg !982
  %432 = load i8**, i8*** %19, align 8, !dbg !983
  %433 = load i8***, i8**** %4, align 8, !dbg !984
  store i8** %432, i8*** %433, align 8, !dbg !985
  %434 = load i32, i32* %13, align 4, !dbg !986
  %435 = load i32, i32* %14, align 4, !dbg !987
  %436 = load i32, i32* %15, align 4, !dbg !988
  %437 = load i32, i32* %16, align 4, !dbg !989
  %438 = load i32, i32* %17, align 4, !dbg !990
  %439 = load i32, i32* %18, align 4, !dbg !991
  call void @klee_init_fds(i32 %434, i32 %435, i32 %436, i32 %437, i32 %438, i32 %439), !dbg !992
  ret void, !dbg !993
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @__streq(i8* %0, i8* %1) #0 !dbg !994 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !997, metadata !DIExpression()), !dbg !998
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !999, metadata !DIExpression()), !dbg !1000
  br label %6, !dbg !1001

6:                                                ; preds = %19, %2
  %7 = load i8*, i8** %4, align 8, !dbg !1002
  %8 = load i8, i8* %7, align 1, !dbg !1003
  %9 = sext i8 %8 to i32, !dbg !1003
  %10 = load i8*, i8** %5, align 8, !dbg !1004
  %11 = load i8, i8* %10, align 1, !dbg !1005
  %12 = sext i8 %11 to i32, !dbg !1005
  %13 = icmp eq i32 %9, %12, !dbg !1006
  br i1 %13, label %14, label %24, !dbg !1001

14:                                               ; preds = %6
  %15 = load i8*, i8** %4, align 8, !dbg !1007
  %16 = load i8, i8* %15, align 1, !dbg !1010
  %17 = icmp ne i8 %16, 0, !dbg !1010
  br i1 %17, label %19, label %18, !dbg !1011

18:                                               ; preds = %14
  store i32 1, i32* %3, align 4, !dbg !1012
  br label %25, !dbg !1012

19:                                               ; preds = %14
  %20 = load i8*, i8** %4, align 8, !dbg !1013
  %21 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !1013
  store i8* %21, i8** %4, align 8, !dbg !1013
  %22 = load i8*, i8** %5, align 8, !dbg !1014
  %23 = getelementptr inbounds i8, i8* %22, i32 1, !dbg !1014
  store i8* %23, i8** %5, align 8, !dbg !1014
  br label %6, !dbg !1001, !llvm.loop !1015

24:                                               ; preds = %6
  store i32 0, i32* %3, align 4, !dbg !1017
  br label %25, !dbg !1017

25:                                               ; preds = %24, %18
  %26 = load i32, i32* %3, align 4, !dbg !1018
  ret i32 %26, !dbg !1018
}

; Function Attrs: noinline nounwind uwtable
define internal void @__emit_error(i8* %0) #0 !dbg !1019 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !1022, metadata !DIExpression()), !dbg !1023
  %3 = load i8*, i8** %2, align 8, !dbg !1024
  call void @klee_report_error(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.32, i64 0, i64 0), i32 21, i8* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i64 0, i64 0)) #16, !dbg !1025
  unreachable, !dbg !1025
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @__str_to_int(i8* %0, i8* %1) #0 !dbg !1026 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !1029, metadata !DIExpression()), !dbg !1030
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1031, metadata !DIExpression()), !dbg !1032
  call void @llvm.dbg.declare(metadata i64* %5, metadata !1033, metadata !DIExpression()), !dbg !1034
  store i64 0, i64* %5, align 8, !dbg !1034
  call void @llvm.dbg.declare(metadata i8* %6, metadata !1035, metadata !DIExpression()), !dbg !1036
  %7 = load i8*, i8** %3, align 8, !dbg !1037
  %8 = load i8, i8* %7, align 1, !dbg !1039
  %9 = icmp ne i8 %8, 0, !dbg !1039
  br i1 %9, label %12, label %10, !dbg !1040

10:                                               ; preds = %2
  %11 = load i8*, i8** %4, align 8, !dbg !1041
  call void @__emit_error(i8* %11), !dbg !1042
  br label %12, !dbg !1042

12:                                               ; preds = %10, %2
  br label %13, !dbg !1043

13:                                               ; preds = %36, %12
  %14 = load i8*, i8** %3, align 8, !dbg !1044
  %15 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !1044
  store i8* %15, i8** %3, align 8, !dbg !1044
  %16 = load i8, i8* %14, align 1, !dbg !1045
  store i8 %16, i8* %6, align 1, !dbg !1046
  %17 = icmp ne i8 %16, 0, !dbg !1043
  br i1 %17, label %18, label %37, !dbg !1043

18:                                               ; preds = %13
  %19 = load i8, i8* %6, align 1, !dbg !1047
  %20 = sext i8 %19 to i32, !dbg !1047
  %21 = icmp sge i32 %20, 48, !dbg !1050
  br i1 %21, label %22, label %34, !dbg !1051

22:                                               ; preds = %18
  %23 = load i8, i8* %6, align 1, !dbg !1052
  %24 = sext i8 %23 to i32, !dbg !1052
  %25 = icmp sle i32 %24, 57, !dbg !1053
  br i1 %25, label %26, label %34, !dbg !1054

26:                                               ; preds = %22
  %27 = load i64, i64* %5, align 8, !dbg !1055
  %28 = mul nsw i64 %27, 10, !dbg !1057
  %29 = load i8, i8* %6, align 1, !dbg !1058
  %30 = sext i8 %29 to i32, !dbg !1058
  %31 = sub nsw i32 %30, 48, !dbg !1059
  %32 = sext i32 %31 to i64, !dbg !1060
  %33 = add nsw i64 %28, %32, !dbg !1061
  store i64 %33, i64* %5, align 8, !dbg !1062
  br label %36, !dbg !1063

34:                                               ; preds = %22, %18
  %35 = load i8*, i8** %4, align 8, !dbg !1064
  call void @__emit_error(i8* %35), !dbg !1066
  br label %36

36:                                               ; preds = %34, %26
  br label %13, !dbg !1043, !llvm.loop !1067

37:                                               ; preds = %13
  %38 = load i64, i64* %5, align 8, !dbg !1069
  ret i64 %38, !dbg !1070
}

; Function Attrs: noinline nounwind uwtable
define internal void @__add_arg(i32* %0, i8** %1, i8* %2, i32 %3) #0 !dbg !1071 {
  %5 = alloca i32*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  store i32* %0, i32** %5, align 8
  call void @llvm.dbg.declare(metadata i32** %5, metadata !1074, metadata !DIExpression()), !dbg !1075
  store i8** %1, i8*** %6, align 8
  call void @llvm.dbg.declare(metadata i8*** %6, metadata !1076, metadata !DIExpression()), !dbg !1077
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !1078, metadata !DIExpression()), !dbg !1079
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !1080, metadata !DIExpression()), !dbg !1081
  %9 = load i32*, i32** %5, align 8, !dbg !1082
  %10 = load i32, i32* %9, align 4, !dbg !1084
  %11 = load i32, i32* %8, align 4, !dbg !1085
  %12 = icmp eq i32 %10, %11, !dbg !1086
  br i1 %12, label %13, label %14, !dbg !1087

13:                                               ; preds = %4
  call void @__emit_error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.34, i64 0, i64 0)), !dbg !1088
  br label %24, !dbg !1090

14:                                               ; preds = %4
  %15 = load i8*, i8** %7, align 8, !dbg !1091
  %16 = load i8**, i8*** %6, align 8, !dbg !1093
  %17 = load i32*, i32** %5, align 8, !dbg !1094
  %18 = load i32, i32* %17, align 4, !dbg !1095
  %19 = sext i32 %18 to i64, !dbg !1093
  %20 = getelementptr inbounds i8*, i8** %16, i64 %19, !dbg !1093
  store i8* %15, i8** %20, align 8, !dbg !1096
  %21 = load i32*, i32** %5, align 8, !dbg !1097
  %22 = load i32, i32* %21, align 4, !dbg !1098
  %23 = add nsw i32 %22, 1, !dbg !1098
  store i32 %23, i32* %21, align 4, !dbg !1098
  br label %24

24:                                               ; preds = %14, %13
  ret void, !dbg !1099
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @__get_sym_str(i32 %0, i8* %1) #0 !dbg !1100 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !1103, metadata !DIExpression()), !dbg !1104
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1105, metadata !DIExpression()), !dbg !1106
  call void @llvm.dbg.declare(metadata i32* %5, metadata !1107, metadata !DIExpression()), !dbg !1108
  call void @llvm.dbg.declare(metadata i8** %6, metadata !1109, metadata !DIExpression()), !dbg !1110
  %7 = load i32, i32* %3, align 4, !dbg !1111
  %8 = add nsw i32 %7, 1, !dbg !1112
  %9 = sext i32 %8 to i64, !dbg !1111
  %10 = call noalias i8* @malloc(i64 %9) #15, !dbg !1113
  store i8* %10, i8** %6, align 8, !dbg !1110
  %11 = load i8*, i8** %6, align 8, !dbg !1114
  %12 = icmp ne i8* %11, null, !dbg !1114
  br i1 %12, label %14, label %13, !dbg !1116

13:                                               ; preds = %2
  call void @__emit_error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.31, i64 0, i64 0)), !dbg !1117
  br label %14, !dbg !1117

14:                                               ; preds = %13, %2
  %15 = load i8*, i8** %6, align 8, !dbg !1118
  call void @klee_mark_global(i8* %15), !dbg !1119
  %16 = load i8*, i8** %6, align 8, !dbg !1120
  %17 = load i32, i32* %3, align 4, !dbg !1121
  %18 = add nsw i32 %17, 1, !dbg !1122
  %19 = sext i32 %18 to i64, !dbg !1121
  %20 = load i8*, i8** %4, align 8, !dbg !1123
  call void @klee_make_symbolic(i8* %16, i64 %19, i8* %20), !dbg !1124
  store i32 0, i32* %5, align 4, !dbg !1125
  br label %21, !dbg !1127

21:                                               ; preds = %25, %14
  %22 = load i32, i32* %5, align 4, !dbg !1128
  %23 = load i32, i32* %3, align 4, !dbg !1130
  %24 = icmp slt i32 %22, %23, !dbg !1131
  br i1 %24, label %25, label %36, !dbg !1132

25:                                               ; preds = %21
  %26 = load i8*, i8** %6, align 8, !dbg !1133
  %27 = load i8*, i8** %6, align 8, !dbg !1134
  %28 = load i32, i32* %5, align 4, !dbg !1135
  %29 = sext i32 %28 to i64, !dbg !1134
  %30 = getelementptr inbounds i8, i8* %27, i64 %29, !dbg !1134
  %31 = load i8, i8* %30, align 1, !dbg !1134
  %32 = call i32 @__isprint(i8 signext %31), !dbg !1136
  %33 = sext i32 %32 to i64, !dbg !1136
  call void @klee_posix_prefer_cex(i8* %26, i64 %33), !dbg !1137
  %34 = load i32, i32* %5, align 4, !dbg !1138
  %35 = add nsw i32 %34, 1, !dbg !1138
  store i32 %35, i32* %5, align 4, !dbg !1138
  br label %21, !dbg !1139, !llvm.loop !1140

36:                                               ; preds = %21
  %37 = load i8*, i8** %6, align 8, !dbg !1142
  %38 = load i32, i32* %3, align 4, !dbg !1143
  %39 = sext i32 %38 to i64, !dbg !1142
  %40 = getelementptr inbounds i8, i8* %37, i64 %39, !dbg !1142
  store i8 0, i8* %40, align 1, !dbg !1144
  %41 = load i8*, i8** %6, align 8, !dbg !1145
  ret i8* %41, !dbg !1146
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #3

declare dso_local void @klee_mark_global(i8*) #4

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main(i32 %0, i8** %1, i8** %2) #0 !dbg !1147 {
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8**, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1150, metadata !DIExpression()), !dbg !1151
  store i8** %1, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !1152, metadata !DIExpression()), !dbg !1153
  store i8** %2, i8*** %6, align 8
  call void @llvm.dbg.declare(metadata i8*** %6, metadata !1154, metadata !DIExpression()), !dbg !1155
  call void @klee_init_env(i32* %4, i8*** %5), !dbg !1156
  %7 = load i32, i32* %4, align 4, !dbg !1157
  %8 = load i8**, i8*** %5, align 8, !dbg !1158
  %9 = load i8**, i8*** %6, align 8, !dbg !1159
  %10 = call i32 bitcast (i32 ()* @__klee_posix_wrapped_main to i32 (i32, i8**, i8**)*)(i32 %7, i8** %8, i8** %9), !dbg !1160
  ret i32 %10, !dbg !1161
}

; Function Attrs: noreturn
declare dso_local void @klee_report_error(i8*, i32, i8*, i8*) #5

declare dso_local void @klee_make_symbolic(i8*, i64, i8*) #4

declare dso_local void @klee_posix_prefer_cex(i8*, i64) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @__isprint(i8 signext %0) #0 !dbg !1162 {
  %2 = alloca i8, align 1
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !1165, metadata !DIExpression()), !dbg !1166
  %3 = load i8, i8* %2, align 1, !dbg !1167
  %4 = sext i8 %3 to i32, !dbg !1167
  %5 = icmp sle i32 32, %4, !dbg !1168
  %6 = load i8, i8* %2, align 1, !dbg !1169
  %7 = sext i8 %6 to i32, !dbg !1169
  %8 = icmp sle i32 %7, 126, !dbg !1169
  %9 = select i1 %5, i1 %8, i1 false, !dbg !1169
  %10 = zext i1 %9 to i32, !dbg !1169
  ret i32 %10, !dbg !1170
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @Demo1GenerateAccessKey(%struct._Demo1_Access_Key_PROTOCOL* %0, i8* %1, i8 zeroext %2, %struct._DEMO1_ACCESS_KEY* %3) #6 !dbg !1171 {
  %5 = alloca i64, align 8
  %6 = alloca %struct._Demo1_Access_Key_PROTOCOL*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  %9 = alloca %struct._DEMO1_ACCESS_KEY*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  store %struct._Demo1_Access_Key_PROTOCOL* %0, %struct._Demo1_Access_Key_PROTOCOL** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._Demo1_Access_Key_PROTOCOL** %6, metadata !1172, metadata !DIExpression()), !dbg !1173
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !1174, metadata !DIExpression()), !dbg !1175
  store i8 %2, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !1176, metadata !DIExpression()), !dbg !1177
  store %struct._DEMO1_ACCESS_KEY* %3, %struct._DEMO1_ACCESS_KEY** %9, align 8
  call void @llvm.dbg.declare(metadata %struct._DEMO1_ACCESS_KEY** %9, metadata !1178, metadata !DIExpression()), !dbg !1179
  call void @llvm.dbg.declare(metadata i64* %10, metadata !1180, metadata !DIExpression()), !dbg !1181
  store i64 0, i64* %10, align 8, !dbg !1181
  call void @llvm.dbg.declare(metadata i64* %11, metadata !1182, metadata !DIExpression()), !dbg !1183
  store i64 0, i64* %11, align 8, !dbg !1183
  %12 = load %struct._DEMO1_ACCESS_KEY*, %struct._DEMO1_ACCESS_KEY** %9, align 8, !dbg !1184
  %13 = icmp eq %struct._DEMO1_ACCESS_KEY* %12, null, !dbg !1186
  br i1 %13, label %14, label %15, !dbg !1187

14:                                               ; preds = %4
  store i64 -9223372036854775806, i64* %5, align 8, !dbg !1188
  br label %44, !dbg !1188

15:                                               ; preds = %4
  %16 = load i8, i8* @accessKeyLock, align 1, !dbg !1190
  %17 = zext i8 %16 to i32, !dbg !1190
  %18 = icmp eq i32 %17, 1, !dbg !1192
  br i1 %18, label %19, label %20, !dbg !1193

19:                                               ; preds = %15
  store i64 -9223372036854775800, i64* %5, align 8, !dbg !1194
  br label %44, !dbg !1194

20:                                               ; preds = %15
  %21 = call i32 @rand() #15, !dbg !1196
  %22 = sext i32 %21 to i64, !dbg !1196
  %23 = load %struct._DEMO1_ACCESS_KEY*, %struct._DEMO1_ACCESS_KEY** %9, align 8, !dbg !1197
  %24 = getelementptr inbounds %struct._DEMO1_ACCESS_KEY, %struct._DEMO1_ACCESS_KEY* %23, i32 0, i32 0, !dbg !1198
  %25 = getelementptr inbounds [2 x i64], [2 x i64]* %24, i64 0, i64 0, !dbg !1197
  store i64 %22, i64* %25, align 8, !dbg !1199
  %26 = load i8, i8* %8, align 1, !dbg !1200
  %27 = icmp ne i8 %26, 0, !dbg !1200
  br i1 %27, label %28, label %29, !dbg !1202

28:                                               ; preds = %20
  store i64 -2395670108176482799, i64* %11, align 8, !dbg !1203
  br label %30, !dbg !1205

29:                                               ; preds = %20
  store i64 -2395670108176510803, i64* %11, align 8, !dbg !1206
  br label %30

30:                                               ; preds = %29, %28
  %31 = load i64, i64* %11, align 8, !dbg !1208
  %32 = load %struct._DEMO1_ACCESS_KEY*, %struct._DEMO1_ACCESS_KEY** %9, align 8, !dbg !1209
  %33 = getelementptr inbounds %struct._DEMO1_ACCESS_KEY, %struct._DEMO1_ACCESS_KEY* %32, i32 0, i32 0, !dbg !1210
  %34 = getelementptr inbounds [2 x i64], [2 x i64]* %33, i64 0, i64 1, !dbg !1209
  store i64 %31, i64* %34, align 8, !dbg !1211
  %35 = load %struct._DEMO1_ACCESS_KEY*, %struct._DEMO1_ACCESS_KEY** %9, align 8, !dbg !1212
  %36 = load %struct._DEMO1_ACCESS_KEY*, %struct._DEMO1_ACCESS_KEY** @masterKey, align 8, !dbg !1214
  %37 = icmp ne %struct._DEMO1_ACCESS_KEY* %35, %36, !dbg !1215
  br i1 %37, label %38, label %40, !dbg !1216

38:                                               ; preds = %30
  %39 = load %struct._DEMO1_ACCESS_KEY*, %struct._DEMO1_ACCESS_KEY** %9, align 8, !dbg !1217
  call void @InsertLast(%struct._DEMO1_ACCESS_KEY* %39), !dbg !1219
  br label %42, !dbg !1220

40:                                               ; preds = %30
  %41 = load %struct._DEMO1_ACCESS_KEY*, %struct._DEMO1_ACCESS_KEY** %9, align 8, !dbg !1221
  call void @InsertFirst(%struct._DEMO1_ACCESS_KEY* %41), !dbg !1223
  br label %42

42:                                               ; preds = %40, %38
  %43 = load i64, i64* %10, align 8, !dbg !1224
  store i64 %43, i64* %5, align 8, !dbg !1225
  br label %44, !dbg !1225

44:                                               ; preds = %42, %19, %14
  %45 = load i64, i64* %5, align 8, !dbg !1226
  ret i64 %45, !dbg !1226
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @Demo1ValidateAccessKey(%struct._Demo1_Access_Key_PROTOCOL* %0, i8* %1, %struct._DEMO1_ACCESS_KEY* %2, i8 zeroext %3, i8* %4) #6 !dbg !1227 {
  %6 = alloca i64, align 8
  %7 = alloca %struct._Demo1_Access_Key_PROTOCOL*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %struct._DEMO1_ACCESS_KEY*, align 8
  %10 = alloca i8, align 1
  %11 = alloca i8*, align 8
  store %struct._Demo1_Access_Key_PROTOCOL* %0, %struct._Demo1_Access_Key_PROTOCOL** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._Demo1_Access_Key_PROTOCOL** %7, metadata !1230, metadata !DIExpression()), !dbg !1231
  store i8* %1, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !1232, metadata !DIExpression()), !dbg !1233
  store %struct._DEMO1_ACCESS_KEY* %2, %struct._DEMO1_ACCESS_KEY** %9, align 8
  call void @llvm.dbg.declare(metadata %struct._DEMO1_ACCESS_KEY** %9, metadata !1234, metadata !DIExpression()), !dbg !1235
  store i8 %3, i8* %10, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !1236, metadata !DIExpression()), !dbg !1237
  store i8* %4, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !1238, metadata !DIExpression()), !dbg !1239
  %12 = load i8*, i8** %11, align 8, !dbg !1240
  %13 = icmp eq i8* %12, null, !dbg !1242
  br i1 %13, label %14, label %15, !dbg !1243

14:                                               ; preds = %5
  store i64 -9223372036854775806, i64* %6, align 8, !dbg !1244
  br label %35, !dbg !1244

15:                                               ; preds = %5
  %16 = load i8*, i8** %11, align 8, !dbg !1246
  store i8 0, i8* %16, align 1, !dbg !1247
  %17 = load %struct._DEMO1_ACCESS_KEY*, %struct._DEMO1_ACCESS_KEY** %9, align 8, !dbg !1248
  %18 = icmp eq %struct._DEMO1_ACCESS_KEY* %17, null, !dbg !1250
  br i1 %18, label %19, label %20, !dbg !1251

19:                                               ; preds = %15
  store i64 -9223372036854775806, i64* %6, align 8, !dbg !1252
  br label %35, !dbg !1252

20:                                               ; preds = %15
  %21 = load i8, i8* %10, align 1, !dbg !1254
  %22 = zext i8 %21 to i32, !dbg !1254
  %23 = icmp ne i32 %22, 0, !dbg !1254
  br i1 %23, label %24, label %31, !dbg !1256

24:                                               ; preds = %20
  %25 = load %struct._DEMO1_ACCESS_KEY*, %struct._DEMO1_ACCESS_KEY** %9, align 8, !dbg !1257
  %26 = getelementptr inbounds %struct._DEMO1_ACCESS_KEY, %struct._DEMO1_ACCESS_KEY* %25, i32 0, i32 0, !dbg !1258
  %27 = getelementptr inbounds [2 x i64], [2 x i64]* %26, i64 0, i64 1, !dbg !1257
  %28 = load i64, i64* %27, align 8, !dbg !1257
  %29 = icmp eq i64 %28, -2395670108176510803, !dbg !1259
  br i1 %29, label %30, label %31, !dbg !1260

30:                                               ; preds = %24
  store i64 -9223372036854775806, i64* %6, align 8, !dbg !1261
  br label %35, !dbg !1261

31:                                               ; preds = %24, %20
  %32 = load %struct._DEMO1_ACCESS_KEY*, %struct._DEMO1_ACCESS_KEY** %9, align 8, !dbg !1263
  %33 = call zeroext i8 @DoesKeyExist(%struct._DEMO1_ACCESS_KEY* %32), !dbg !1264
  %34 = load i8*, i8** %11, align 8, !dbg !1265
  store i8 %33, i8* %34, align 1, !dbg !1266
  store i64 0, i64* %6, align 8, !dbg !1267
  br label %35, !dbg !1267

35:                                               ; preds = %31, %30, %19, %14
  %36 = load i64, i64* %6, align 8, !dbg !1268
  ret i64 %36, !dbg !1268
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @DoesKeyExist(%struct._DEMO1_ACCESS_KEY* %0) #6 !dbg !1269 {
  %2 = alloca i8, align 1
  %3 = alloca %struct._DEMO1_ACCESS_KEY*, align 8
  %4 = alloca %struct._LINK*, align 8
  store %struct._DEMO1_ACCESS_KEY* %0, %struct._DEMO1_ACCESS_KEY** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._DEMO1_ACCESS_KEY** %3, metadata !1272, metadata !DIExpression()), !dbg !1273
  call void @llvm.dbg.declare(metadata %struct._LINK** %4, metadata !1274, metadata !DIExpression()), !dbg !1275
  %5 = load %struct._DEMO1_ACCESS_KEY*, %struct._DEMO1_ACCESS_KEY** %3, align 8, !dbg !1276
  %6 = icmp eq %struct._DEMO1_ACCESS_KEY* %5, null, !dbg !1278
  br i1 %6, label %7, label %8, !dbg !1279

7:                                                ; preds = %1
  store i8 0, i8* %2, align 1, !dbg !1280
  br label %31, !dbg !1280

8:                                                ; preds = %1
  %9 = load %struct._LINK*, %struct._LINK** @head, align 8, !dbg !1282
  store %struct._LINK* %9, %struct._LINK** %4, align 8, !dbg !1284
  br label %10, !dbg !1285

10:                                               ; preds = %26, %8
  %11 = load %struct._LINK*, %struct._LINK** %4, align 8, !dbg !1286
  %12 = icmp ne %struct._LINK* %11, null, !dbg !1288
  br i1 %12, label %13, label %30, !dbg !1289

13:                                               ; preds = %10
  %14 = load %struct._DEMO1_ACCESS_KEY*, %struct._DEMO1_ACCESS_KEY** %3, align 8, !dbg !1290
  %15 = getelementptr inbounds %struct._DEMO1_ACCESS_KEY, %struct._DEMO1_ACCESS_KEY* %14, i32 0, i32 0, !dbg !1293
  %16 = getelementptr inbounds [2 x i64], [2 x i64]* %15, i64 0, i64 0, !dbg !1290
  %17 = load i64, i64* %16, align 8, !dbg !1290
  %18 = load %struct._LINK*, %struct._LINK** %4, align 8, !dbg !1294
  %19 = getelementptr inbounds %struct._LINK, %struct._LINK* %18, i32 0, i32 0, !dbg !1295
  %20 = getelementptr inbounds %struct._DEMO1_ACCESS_KEY, %struct._DEMO1_ACCESS_KEY* %19, i32 0, i32 0, !dbg !1296
  %21 = getelementptr inbounds [2 x i64], [2 x i64]* %20, i64 0, i64 0, !dbg !1294
  %22 = load i64, i64* %21, align 8, !dbg !1294
  %23 = icmp eq i64 %17, %22, !dbg !1297
  br i1 %23, label %24, label %25, !dbg !1298

24:                                               ; preds = %13
  store i8 1, i8* %2, align 1, !dbg !1299
  br label %31, !dbg !1299

25:                                               ; preds = %13
  br label %26, !dbg !1301

26:                                               ; preds = %25
  %27 = load %struct._LINK*, %struct._LINK** %4, align 8, !dbg !1302
  %28 = getelementptr inbounds %struct._LINK, %struct._LINK* %27, i32 0, i32 1, !dbg !1303
  %29 = load %struct._LINK*, %struct._LINK** %28, align 8, !dbg !1303
  store %struct._LINK* %29, %struct._LINK** %4, align 8, !dbg !1304
  br label %10, !dbg !1305, !llvm.loop !1306

30:                                               ; preds = %10
  store i8 0, i8* %2, align 1, !dbg !1308
  br label %31, !dbg !1308

31:                                               ; preds = %30, %24, %7
  %32 = load i8, i8* %2, align 1, !dbg !1309
  ret i8 %32, !dbg !1309
}

; Function Attrs: nounwind
declare dso_local i32 @rand() #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @InsertLast(%struct._DEMO1_ACCESS_KEY* %0) #6 !dbg !1310 {
  %2 = alloca %struct._DEMO1_ACCESS_KEY*, align 8
  %3 = alloca %struct._LINK*, align 8
  store %struct._DEMO1_ACCESS_KEY* %0, %struct._DEMO1_ACCESS_KEY** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._DEMO1_ACCESS_KEY** %2, metadata !1313, metadata !DIExpression()), !dbg !1314
  call void @llvm.dbg.declare(metadata %struct._LINK** %3, metadata !1315, metadata !DIExpression()), !dbg !1316
  %4 = call noalias i8* @malloc(i64 32) #15, !dbg !1317
  %5 = bitcast i8* %4 to %struct._LINK*, !dbg !1317
  store %struct._LINK* %5, %struct._LINK** %3, align 8, !dbg !1316
  %6 = load %struct._LINK*, %struct._LINK** %3, align 8, !dbg !1318
  %7 = icmp ne %struct._LINK* %6, null, !dbg !1318
  br i1 %7, label %8, label %9, !dbg !1321

8:                                                ; preds = %1
  br label %10, !dbg !1321

9:                                                ; preds = %1
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1.36, i64 0, i64 0), i32 114, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.InsertLast, i64 0, i64 0)) #17, !dbg !1318
  unreachable, !dbg !1318

10:                                               ; preds = %8
  %11 = load %struct._LINK*, %struct._LINK** %3, align 8, !dbg !1322
  %12 = getelementptr inbounds %struct._LINK, %struct._LINK* %11, i32 0, i32 0, !dbg !1323
  %13 = bitcast %struct._DEMO1_ACCESS_KEY* %12 to i8*, !dbg !1324
  %14 = load %struct._DEMO1_ACCESS_KEY*, %struct._DEMO1_ACCESS_KEY** %2, align 8, !dbg !1325
  %15 = bitcast %struct._DEMO1_ACCESS_KEY* %14 to i8*, !dbg !1324
  %16 = call i8* @memcpy(i8* %13, i8* %15, i64 16), !dbg !1324
  %17 = call zeroext i8 @IsKeychainEmpty(), !dbg !1326
  %18 = icmp ne i8 %17, 0, !dbg !1326
  br i1 %18, label %19, label %21, !dbg !1328

19:                                               ; preds = %10
  %20 = load %struct._LINK*, %struct._LINK** %3, align 8, !dbg !1329
  store %struct._LINK* %20, %struct._LINK** @last, align 8, !dbg !1331
  br label %28, !dbg !1332

21:                                               ; preds = %10
  %22 = load %struct._LINK*, %struct._LINK** %3, align 8, !dbg !1333
  %23 = load %struct._LINK*, %struct._LINK** @last, align 8, !dbg !1335
  %24 = getelementptr inbounds %struct._LINK, %struct._LINK* %23, i32 0, i32 1, !dbg !1336
  store %struct._LINK* %22, %struct._LINK** %24, align 8, !dbg !1337
  %25 = load %struct._LINK*, %struct._LINK** @last, align 8, !dbg !1338
  %26 = load %struct._LINK*, %struct._LINK** %3, align 8, !dbg !1339
  %27 = getelementptr inbounds %struct._LINK, %struct._LINK* %26, i32 0, i32 2, !dbg !1340
  store %struct._LINK* %25, %struct._LINK** %27, align 8, !dbg !1341
  br label %28

28:                                               ; preds = %21, %19
  %29 = load %struct._LINK*, %struct._LINK** %3, align 8, !dbg !1342
  %30 = getelementptr inbounds %struct._LINK, %struct._LINK* %29, i32 0, i32 1, !dbg !1343
  store %struct._LINK* null, %struct._LINK** %30, align 8, !dbg !1344
  %31 = load %struct._LINK*, %struct._LINK** %3, align 8, !dbg !1345
  store %struct._LINK* %31, %struct._LINK** @last, align 8, !dbg !1346
  ret void, !dbg !1347
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @InsertFirst(%struct._DEMO1_ACCESS_KEY* %0) #6 !dbg !1348 {
  %2 = alloca %struct._DEMO1_ACCESS_KEY*, align 8
  %3 = alloca %struct._LINK*, align 8
  store %struct._DEMO1_ACCESS_KEY* %0, %struct._DEMO1_ACCESS_KEY** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._DEMO1_ACCESS_KEY** %2, metadata !1349, metadata !DIExpression()), !dbg !1350
  call void @llvm.dbg.declare(metadata %struct._LINK** %3, metadata !1351, metadata !DIExpression()), !dbg !1352
  %4 = call noalias i8* @malloc(i64 32) #15, !dbg !1353
  %5 = bitcast i8* %4 to %struct._LINK*, !dbg !1353
  store %struct._LINK* %5, %struct._LINK** %3, align 8, !dbg !1352
  %6 = load %struct._LINK*, %struct._LINK** %3, align 8, !dbg !1354
  %7 = icmp ne %struct._LINK* %6, null, !dbg !1354
  br i1 %7, label %8, label %9, !dbg !1357

8:                                                ; preds = %1
  br label %10, !dbg !1357

9:                                                ; preds = %1
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1.36, i64 0, i64 0), i32 89, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__PRETTY_FUNCTION__.InsertFirst, i64 0, i64 0)) #17, !dbg !1354
  unreachable, !dbg !1354

10:                                               ; preds = %8
  %11 = load %struct._LINK*, %struct._LINK** %3, align 8, !dbg !1358
  %12 = getelementptr inbounds %struct._LINK, %struct._LINK* %11, i32 0, i32 0, !dbg !1359
  %13 = bitcast %struct._DEMO1_ACCESS_KEY* %12 to i8*, !dbg !1360
  %14 = load %struct._DEMO1_ACCESS_KEY*, %struct._DEMO1_ACCESS_KEY** %2, align 8, !dbg !1361
  %15 = bitcast %struct._DEMO1_ACCESS_KEY* %14 to i8*, !dbg !1360
  %16 = call i8* @memcpy(i8* %13, i8* %15, i64 16), !dbg !1360
  %17 = call zeroext i8 @IsKeychainEmpty(), !dbg !1362
  %18 = icmp ne i8 %17, 0, !dbg !1362
  br i1 %18, label %19, label %21, !dbg !1364

19:                                               ; preds = %10
  %20 = load %struct._LINK*, %struct._LINK** %3, align 8, !dbg !1365
  store %struct._LINK* %20, %struct._LINK** @last, align 8, !dbg !1367
  br label %25, !dbg !1368

21:                                               ; preds = %10
  %22 = load %struct._LINK*, %struct._LINK** %3, align 8, !dbg !1369
  %23 = load %struct._LINK*, %struct._LINK** @head, align 8, !dbg !1371
  %24 = getelementptr inbounds %struct._LINK, %struct._LINK* %23, i32 0, i32 2, !dbg !1372
  store %struct._LINK* %22, %struct._LINK** %24, align 8, !dbg !1373
  br label %25

25:                                               ; preds = %21, %19
  %26 = load %struct._LINK*, %struct._LINK** %3, align 8, !dbg !1374
  %27 = getelementptr inbounds %struct._LINK, %struct._LINK* %26, i32 0, i32 2, !dbg !1375
  store %struct._LINK* null, %struct._LINK** %27, align 8, !dbg !1376
  %28 = load %struct._LINK*, %struct._LINK** @head, align 8, !dbg !1377
  %29 = load %struct._LINK*, %struct._LINK** %3, align 8, !dbg !1378
  %30 = getelementptr inbounds %struct._LINK, %struct._LINK* %29, i32 0, i32 1, !dbg !1379
  store %struct._LINK* %28, %struct._LINK** %30, align 8, !dbg !1380
  %31 = load %struct._LINK*, %struct._LINK** %3, align 8, !dbg !1381
  store %struct._LINK* %31, %struct._LINK** @head, align 8, !dbg !1382
  ret void, !dbg !1383
}

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @IsKeychainEmpty() #6 !dbg !1384 {
  %1 = load %struct._LINK*, %struct._LINK** @head, align 8, !dbg !1387
  %2 = icmp eq %struct._LINK* %1, null, !dbg !1388
  %3 = zext i1 %2 to i32, !dbg !1388
  %4 = trunc i32 %3 to i8, !dbg !1387
  ret i8 %4, !dbg !1389
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @KeychainLength() #6 !dbg !1390 {
  %1 = alloca i64, align 8
  %2 = alloca %struct._LINK*, align 8
  call void @llvm.dbg.declare(metadata i64* %1, metadata !1393, metadata !DIExpression()), !dbg !1394
  store i64 0, i64* %1, align 8, !dbg !1394
  call void @llvm.dbg.declare(metadata %struct._LINK** %2, metadata !1395, metadata !DIExpression()), !dbg !1396
  %3 = load %struct._LINK*, %struct._LINK** @head, align 8, !dbg !1397
  store %struct._LINK* %3, %struct._LINK** %2, align 8, !dbg !1399
  br label %4, !dbg !1400

4:                                                ; preds = %10, %0
  %5 = load %struct._LINK*, %struct._LINK** %2, align 8, !dbg !1401
  %6 = icmp ne %struct._LINK* %5, null, !dbg !1403
  br i1 %6, label %7, label %14, !dbg !1404

7:                                                ; preds = %4
  %8 = load i64, i64* %1, align 8, !dbg !1405
  %9 = add i64 %8, 1, !dbg !1405
  store i64 %9, i64* %1, align 8, !dbg !1405
  br label %10, !dbg !1407

10:                                               ; preds = %7
  %11 = load %struct._LINK*, %struct._LINK** %2, align 8, !dbg !1408
  %12 = getelementptr inbounds %struct._LINK, %struct._LINK* %11, i32 0, i32 1, !dbg !1409
  %13 = load %struct._LINK*, %struct._LINK** %12, align 8, !dbg !1409
  store %struct._LINK* %13, %struct._LINK** %2, align 8, !dbg !1410
  br label %4, !dbg !1411, !llvm.loop !1412

14:                                               ; preds = %4
  %15 = load i64, i64* %1, align 8, !dbg !1414
  ret i64 %15, !dbg !1415
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @Demo1AccessKeyInit(i8* %0, %struct.EFI_SYSTEM_TABLE* %1) #6 !dbg !1416 {
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.EFI_SYSTEM_TABLE*, align 8
  %6 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1894, metadata !DIExpression()), !dbg !1895
  store %struct.EFI_SYSTEM_TABLE* %1, %struct.EFI_SYSTEM_TABLE** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.EFI_SYSTEM_TABLE** %5, metadata !1896, metadata !DIExpression()), !dbg !1897
  call void @llvm.dbg.declare(metadata i64* %6, metadata !1898, metadata !DIExpression()), !dbg !1899
  %7 = load i64, i64* %6, align 8, !dbg !1900
  %8 = icmp slt i64 %7, 0, !dbg !1900
  br i1 %8, label %12, label %9, !dbg !1902

9:                                                ; preds = %2
  %10 = load %struct._EFI_RNG_PROTOCOL*, %struct._EFI_RNG_PROTOCOL** @RngProtocol, align 8, !dbg !1903
  %11 = icmp eq %struct._EFI_RNG_PROTOCOL* %10, null, !dbg !1904
  br i1 %11, label %12, label %14, !dbg !1905

12:                                               ; preds = %9, %2
  %13 = load i64, i64* %6, align 8, !dbg !1906
  store i64 %13, i64* %3, align 8, !dbg !1908
  br label %29, !dbg !1908

14:                                               ; preds = %9
  %15 = call noalias i8* @malloc(i64 16) #15, !dbg !1909
  %16 = bitcast i8* %15 to %struct._DEMO1_ACCESS_KEY*, !dbg !1909
  store %struct._DEMO1_ACCESS_KEY* %16, %struct._DEMO1_ACCESS_KEY** @masterKey, align 8, !dbg !1910
  %17 = load %struct._DEMO1_ACCESS_KEY*, %struct._DEMO1_ACCESS_KEY** @masterKey, align 8, !dbg !1911
  %18 = call i64 @Demo1GenerateAccessKey(%struct._Demo1_Access_Key_PROTOCOL* bitcast ({ i64 (%struct._Demo1_Access_Key_PROTOCOL*, i8*, i8, %struct._DEMO1_ACCESS_KEY*)*, i8* }* @gDemo1_Access_Key_Protocol to %struct._Demo1_Access_Key_PROTOCOL*), i8* null, i8 zeroext 1, %struct._DEMO1_ACCESS_KEY* %17), !dbg !1912
  store i64 %18, i64* %6, align 8, !dbg !1913
  %19 = load i64, i64* %6, align 8, !dbg !1914
  %20 = icmp slt i64 %19, 0, !dbg !1914
  br i1 %20, label %21, label %23, !dbg !1916

21:                                               ; preds = %14
  %22 = load i64, i64* %6, align 8, !dbg !1917
  store i64 %22, i64* %3, align 8, !dbg !1919
  br label %29, !dbg !1919

23:                                               ; preds = %14
  %24 = load i64, i64* %6, align 8, !dbg !1920
  %25 = icmp slt i64 %24, 0, !dbg !1920
  br i1 %25, label %26, label %28, !dbg !1922

26:                                               ; preds = %23
  %27 = load i64, i64* %6, align 8, !dbg !1923
  store i64 %27, i64* %3, align 8, !dbg !1925
  br label %29, !dbg !1925

28:                                               ; preds = %23
  store i64 0, i64* %3, align 8, !dbg !1926
  br label %29, !dbg !1926

29:                                               ; preds = %28, %26, %21, %12
  %30 = load i64, i64* %3, align 8, !dbg !1927
  ret i64 %30, !dbg !1927
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @Demo1AccessKeyUnload(i8* %0) #6 !dbg !1928 {
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !1929, metadata !DIExpression()), !dbg !1930
  call void @llvm.dbg.declare(metadata i64* %3, metadata !1931, metadata !DIExpression()), !dbg !1932
  store i64 0, i64* %3, align 8, !dbg !1932
  %4 = load %struct._DEMO1_ACCESS_KEY*, %struct._DEMO1_ACCESS_KEY** @masterKey, align 8, !dbg !1933
  %5 = bitcast %struct._DEMO1_ACCESS_KEY* %4 to i8*, !dbg !1933
  call void @free(i8* %5) #15, !dbg !1934
  %6 = load i64, i64* %3, align 8, !dbg !1935
  ret i64 %6, !dbg !1936
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @IsValidAccessVariableHeader(%struct.ACCESS_VARIABLE_HEADER* %0, %struct.ACCESS_VARIABLE_HEADER* %1) #6 !dbg !1937 {
  %3 = alloca i8, align 1
  %4 = alloca %struct.ACCESS_VARIABLE_HEADER*, align 8
  %5 = alloca %struct.ACCESS_VARIABLE_HEADER*, align 8
  store %struct.ACCESS_VARIABLE_HEADER* %0, %struct.ACCESS_VARIABLE_HEADER** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.ACCESS_VARIABLE_HEADER** %4, metadata !1940, metadata !DIExpression()), !dbg !1941
  store %struct.ACCESS_VARIABLE_HEADER* %1, %struct.ACCESS_VARIABLE_HEADER** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.ACCESS_VARIABLE_HEADER** %5, metadata !1942, metadata !DIExpression()), !dbg !1943
  %6 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %4, align 8, !dbg !1944
  %7 = icmp eq %struct.ACCESS_VARIABLE_HEADER* %6, null, !dbg !1946
  br i1 %7, label %18, label %8, !dbg !1947

8:                                                ; preds = %2
  %9 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %4, align 8, !dbg !1948
  %10 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %5, align 8, !dbg !1949
  %11 = icmp uge %struct.ACCESS_VARIABLE_HEADER* %9, %10, !dbg !1950
  br i1 %11, label %18, label %12, !dbg !1951

12:                                               ; preds = %8
  %13 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %4, align 8, !dbg !1952
  %14 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %13, i32 0, i32 0, !dbg !1953
  %15 = load i16, i16* %14, align 1, !dbg !1953
  %16 = zext i16 %15 to i32, !dbg !1952
  %17 = icmp ne i32 %16, 21930, !dbg !1954
  br i1 %17, label %18, label %19, !dbg !1955

18:                                               ; preds = %12, %8, %2
  store i8 0, i8* %3, align 1, !dbg !1956
  br label %20, !dbg !1956

19:                                               ; preds = %12
  store i8 1, i8* %3, align 1, !dbg !1958
  br label %20, !dbg !1958

20:                                               ; preds = %19, %18
  %21 = load i8, i8* %3, align 1, !dbg !1959
  ret i8 %21, !dbg !1959
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @DataSizeOfAccessVariable(%struct.ACCESS_VARIABLE_HEADER* %0, i8 zeroext %1) #6 !dbg !1960 {
  %3 = alloca i64, align 8
  %4 = alloca %struct.ACCESS_VARIABLE_HEADER*, align 8
  %5 = alloca i8, align 1
  %6 = alloca %struct.AUTHENTICATED_VARIABLE_HEADER*, align 8
  store %struct.ACCESS_VARIABLE_HEADER* %0, %struct.ACCESS_VARIABLE_HEADER** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.ACCESS_VARIABLE_HEADER** %4, metadata !1963, metadata !DIExpression()), !dbg !1964
  store i8 %1, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !1965, metadata !DIExpression()), !dbg !1966
  call void @llvm.dbg.declare(metadata %struct.AUTHENTICATED_VARIABLE_HEADER** %6, metadata !1967, metadata !DIExpression()), !dbg !1968
  %7 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %4, align 8, !dbg !1969
  %8 = bitcast %struct.ACCESS_VARIABLE_HEADER* %7 to %struct.AUTHENTICATED_VARIABLE_HEADER*, !dbg !1970
  store %struct.AUTHENTICATED_VARIABLE_HEADER* %8, %struct.AUTHENTICATED_VARIABLE_HEADER** %6, align 8, !dbg !1971
  %9 = load i8, i8* %5, align 1, !dbg !1972
  %10 = icmp ne i8 %9, 0, !dbg !1972
  br i1 %10, label %11, label %38, !dbg !1974

11:                                               ; preds = %2
  %12 = load %struct.AUTHENTICATED_VARIABLE_HEADER*, %struct.AUTHENTICATED_VARIABLE_HEADER** %6, align 8, !dbg !1975
  %13 = getelementptr inbounds %struct.AUTHENTICATED_VARIABLE_HEADER, %struct.AUTHENTICATED_VARIABLE_HEADER* %12, i32 0, i32 1, !dbg !1978
  %14 = load i8, i8* %13, align 1, !dbg !1978
  %15 = zext i8 %14 to i32, !dbg !1975
  %16 = icmp eq i32 %15, 255, !dbg !1979
  br i1 %16, label %32, label %17, !dbg !1980

17:                                               ; preds = %11
  %18 = load %struct.AUTHENTICATED_VARIABLE_HEADER*, %struct.AUTHENTICATED_VARIABLE_HEADER** %6, align 8, !dbg !1981
  %19 = getelementptr inbounds %struct.AUTHENTICATED_VARIABLE_HEADER, %struct.AUTHENTICATED_VARIABLE_HEADER* %18, i32 0, i32 8, !dbg !1982
  %20 = load i32, i32* %19, align 1, !dbg !1982
  %21 = icmp eq i32 %20, -1, !dbg !1983
  br i1 %21, label %32, label %22, !dbg !1984

22:                                               ; preds = %17
  %23 = load %struct.AUTHENTICATED_VARIABLE_HEADER*, %struct.AUTHENTICATED_VARIABLE_HEADER** %6, align 8, !dbg !1985
  %24 = getelementptr inbounds %struct.AUTHENTICATED_VARIABLE_HEADER, %struct.AUTHENTICATED_VARIABLE_HEADER* %23, i32 0, i32 7, !dbg !1986
  %25 = load i32, i32* %24, align 1, !dbg !1986
  %26 = icmp eq i32 %25, -1, !dbg !1987
  br i1 %26, label %32, label %27, !dbg !1988

27:                                               ; preds = %22
  %28 = load %struct.AUTHENTICATED_VARIABLE_HEADER*, %struct.AUTHENTICATED_VARIABLE_HEADER** %6, align 8, !dbg !1989
  %29 = getelementptr inbounds %struct.AUTHENTICATED_VARIABLE_HEADER, %struct.AUTHENTICATED_VARIABLE_HEADER* %28, i32 0, i32 3, !dbg !1990
  %30 = load i32, i32* %29, align 1, !dbg !1990
  %31 = icmp eq i32 %30, -1, !dbg !1991
  br i1 %31, label %32, label %33, !dbg !1992

32:                                               ; preds = %27, %22, %17, %11
  store i64 0, i64* %3, align 8, !dbg !1993
  br label %65, !dbg !1993

33:                                               ; preds = %27
  %34 = load %struct.AUTHENTICATED_VARIABLE_HEADER*, %struct.AUTHENTICATED_VARIABLE_HEADER** %6, align 8, !dbg !1995
  %35 = getelementptr inbounds %struct.AUTHENTICATED_VARIABLE_HEADER, %struct.AUTHENTICATED_VARIABLE_HEADER* %34, i32 0, i32 8, !dbg !1996
  %36 = load i32, i32* %35, align 1, !dbg !1996
  %37 = zext i32 %36 to i64, !dbg !1997
  store i64 %37, i64* %3, align 8, !dbg !1998
  br label %65, !dbg !1998

38:                                               ; preds = %2
  %39 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %4, align 8, !dbg !1999
  %40 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %39, i32 0, i32 1, !dbg !2002
  %41 = load i8, i8* %40, align 1, !dbg !2002
  %42 = zext i8 %41 to i32, !dbg !1999
  %43 = icmp eq i32 %42, 255, !dbg !2003
  br i1 %43, label %59, label %44, !dbg !2004

44:                                               ; preds = %38
  %45 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %4, align 8, !dbg !2005
  %46 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %45, i32 0, i32 5, !dbg !2006
  %47 = load i32, i32* %46, align 1, !dbg !2006
  %48 = icmp eq i32 %47, -1, !dbg !2007
  br i1 %48, label %59, label %49, !dbg !2008

49:                                               ; preds = %44
  %50 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %4, align 8, !dbg !2009
  %51 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %50, i32 0, i32 4, !dbg !2010
  %52 = load i32, i32* %51, align 1, !dbg !2010
  %53 = icmp eq i32 %52, -1, !dbg !2011
  br i1 %53, label %59, label %54, !dbg !2012

54:                                               ; preds = %49
  %55 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %4, align 8, !dbg !2013
  %56 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %55, i32 0, i32 3, !dbg !2014
  %57 = load i32, i32* %56, align 1, !dbg !2014
  %58 = icmp eq i32 %57, -1, !dbg !2015
  br i1 %58, label %59, label %60, !dbg !2016

59:                                               ; preds = %54, %49, %44, %38
  store i64 0, i64* %3, align 8, !dbg !2017
  br label %65, !dbg !2017

60:                                               ; preds = %54
  %61 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %4, align 8, !dbg !2019
  %62 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %61, i32 0, i32 5, !dbg !2020
  %63 = load i32, i32* %62, align 1, !dbg !2020
  %64 = zext i32 %63 to i64, !dbg !2021
  store i64 %64, i64* %3, align 8, !dbg !2022
  br label %65, !dbg !2022

65:                                               ; preds = %60, %59, %33, %32
  %66 = load i64, i64* %3, align 8, !dbg !2023
  ret i64 %66, !dbg !2023
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @NameSizeOfAccessVariable(%struct.ACCESS_VARIABLE_HEADER* %0, i8 zeroext %1) #6 !dbg !2024 {
  %3 = alloca i64, align 8
  %4 = alloca %struct.ACCESS_VARIABLE_HEADER*, align 8
  %5 = alloca i8, align 1
  %6 = alloca %struct.AUTHENTICATED_VARIABLE_HEADER*, align 8
  store %struct.ACCESS_VARIABLE_HEADER* %0, %struct.ACCESS_VARIABLE_HEADER** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.ACCESS_VARIABLE_HEADER** %4, metadata !2025, metadata !DIExpression()), !dbg !2026
  store i8 %1, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !2027, metadata !DIExpression()), !dbg !2028
  call void @llvm.dbg.declare(metadata %struct.AUTHENTICATED_VARIABLE_HEADER** %6, metadata !2029, metadata !DIExpression()), !dbg !2030
  %7 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %4, align 8, !dbg !2031
  %8 = bitcast %struct.ACCESS_VARIABLE_HEADER* %7 to %struct.AUTHENTICATED_VARIABLE_HEADER*, !dbg !2032
  store %struct.AUTHENTICATED_VARIABLE_HEADER* %8, %struct.AUTHENTICATED_VARIABLE_HEADER** %6, align 8, !dbg !2033
  %9 = load i8, i8* %5, align 1, !dbg !2034
  %10 = icmp ne i8 %9, 0, !dbg !2034
  br i1 %10, label %11, label %38, !dbg !2036

11:                                               ; preds = %2
  %12 = load %struct.AUTHENTICATED_VARIABLE_HEADER*, %struct.AUTHENTICATED_VARIABLE_HEADER** %6, align 8, !dbg !2037
  %13 = getelementptr inbounds %struct.AUTHENTICATED_VARIABLE_HEADER, %struct.AUTHENTICATED_VARIABLE_HEADER* %12, i32 0, i32 1, !dbg !2040
  %14 = load i8, i8* %13, align 1, !dbg !2040
  %15 = zext i8 %14 to i32, !dbg !2037
  %16 = icmp eq i32 %15, 255, !dbg !2041
  br i1 %16, label %32, label %17, !dbg !2042

17:                                               ; preds = %11
  %18 = load %struct.AUTHENTICATED_VARIABLE_HEADER*, %struct.AUTHENTICATED_VARIABLE_HEADER** %6, align 8, !dbg !2043
  %19 = getelementptr inbounds %struct.AUTHENTICATED_VARIABLE_HEADER, %struct.AUTHENTICATED_VARIABLE_HEADER* %18, i32 0, i32 8, !dbg !2044
  %20 = load i32, i32* %19, align 1, !dbg !2044
  %21 = icmp eq i32 %20, -1, !dbg !2045
  br i1 %21, label %32, label %22, !dbg !2046

22:                                               ; preds = %17
  %23 = load %struct.AUTHENTICATED_VARIABLE_HEADER*, %struct.AUTHENTICATED_VARIABLE_HEADER** %6, align 8, !dbg !2047
  %24 = getelementptr inbounds %struct.AUTHENTICATED_VARIABLE_HEADER, %struct.AUTHENTICATED_VARIABLE_HEADER* %23, i32 0, i32 7, !dbg !2048
  %25 = load i32, i32* %24, align 1, !dbg !2048
  %26 = icmp eq i32 %25, -1, !dbg !2049
  br i1 %26, label %32, label %27, !dbg !2050

27:                                               ; preds = %22
  %28 = load %struct.AUTHENTICATED_VARIABLE_HEADER*, %struct.AUTHENTICATED_VARIABLE_HEADER** %6, align 8, !dbg !2051
  %29 = getelementptr inbounds %struct.AUTHENTICATED_VARIABLE_HEADER, %struct.AUTHENTICATED_VARIABLE_HEADER* %28, i32 0, i32 3, !dbg !2052
  %30 = load i32, i32* %29, align 1, !dbg !2052
  %31 = icmp eq i32 %30, -1, !dbg !2053
  br i1 %31, label %32, label %33, !dbg !2054

32:                                               ; preds = %27, %22, %17, %11
  store i64 0, i64* %3, align 8, !dbg !2055
  br label %65, !dbg !2055

33:                                               ; preds = %27
  %34 = load %struct.AUTHENTICATED_VARIABLE_HEADER*, %struct.AUTHENTICATED_VARIABLE_HEADER** %6, align 8, !dbg !2057
  %35 = getelementptr inbounds %struct.AUTHENTICATED_VARIABLE_HEADER, %struct.AUTHENTICATED_VARIABLE_HEADER* %34, i32 0, i32 7, !dbg !2058
  %36 = load i32, i32* %35, align 1, !dbg !2058
  %37 = zext i32 %36 to i64, !dbg !2059
  store i64 %37, i64* %3, align 8, !dbg !2060
  br label %65, !dbg !2060

38:                                               ; preds = %2
  %39 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %4, align 8, !dbg !2061
  %40 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %39, i32 0, i32 1, !dbg !2064
  %41 = load i8, i8* %40, align 1, !dbg !2064
  %42 = zext i8 %41 to i32, !dbg !2061
  %43 = icmp eq i32 %42, 255, !dbg !2065
  br i1 %43, label %59, label %44, !dbg !2066

44:                                               ; preds = %38
  %45 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %4, align 8, !dbg !2067
  %46 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %45, i32 0, i32 5, !dbg !2068
  %47 = load i32, i32* %46, align 1, !dbg !2068
  %48 = icmp eq i32 %47, -1, !dbg !2069
  br i1 %48, label %59, label %49, !dbg !2070

49:                                               ; preds = %44
  %50 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %4, align 8, !dbg !2071
  %51 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %50, i32 0, i32 4, !dbg !2072
  %52 = load i32, i32* %51, align 1, !dbg !2072
  %53 = icmp eq i32 %52, -1, !dbg !2073
  br i1 %53, label %59, label %54, !dbg !2074

54:                                               ; preds = %49
  %55 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %4, align 8, !dbg !2075
  %56 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %55, i32 0, i32 3, !dbg !2076
  %57 = load i32, i32* %56, align 1, !dbg !2076
  %58 = icmp eq i32 %57, -1, !dbg !2077
  br i1 %58, label %59, label %60, !dbg !2078

59:                                               ; preds = %54, %49, %44, %38
  store i64 0, i64* %3, align 8, !dbg !2079
  br label %65, !dbg !2079

60:                                               ; preds = %54
  %61 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %4, align 8, !dbg !2081
  %62 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %61, i32 0, i32 4, !dbg !2082
  %63 = load i32, i32* %62, align 1, !dbg !2082
  %64 = zext i32 %63 to i64, !dbg !2083
  store i64 %64, i64* %3, align 8, !dbg !2084
  br label %65, !dbg !2084

65:                                               ; preds = %60, %59, %33, %32
  %66 = load i64, i64* %3, align 8, !dbg !2085
  ret i64 %66, !dbg !2085
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @GetAccessVariableHeaderSize(i8 zeroext %0) #6 !dbg !2086 {
  %2 = alloca i8, align 1
  %3 = alloca i64, align 8
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !2089, metadata !DIExpression()), !dbg !2090
  call void @llvm.dbg.declare(metadata i64* %3, metadata !2091, metadata !DIExpression()), !dbg !2092
  %4 = load i8, i8* %2, align 1, !dbg !2093
  %5 = icmp ne i8 %4, 0, !dbg !2093
  br i1 %5, label %6, label %7, !dbg !2095

6:                                                ; preds = %1
  store i64 60, i64* %3, align 8, !dbg !2096
  br label %8, !dbg !2098

7:                                                ; preds = %1
  store i64 48, i64* %3, align 8, !dbg !2099
  br label %8

8:                                                ; preds = %7, %6
  %9 = load i64, i64* %3, align 8, !dbg !2101
  ret i64 %9, !dbg !2102
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i16* @GetAccessVariableNamePtr(%struct.ACCESS_VARIABLE_HEADER* %0, i8 zeroext %1) #6 !dbg !2103 {
  %3 = alloca %struct.ACCESS_VARIABLE_HEADER*, align 8
  %4 = alloca i8, align 1
  store %struct.ACCESS_VARIABLE_HEADER* %0, %struct.ACCESS_VARIABLE_HEADER** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.ACCESS_VARIABLE_HEADER** %3, metadata !2106, metadata !DIExpression()), !dbg !2107
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !2108, metadata !DIExpression()), !dbg !2109
  %5 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %3, align 8, !dbg !2110
  %6 = ptrtoint %struct.ACCESS_VARIABLE_HEADER* %5 to i64, !dbg !2111
  %7 = load i8, i8* %4, align 1, !dbg !2112
  %8 = call i64 @GetAccessVariableHeaderSize(i8 zeroext %7), !dbg !2113
  %9 = add i64 %6, %8, !dbg !2114
  %10 = inttoptr i64 %9 to i16*, !dbg !2115
  ret i16* %10, !dbg !2116
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @GetAccessVariableDataPtr(%struct.ACCESS_VARIABLE_HEADER* %0, i8 zeroext %1) #6 !dbg !2117 {
  %3 = alloca %struct.ACCESS_VARIABLE_HEADER*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i64, align 8
  store %struct.ACCESS_VARIABLE_HEADER* %0, %struct.ACCESS_VARIABLE_HEADER** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.ACCESS_VARIABLE_HEADER** %3, metadata !2120, metadata !DIExpression()), !dbg !2121
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !2122, metadata !DIExpression()), !dbg !2123
  call void @llvm.dbg.declare(metadata i64* %5, metadata !2124, metadata !DIExpression()), !dbg !2125
  %6 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %3, align 8, !dbg !2126
  %7 = load i8, i8* %4, align 1, !dbg !2127
  %8 = call i16* @GetAccessVariableNamePtr(%struct.ACCESS_VARIABLE_HEADER* %6, i8 zeroext %7), !dbg !2128
  %9 = ptrtoint i16* %8 to i64, !dbg !2129
  store i64 %9, i64* %5, align 8, !dbg !2130
  %10 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %3, align 8, !dbg !2131
  %11 = load i8, i8* %4, align 1, !dbg !2132
  %12 = call i64 @NameSizeOfAccessVariable(%struct.ACCESS_VARIABLE_HEADER* %10, i8 zeroext %11), !dbg !2133
  %13 = load i64, i64* %5, align 8, !dbg !2134
  %14 = add i64 %13, %12, !dbg !2134
  store i64 %14, i64* %5, align 8, !dbg !2134
  %15 = load i64, i64* %5, align 8, !dbg !2135
  %16 = add i64 %15, 0, !dbg !2135
  store i64 %16, i64* %5, align 8, !dbg !2135
  %17 = load i64, i64* %5, align 8, !dbg !2136
  %18 = inttoptr i64 %17 to i8*, !dbg !2137
  ret i8* %18, !dbg !2138
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.ACCESS_VARIABLE_HEADER* @GetNextAccessVariablePtr(%struct.ACCESS_VARIABLE_HEADER* %0, i8 zeroext %1) #6 !dbg !2139 {
  %3 = alloca %struct.ACCESS_VARIABLE_HEADER*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i64, align 8
  store %struct.ACCESS_VARIABLE_HEADER* %0, %struct.ACCESS_VARIABLE_HEADER** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.ACCESS_VARIABLE_HEADER** %3, metadata !2142, metadata !DIExpression()), !dbg !2143
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !2144, metadata !DIExpression()), !dbg !2145
  call void @llvm.dbg.declare(metadata i64* %5, metadata !2146, metadata !DIExpression()), !dbg !2147
  %6 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %3, align 8, !dbg !2148
  %7 = load i8, i8* %4, align 1, !dbg !2149
  %8 = call i8* @GetAccessVariableDataPtr(%struct.ACCESS_VARIABLE_HEADER* %6, i8 zeroext %7), !dbg !2150
  %9 = ptrtoint i8* %8 to i64, !dbg !2151
  store i64 %9, i64* %5, align 8, !dbg !2152
  %10 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %3, align 8, !dbg !2153
  %11 = load i8, i8* %4, align 1, !dbg !2154
  %12 = call i64 @DataSizeOfAccessVariable(%struct.ACCESS_VARIABLE_HEADER* %10, i8 zeroext %11), !dbg !2155
  %13 = load i64, i64* %5, align 8, !dbg !2156
  %14 = add i64 %13, %12, !dbg !2156
  store i64 %14, i64* %5, align 8, !dbg !2156
  %15 = load i64, i64* %5, align 8, !dbg !2157
  %16 = add i64 %15, 0, !dbg !2157
  store i64 %16, i64* %5, align 8, !dbg !2157
  %17 = load i64, i64* %5, align 8, !dbg !2158
  %18 = add i64 %17, 4, !dbg !2158
  %19 = sub i64 %18, 1, !dbg !2158
  %20 = and i64 %19, -4, !dbg !2158
  %21 = inttoptr i64 %20 to %struct.ACCESS_VARIABLE_HEADER*, !dbg !2159
  ret %struct.ACCESS_VARIABLE_HEADER* %21, !dbg !2160
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.ACCESS_VARIABLE_HEADER* @GetAccessStartPointer(%struct.VARIABLE_STORE_HEADER* %0) #6 !dbg !2161 {
  %2 = alloca %struct.VARIABLE_STORE_HEADER*, align 8
  store %struct.VARIABLE_STORE_HEADER* %0, %struct.VARIABLE_STORE_HEADER** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.VARIABLE_STORE_HEADER** %2, metadata !2164, metadata !DIExpression()), !dbg !2165
  %3 = load %struct.VARIABLE_STORE_HEADER*, %struct.VARIABLE_STORE_HEADER** %2, align 8, !dbg !2166
  %4 = getelementptr inbounds %struct.VARIABLE_STORE_HEADER, %struct.VARIABLE_STORE_HEADER* %3, i64 1, !dbg !2166
  %5 = ptrtoint %struct.VARIABLE_STORE_HEADER* %4 to i64, !dbg !2166
  %6 = add i64 %5, 4, !dbg !2166
  %7 = sub i64 %6, 1, !dbg !2166
  %8 = and i64 %7, -4, !dbg !2166
  %9 = inttoptr i64 %8 to %struct.ACCESS_VARIABLE_HEADER*, !dbg !2167
  ret %struct.ACCESS_VARIABLE_HEADER* %9, !dbg !2168
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.ACCESS_VARIABLE_HEADER* @GetAccessEndPointer(%struct.VARIABLE_STORE_HEADER* %0) #6 !dbg !2169 {
  %2 = alloca %struct.VARIABLE_STORE_HEADER*, align 8
  store %struct.VARIABLE_STORE_HEADER* %0, %struct.VARIABLE_STORE_HEADER** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.VARIABLE_STORE_HEADER** %2, metadata !2170, metadata !DIExpression()), !dbg !2171
  %3 = load %struct.VARIABLE_STORE_HEADER*, %struct.VARIABLE_STORE_HEADER** %2, align 8, !dbg !2172
  %4 = ptrtoint %struct.VARIABLE_STORE_HEADER* %3 to i64, !dbg !2172
  %5 = load %struct.VARIABLE_STORE_HEADER*, %struct.VARIABLE_STORE_HEADER** %2, align 8, !dbg !2172
  %6 = getelementptr inbounds %struct.VARIABLE_STORE_HEADER, %struct.VARIABLE_STORE_HEADER* %5, i32 0, i32 1, !dbg !2172
  %7 = load i32, i32* %6, align 1, !dbg !2172
  %8 = zext i32 %7 to i64, !dbg !2172
  %9 = add i64 %4, %8, !dbg !2172
  %10 = add i64 %9, 4, !dbg !2172
  %11 = sub i64 %10, 1, !dbg !2172
  %12 = and i64 %11, -4, !dbg !2172
  %13 = inttoptr i64 %12 to %struct.ACCESS_VARIABLE_HEADER*, !dbg !2173
  ret %struct.ACCESS_VARIABLE_HEADER* %13, !dbg !2174
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @mineInitEmuNonVolatileVariableStore(i64* %0) #6 !dbg !2175 {
  %2 = alloca i64, align 8
  %3 = alloca i64*, align 8
  %4 = alloca %struct.VARIABLE_STORE_HEADER*, align 8
  %5 = alloca i32, align 4
  store i64* %0, i64** %3, align 8
  call void @llvm.dbg.declare(metadata i64** %3, metadata !2178, metadata !DIExpression()), !dbg !2179
  call void @llvm.dbg.declare(metadata %struct.VARIABLE_STORE_HEADER** %4, metadata !2180, metadata !DIExpression()), !dbg !2181
  call void @llvm.dbg.declare(metadata i32* %5, metadata !2182, metadata !DIExpression()), !dbg !2183
  store i32 32768, i32* %5, align 4, !dbg !2183
  %6 = load i32, i32* %5, align 4, !dbg !2184
  %7 = zext i32 %6 to i64, !dbg !2184
  %8 = icmp ule i64 28, %7, !dbg !2184
  br i1 %8, label %9, label %10, !dbg !2187

9:                                                ; preds = %1
  br label %11, !dbg !2187

10:                                               ; preds = %1
  call void @__assert_fail(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.2.37, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3.38, i64 0, i64 0), i32 302, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__.mineInitEmuNonVolatileVariableStore, i64 0, i64 0)) #17, !dbg !2184
  unreachable, !dbg !2184

11:                                               ; preds = %9
  %12 = load i32, i32* %5, align 4, !dbg !2188
  %13 = zext i32 %12 to i64, !dbg !2188
  %14 = call noalias i8* @malloc(i64 %13) #15, !dbg !2189
  %15 = bitcast i8* %14 to %struct.VARIABLE_STORE_HEADER*, !dbg !2190
  store %struct.VARIABLE_STORE_HEADER* %15, %struct.VARIABLE_STORE_HEADER** %4, align 8, !dbg !2191
  %16 = load %struct.VARIABLE_STORE_HEADER*, %struct.VARIABLE_STORE_HEADER** %4, align 8, !dbg !2192
  %17 = icmp eq %struct.VARIABLE_STORE_HEADER* %16, null, !dbg !2194
  br i1 %17, label %18, label %19, !dbg !2195

18:                                               ; preds = %11
  store i64 -9223372036854775799, i64* %2, align 8, !dbg !2196
  br label %40, !dbg !2196

19:                                               ; preds = %11
  %20 = load %struct.VARIABLE_STORE_HEADER*, %struct.VARIABLE_STORE_HEADER** %4, align 8, !dbg !2198
  %21 = bitcast %struct.VARIABLE_STORE_HEADER* %20 to i8*, !dbg !2199
  %22 = load i32, i32* %5, align 4, !dbg !2200
  %23 = trunc i32 %22 to i8, !dbg !2199
  %24 = zext i8 %23 to i32, !dbg !2199
  %25 = call i8* @memset(i8* %21, i32 %24, i64 255), !dbg !2199
  %26 = load i32, i32* %5, align 4, !dbg !2201
  %27 = load %struct.VARIABLE_STORE_HEADER*, %struct.VARIABLE_STORE_HEADER** %4, align 8, !dbg !2202
  %28 = getelementptr inbounds %struct.VARIABLE_STORE_HEADER, %struct.VARIABLE_STORE_HEADER* %27, i32 0, i32 1, !dbg !2203
  store i32 %26, i32* %28, align 1, !dbg !2204
  %29 = load %struct.VARIABLE_STORE_HEADER*, %struct.VARIABLE_STORE_HEADER** %4, align 8, !dbg !2205
  %30 = getelementptr inbounds %struct.VARIABLE_STORE_HEADER, %struct.VARIABLE_STORE_HEADER* %29, i32 0, i32 2, !dbg !2206
  store i8 90, i8* %30, align 1, !dbg !2207
  %31 = load %struct.VARIABLE_STORE_HEADER*, %struct.VARIABLE_STORE_HEADER** %4, align 8, !dbg !2208
  %32 = getelementptr inbounds %struct.VARIABLE_STORE_HEADER, %struct.VARIABLE_STORE_HEADER* %31, i32 0, i32 3, !dbg !2209
  store i8 -2, i8* %32, align 1, !dbg !2210
  %33 = load %struct.VARIABLE_STORE_HEADER*, %struct.VARIABLE_STORE_HEADER** %4, align 8, !dbg !2211
  %34 = getelementptr inbounds %struct.VARIABLE_STORE_HEADER, %struct.VARIABLE_STORE_HEADER* %33, i32 0, i32 4, !dbg !2212
  store i16 0, i16* %34, align 1, !dbg !2213
  %35 = load %struct.VARIABLE_STORE_HEADER*, %struct.VARIABLE_STORE_HEADER** %4, align 8, !dbg !2214
  %36 = getelementptr inbounds %struct.VARIABLE_STORE_HEADER, %struct.VARIABLE_STORE_HEADER* %35, i32 0, i32 5, !dbg !2215
  store i32 0, i32* %36, align 1, !dbg !2216
  %37 = load %struct.VARIABLE_STORE_HEADER*, %struct.VARIABLE_STORE_HEADER** %4, align 8, !dbg !2217
  %38 = ptrtoint %struct.VARIABLE_STORE_HEADER* %37 to i64, !dbg !2218
  %39 = load i64*, i64** %3, align 8, !dbg !2219
  store i64 %38, i64* %39, align 8, !dbg !2220
  store i64 0, i64* %2, align 8, !dbg !2221
  br label %40, !dbg !2221

40:                                               ; preds = %19, %18
  %41 = load i64, i64* %2, align 8, !dbg !2222
  ret i64 %41, !dbg !2222
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #9

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @mineInitNonVolatileVariableStore() #6 !dbg !2223 {
  %1 = alloca i64, align 8
  %2 = alloca %struct.ACCESS_VARIABLE_HEADER*, align 8
  %3 = alloca %struct.ACCESS_VARIABLE_HEADER*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata %struct.ACCESS_VARIABLE_HEADER** %2, metadata !2226, metadata !DIExpression()), !dbg !2227
  call void @llvm.dbg.declare(metadata %struct.ACCESS_VARIABLE_HEADER** %3, metadata !2228, metadata !DIExpression()), !dbg !2229
  call void @llvm.dbg.declare(metadata i64* %4, metadata !2230, metadata !DIExpression()), !dbg !2231
  call void @llvm.dbg.declare(metadata i64* %5, metadata !2232, metadata !DIExpression()), !dbg !2233
  call void @llvm.dbg.declare(metadata i64* %6, metadata !2234, metadata !DIExpression()), !dbg !2235
  %7 = call i64 @mineInitEmuNonVolatileVariableStore(i64* %4), !dbg !2236
  store i64 %7, i64* %6, align 8, !dbg !2237
  %8 = load i64, i64* %4, align 8, !dbg !2238
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4.39, i64 0, i64 0), i64 %8), !dbg !2239
  %10 = load i64, i64* %6, align 8, !dbg !2240
  %11 = icmp slt i64 %10, 0, !dbg !2240
  br i1 %11, label %12, label %15, !dbg !2242

12:                                               ; preds = %0
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.40, i64 0, i64 0)), !dbg !2243
  %14 = load i64, i64* %6, align 8, !dbg !2245
  store i64 %14, i64* %1, align 8, !dbg !2246
  br label %79, !dbg !2246

15:                                               ; preds = %0
  %16 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !2247
  %17 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %16, i32 0, i32 0, !dbg !2248
  %18 = getelementptr inbounds %struct.VARIABLE_GLOBAL, %struct.VARIABLE_GLOBAL* %17, i32 0, i32 8, !dbg !2249
  store i8 1, i8* %18, align 2, !dbg !2250
  %19 = load i64, i64* %4, align 8, !dbg !2251
  %20 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !2252
  %21 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %20, i32 0, i32 0, !dbg !2253
  %22 = getelementptr inbounds %struct.VARIABLE_GLOBAL, %struct.VARIABLE_GLOBAL* %21, i32 0, i32 2, !dbg !2254
  store i64 %19, i64* %22, align 8, !dbg !2255
  %23 = load i64, i64* %4, align 8, !dbg !2256
  %24 = inttoptr i64 %23 to %struct.VARIABLE_STORE_HEADER*, !dbg !2257
  store %struct.VARIABLE_STORE_HEADER* %24, %struct.VARIABLE_STORE_HEADER** @mineNvVariableCache, align 8, !dbg !2258
  %25 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !2259
  %26 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %25, i32 0, i32 0, !dbg !2260
  %27 = getelementptr inbounds %struct.VARIABLE_GLOBAL, %struct.VARIABLE_GLOBAL* %26, i32 0, i32 6, !dbg !2261
  store i8 0, i8* %27, align 4, !dbg !2262
  %28 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !2263
  %29 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %28, i32 0, i32 9, !dbg !2264
  store i64 8192, i64* %29, align 8, !dbg !2265
  %30 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !2266
  %31 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %30, i32 0, i32 10, !dbg !2267
  store i64 10240, i64* %31, align 8, !dbg !2268
  %32 = load %struct.VARIABLE_STORE_HEADER*, %struct.VARIABLE_STORE_HEADER** @mineNvVariableCache, align 8, !dbg !2269
  %33 = call %struct.ACCESS_VARIABLE_HEADER* @GetAccessStartPointer(%struct.VARIABLE_STORE_HEADER* %32), !dbg !2270
  store %struct.ACCESS_VARIABLE_HEADER* %33, %struct.ACCESS_VARIABLE_HEADER** %2, align 8, !dbg !2271
  br label %34, !dbg !2272

34:                                               ; preds = %69, %15
  %35 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %2, align 8, !dbg !2273
  %36 = load %struct.VARIABLE_STORE_HEADER*, %struct.VARIABLE_STORE_HEADER** @mineNvVariableCache, align 8, !dbg !2274
  %37 = call %struct.ACCESS_VARIABLE_HEADER* @GetAccessEndPointer(%struct.VARIABLE_STORE_HEADER* %36), !dbg !2275
  %38 = call zeroext i8 @IsValidAccessVariableHeader(%struct.ACCESS_VARIABLE_HEADER* %35, %struct.ACCESS_VARIABLE_HEADER* %37), !dbg !2276
  %39 = icmp ne i8 %38, 0, !dbg !2272
  br i1 %39, label %40, label %71, !dbg !2272

40:                                               ; preds = %34
  %41 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %2, align 8, !dbg !2277
  %42 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !2279
  %43 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %42, i32 0, i32 0, !dbg !2280
  %44 = getelementptr inbounds %struct.VARIABLE_GLOBAL, %struct.VARIABLE_GLOBAL* %43, i32 0, i32 6, !dbg !2281
  %45 = load i8, i8* %44, align 4, !dbg !2281
  %46 = call %struct.ACCESS_VARIABLE_HEADER* @GetNextAccessVariablePtr(%struct.ACCESS_VARIABLE_HEADER* %41, i8 zeroext %45), !dbg !2282
  store %struct.ACCESS_VARIABLE_HEADER* %46, %struct.ACCESS_VARIABLE_HEADER** %3, align 8, !dbg !2283
  %47 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %3, align 8, !dbg !2284
  %48 = ptrtoint %struct.ACCESS_VARIABLE_HEADER* %47 to i64, !dbg !2285
  %49 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %2, align 8, !dbg !2286
  %50 = ptrtoint %struct.ACCESS_VARIABLE_HEADER* %49 to i64, !dbg !2287
  %51 = sub i64 %48, %50, !dbg !2288
  store i64 %51, i64* %5, align 8, !dbg !2289
  %52 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %2, align 8, !dbg !2290
  %53 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %52, i32 0, i32 3, !dbg !2292
  %54 = load i32, i32* %53, align 1, !dbg !2292
  %55 = and i32 %54, 9, !dbg !2293
  %56 = icmp eq i32 %55, 9, !dbg !2294
  br i1 %56, label %57, label %63, !dbg !2295

57:                                               ; preds = %40
  %58 = load i64, i64* %5, align 8, !dbg !2296
  %59 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !2298
  %60 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %59, i32 0, i32 8, !dbg !2299
  %61 = load i64, i64* %60, align 8, !dbg !2300
  %62 = add i64 %61, %58, !dbg !2300
  store i64 %62, i64* %60, align 8, !dbg !2300
  br label %69, !dbg !2301

63:                                               ; preds = %40
  %64 = load i64, i64* %5, align 8, !dbg !2302
  %65 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !2304
  %66 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %65, i32 0, i32 6, !dbg !2305
  %67 = load i64, i64* %66, align 8, !dbg !2306
  %68 = add i64 %67, %64, !dbg !2306
  store i64 %68, i64* %66, align 8, !dbg !2306
  br label %69

69:                                               ; preds = %63, %57
  %70 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %3, align 8, !dbg !2307
  store %struct.ACCESS_VARIABLE_HEADER* %70, %struct.ACCESS_VARIABLE_HEADER** %2, align 8, !dbg !2308
  br label %34, !dbg !2272, !llvm.loop !2309

71:                                               ; preds = %34
  %72 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %2, align 8, !dbg !2311
  %73 = ptrtoint %struct.ACCESS_VARIABLE_HEADER* %72 to i64, !dbg !2312
  %74 = load %struct.VARIABLE_STORE_HEADER*, %struct.VARIABLE_STORE_HEADER** @mineNvVariableCache, align 8, !dbg !2313
  %75 = ptrtoint %struct.VARIABLE_STORE_HEADER* %74 to i64, !dbg !2314
  %76 = sub i64 %73, %75, !dbg !2315
  %77 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !2316
  %78 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %77, i32 0, i32 2, !dbg !2317
  store i64 %76, i64* %78, align 8, !dbg !2318
  store i64 0, i64* %1, align 8, !dbg !2319
  br label %79, !dbg !2319

79:                                               ; preds = %71, %12
  %80 = load i64, i64* %1, align 8, !dbg !2320
  ret i64 %80, !dbg !2320
}

declare dso_local i32 @printf(i8*, ...) #10

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.GUID* @GetAccessVendorGuidPtr(%struct.ACCESS_VARIABLE_HEADER* %0, i8 zeroext %1) #6 !dbg !2321 {
  %3 = alloca %struct.GUID*, align 8
  %4 = alloca %struct.ACCESS_VARIABLE_HEADER*, align 8
  %5 = alloca i8, align 1
  %6 = alloca %struct.AUTHENTICATED_VARIABLE_HEADER*, align 8
  store %struct.ACCESS_VARIABLE_HEADER* %0, %struct.ACCESS_VARIABLE_HEADER** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.ACCESS_VARIABLE_HEADER** %4, metadata !2324, metadata !DIExpression()), !dbg !2325
  store i8 %1, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !2326, metadata !DIExpression()), !dbg !2327
  call void @llvm.dbg.declare(metadata %struct.AUTHENTICATED_VARIABLE_HEADER** %6, metadata !2328, metadata !DIExpression()), !dbg !2329
  %7 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %4, align 8, !dbg !2330
  %8 = bitcast %struct.ACCESS_VARIABLE_HEADER* %7 to %struct.AUTHENTICATED_VARIABLE_HEADER*, !dbg !2331
  store %struct.AUTHENTICATED_VARIABLE_HEADER* %8, %struct.AUTHENTICATED_VARIABLE_HEADER** %6, align 8, !dbg !2332
  %9 = load i8, i8* %5, align 1, !dbg !2333
  %10 = icmp ne i8 %9, 0, !dbg !2333
  br i1 %10, label %11, label %14, !dbg !2335

11:                                               ; preds = %2
  %12 = load %struct.AUTHENTICATED_VARIABLE_HEADER*, %struct.AUTHENTICATED_VARIABLE_HEADER** %6, align 8, !dbg !2336
  %13 = getelementptr inbounds %struct.AUTHENTICATED_VARIABLE_HEADER, %struct.AUTHENTICATED_VARIABLE_HEADER* %12, i32 0, i32 9, !dbg !2338
  store %struct.GUID* %13, %struct.GUID** %3, align 8, !dbg !2339
  br label %17, !dbg !2339

14:                                               ; preds = %2
  %15 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %4, align 8, !dbg !2340
  %16 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %15, i32 0, i32 6, !dbg !2342
  store %struct.GUID* %16, %struct.GUID** %3, align 8, !dbg !2343
  br label %17, !dbg !2343

17:                                               ; preds = %14, %11
  %18 = load %struct.GUID*, %struct.GUID** %3, align 8, !dbg !2344
  ret %struct.GUID* %18, !dbg !2344
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @AtRuntime() #6 !dbg !2345 {
  ret i8 0, !dbg !2346
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @UpdateAccessVariableInfo(i16* %0, %struct.GUID* %1, i8 zeroext %2, i8 zeroext %3, i8 zeroext %4, i8 zeroext %5, i8 zeroext %6, %struct._VARIABLE_INFO_ENTRY** %7) #6 !dbg !2347 {
  %9 = alloca i16*, align 8
  %10 = alloca %struct.GUID*, align 8
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca %struct._VARIABLE_INFO_ENTRY**, align 8
  %17 = alloca %struct._VARIABLE_INFO_ENTRY*, align 8
  store i16* %0, i16** %9, align 8
  call void @llvm.dbg.declare(metadata i16** %9, metadata !2351, metadata !DIExpression()), !dbg !2352
  store %struct.GUID* %1, %struct.GUID** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.GUID** %10, metadata !2353, metadata !DIExpression()), !dbg !2354
  store i8 %2, i8* %11, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !2355, metadata !DIExpression()), !dbg !2356
  store i8 %3, i8* %12, align 1
  call void @llvm.dbg.declare(metadata i8* %12, metadata !2357, metadata !DIExpression()), !dbg !2358
  store i8 %4, i8* %13, align 1
  call void @llvm.dbg.declare(metadata i8* %13, metadata !2359, metadata !DIExpression()), !dbg !2360
  store i8 %5, i8* %14, align 1
  call void @llvm.dbg.declare(metadata i8* %14, metadata !2361, metadata !DIExpression()), !dbg !2362
  store i8 %6, i8* %15, align 1
  call void @llvm.dbg.declare(metadata i8* %15, metadata !2363, metadata !DIExpression()), !dbg !2364
  store %struct._VARIABLE_INFO_ENTRY** %7, %struct._VARIABLE_INFO_ENTRY*** %16, align 8
  call void @llvm.dbg.declare(metadata %struct._VARIABLE_INFO_ENTRY*** %16, metadata !2365, metadata !DIExpression()), !dbg !2366
  call void @llvm.dbg.declare(metadata %struct._VARIABLE_INFO_ENTRY** %17, metadata !2367, metadata !DIExpression()), !dbg !2368
  %18 = load i16*, i16** %9, align 8, !dbg !2369
  %19 = icmp eq i16* %18, null, !dbg !2373
  br i1 %19, label %26, label %20, !dbg !2374

20:                                               ; preds = %8
  %21 = load %struct.GUID*, %struct.GUID** %10, align 8, !dbg !2375
  %22 = icmp eq %struct.GUID* %21, null, !dbg !2376
  br i1 %22, label %26, label %23, !dbg !2377

23:                                               ; preds = %20
  %24 = load %struct._VARIABLE_INFO_ENTRY**, %struct._VARIABLE_INFO_ENTRY*** %16, align 8, !dbg !2378
  %25 = icmp eq %struct._VARIABLE_INFO_ENTRY** %24, null, !dbg !2379
  br i1 %25, label %26, label %27, !dbg !2380

26:                                               ; preds = %23, %20, %8
  br label %191, !dbg !2381

27:                                               ; preds = %23
  %28 = call zeroext i8 @AtRuntime(), !dbg !2383
  %29 = icmp ne i8 %28, 0, !dbg !2383
  br i1 %29, label %30, label %31, !dbg !2385

30:                                               ; preds = %27
  br label %191, !dbg !2386

31:                                               ; preds = %27
  %32 = load %struct._VARIABLE_INFO_ENTRY**, %struct._VARIABLE_INFO_ENTRY*** %16, align 8, !dbg !2388
  %33 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %32, align 8, !dbg !2390
  %34 = icmp eq %struct._VARIABLE_INFO_ENTRY* %33, null, !dbg !2391
  br i1 %34, label %35, label %78, !dbg !2392

35:                                               ; preds = %31
  %36 = call i8* @AllocateZeroPool(i64 56), !dbg !2393
  %37 = bitcast i8* %36 to %struct._VARIABLE_INFO_ENTRY*, !dbg !2393
  %38 = load %struct._VARIABLE_INFO_ENTRY**, %struct._VARIABLE_INFO_ENTRY*** %16, align 8, !dbg !2395
  store %struct._VARIABLE_INFO_ENTRY* %37, %struct._VARIABLE_INFO_ENTRY** %38, align 8, !dbg !2396
  %39 = load %struct._VARIABLE_INFO_ENTRY**, %struct._VARIABLE_INFO_ENTRY*** %16, align 8, !dbg !2397
  %40 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %39, align 8, !dbg !2397
  %41 = icmp ne %struct._VARIABLE_INFO_ENTRY* %40, null, !dbg !2397
  br i1 %41, label %42, label %43, !dbg !2400

42:                                               ; preds = %35
  br label %44, !dbg !2400

43:                                               ; preds = %35
  call void @__assert_fail(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6.41, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3.38, i64 0, i64 0), i32 476, i8* getelementptr inbounds ([121 x i8], [121 x i8]* @__PRETTY_FUNCTION__.UpdateAccessVariableInfo, i64 0, i64 0)) #17, !dbg !2397
  unreachable, !dbg !2397

44:                                               ; preds = %42
  %45 = load %struct._VARIABLE_INFO_ENTRY**, %struct._VARIABLE_INFO_ENTRY*** %16, align 8, !dbg !2401
  %46 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %45, align 8, !dbg !2402
  %47 = getelementptr inbounds %struct._VARIABLE_INFO_ENTRY, %struct._VARIABLE_INFO_ENTRY* %46, i32 0, i32 1, !dbg !2403
  %48 = load %struct.GUID*, %struct.GUID** %10, align 8, !dbg !2404
  %49 = call %struct.GUID* @CopyGuid(%struct.GUID* %47, %struct.GUID* %48), !dbg !2405
  %50 = load i16*, i16** %9, align 8, !dbg !2406
  %51 = call i64 @StrSize(i16* %50), !dbg !2407
  %52 = call i8* @AllocateZeroPool(i64 %51), !dbg !2408
  %53 = bitcast i8* %52 to i16*, !dbg !2408
  %54 = load %struct._VARIABLE_INFO_ENTRY**, %struct._VARIABLE_INFO_ENTRY*** %16, align 8, !dbg !2409
  %55 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %54, align 8, !dbg !2410
  %56 = getelementptr inbounds %struct._VARIABLE_INFO_ENTRY, %struct._VARIABLE_INFO_ENTRY* %55, i32 0, i32 2, !dbg !2411
  store i16* %53, i16** %56, align 8, !dbg !2412
  %57 = load %struct._VARIABLE_INFO_ENTRY**, %struct._VARIABLE_INFO_ENTRY*** %16, align 8, !dbg !2413
  %58 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %57, align 8, !dbg !2413
  %59 = getelementptr inbounds %struct._VARIABLE_INFO_ENTRY, %struct._VARIABLE_INFO_ENTRY* %58, i32 0, i32 2, !dbg !2413
  %60 = load i16*, i16** %59, align 8, !dbg !2413
  %61 = icmp ne i16* %60, null, !dbg !2413
  br i1 %61, label %62, label %63, !dbg !2416

62:                                               ; preds = %44
  br label %64, !dbg !2416

63:                                               ; preds = %44
  call void @__assert_fail(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7.42, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3.38, i64 0, i64 0), i32 480, i8* getelementptr inbounds ([121 x i8], [121 x i8]* @__PRETTY_FUNCTION__.UpdateAccessVariableInfo, i64 0, i64 0)) #17, !dbg !2413
  unreachable, !dbg !2413

64:                                               ; preds = %62
  %65 = load %struct._VARIABLE_INFO_ENTRY**, %struct._VARIABLE_INFO_ENTRY*** %16, align 8, !dbg !2417
  %66 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %65, align 8, !dbg !2418
  %67 = getelementptr inbounds %struct._VARIABLE_INFO_ENTRY, %struct._VARIABLE_INFO_ENTRY* %66, i32 0, i32 2, !dbg !2419
  %68 = load i16*, i16** %67, align 8, !dbg !2419
  %69 = load i16*, i16** %9, align 8, !dbg !2420
  %70 = call i64 @StrSize(i16* %69), !dbg !2421
  %71 = udiv i64 %70, 2, !dbg !2422
  %72 = load i16*, i16** %9, align 8, !dbg !2423
  %73 = call i64 @StrCpyS(i16* %68, i64 %71, i16* %72), !dbg !2424
  %74 = load i8, i8* %11, align 1, !dbg !2425
  %75 = load %struct._VARIABLE_INFO_ENTRY**, %struct._VARIABLE_INFO_ENTRY*** %16, align 8, !dbg !2426
  %76 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %75, align 8, !dbg !2427
  %77 = getelementptr inbounds %struct._VARIABLE_INFO_ENTRY, %struct._VARIABLE_INFO_ENTRY* %76, i32 0, i32 8, !dbg !2428
  store i8 %74, i8* %77, align 4, !dbg !2429
  br label %78, !dbg !2430

78:                                               ; preds = %64, %31
  %79 = load %struct._VARIABLE_INFO_ENTRY**, %struct._VARIABLE_INFO_ENTRY*** %16, align 8, !dbg !2431
  %80 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %79, align 8, !dbg !2433
  store %struct._VARIABLE_INFO_ENTRY* %80, %struct._VARIABLE_INFO_ENTRY** %17, align 8, !dbg !2434
  br label %81, !dbg !2435

81:                                               ; preds = %187, %78
  %82 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %17, align 8, !dbg !2436
  %83 = icmp ne %struct._VARIABLE_INFO_ENTRY* %82, null, !dbg !2438
  br i1 %83, label %84, label %191, !dbg !2439

84:                                               ; preds = %81
  %85 = load %struct.GUID*, %struct.GUID** %10, align 8, !dbg !2440
  %86 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %17, align 8, !dbg !2443
  %87 = getelementptr inbounds %struct._VARIABLE_INFO_ENTRY, %struct._VARIABLE_INFO_ENTRY* %86, i32 0, i32 1, !dbg !2444
  %88 = call zeroext i8 @CompareGuid(%struct.GUID* %85, %struct.GUID* %87), !dbg !2445
  %89 = icmp ne i8 %88, 0, !dbg !2445
  br i1 %89, label %90, label %131, !dbg !2446

90:                                               ; preds = %84
  %91 = load i16*, i16** %9, align 8, !dbg !2447
  %92 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %17, align 8, !dbg !2450
  %93 = getelementptr inbounds %struct._VARIABLE_INFO_ENTRY, %struct._VARIABLE_INFO_ENTRY* %92, i32 0, i32 2, !dbg !2451
  %94 = load i16*, i16** %93, align 8, !dbg !2451
  %95 = call i64 @StrCmp(i16* %91, i16* %94), !dbg !2452
  %96 = icmp eq i64 %95, 0, !dbg !2453
  br i1 %96, label %97, label %130, !dbg !2454

97:                                               ; preds = %90
  %98 = load i8, i8* %12, align 1, !dbg !2455
  %99 = icmp ne i8 %98, 0, !dbg !2455
  br i1 %99, label %100, label %105, !dbg !2458

100:                                              ; preds = %97
  %101 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %17, align 8, !dbg !2459
  %102 = getelementptr inbounds %struct._VARIABLE_INFO_ENTRY, %struct._VARIABLE_INFO_ENTRY* %101, i32 0, i32 4, !dbg !2461
  %103 = load i32, i32* %102, align 4, !dbg !2462
  %104 = add i32 %103, 1, !dbg !2462
  store i32 %104, i32* %102, align 4, !dbg !2462
  br label %105, !dbg !2463

105:                                              ; preds = %100, %97
  %106 = load i8, i8* %13, align 1, !dbg !2464
  %107 = icmp ne i8 %106, 0, !dbg !2464
  br i1 %107, label %108, label %113, !dbg !2466

108:                                              ; preds = %105
  %109 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %17, align 8, !dbg !2467
  %110 = getelementptr inbounds %struct._VARIABLE_INFO_ENTRY, %struct._VARIABLE_INFO_ENTRY* %109, i32 0, i32 5, !dbg !2469
  %111 = load i32, i32* %110, align 8, !dbg !2470
  %112 = add i32 %111, 1, !dbg !2470
  store i32 %112, i32* %110, align 8, !dbg !2470
  br label %113, !dbg !2471

113:                                              ; preds = %108, %105
  %114 = load i8, i8* %14, align 1, !dbg !2472
  %115 = icmp ne i8 %114, 0, !dbg !2472
  br i1 %115, label %116, label %121, !dbg !2474

116:                                              ; preds = %113
  %117 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %17, align 8, !dbg !2475
  %118 = getelementptr inbounds %struct._VARIABLE_INFO_ENTRY, %struct._VARIABLE_INFO_ENTRY* %117, i32 0, i32 6, !dbg !2477
  %119 = load i32, i32* %118, align 4, !dbg !2478
  %120 = add i32 %119, 1, !dbg !2478
  store i32 %120, i32* %118, align 4, !dbg !2478
  br label %121, !dbg !2479

121:                                              ; preds = %116, %113
  %122 = load i8, i8* %15, align 1, !dbg !2480
  %123 = icmp ne i8 %122, 0, !dbg !2480
  br i1 %123, label %124, label %129, !dbg !2482

124:                                              ; preds = %121
  %125 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %17, align 8, !dbg !2483
  %126 = getelementptr inbounds %struct._VARIABLE_INFO_ENTRY, %struct._VARIABLE_INFO_ENTRY* %125, i32 0, i32 7, !dbg !2485
  %127 = load i32, i32* %126, align 8, !dbg !2486
  %128 = add i32 %127, 1, !dbg !2486
  store i32 %128, i32* %126, align 8, !dbg !2486
  br label %129, !dbg !2487

129:                                              ; preds = %124, %121
  br label %191, !dbg !2488

130:                                              ; preds = %90
  br label %131, !dbg !2489

131:                                              ; preds = %130, %84
  %132 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %17, align 8, !dbg !2490
  %133 = getelementptr inbounds %struct._VARIABLE_INFO_ENTRY, %struct._VARIABLE_INFO_ENTRY* %132, i32 0, i32 0, !dbg !2492
  %134 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %133, align 8, !dbg !2492
  %135 = icmp eq %struct._VARIABLE_INFO_ENTRY* %134, null, !dbg !2493
  br i1 %135, label %136, label %186, !dbg !2494

136:                                              ; preds = %131
  %137 = call i8* @AllocateZeroPool(i64 56), !dbg !2495
  %138 = bitcast i8* %137 to %struct._VARIABLE_INFO_ENTRY*, !dbg !2495
  %139 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %17, align 8, !dbg !2497
  %140 = getelementptr inbounds %struct._VARIABLE_INFO_ENTRY, %struct._VARIABLE_INFO_ENTRY* %139, i32 0, i32 0, !dbg !2498
  store %struct._VARIABLE_INFO_ENTRY* %138, %struct._VARIABLE_INFO_ENTRY** %140, align 8, !dbg !2499
  %141 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %17, align 8, !dbg !2500
  %142 = getelementptr inbounds %struct._VARIABLE_INFO_ENTRY, %struct._VARIABLE_INFO_ENTRY* %141, i32 0, i32 0, !dbg !2500
  %143 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %142, align 8, !dbg !2500
  %144 = icmp ne %struct._VARIABLE_INFO_ENTRY* %143, null, !dbg !2500
  br i1 %144, label %145, label %146, !dbg !2503

145:                                              ; preds = %136
  br label %147, !dbg !2503

146:                                              ; preds = %136
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8.43, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3.38, i64 0, i64 0), i32 514, i8* getelementptr inbounds ([121 x i8], [121 x i8]* @__PRETTY_FUNCTION__.UpdateAccessVariableInfo, i64 0, i64 0)) #17, !dbg !2500
  unreachable, !dbg !2500

147:                                              ; preds = %145
  %148 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %17, align 8, !dbg !2504
  %149 = getelementptr inbounds %struct._VARIABLE_INFO_ENTRY, %struct._VARIABLE_INFO_ENTRY* %148, i32 0, i32 0, !dbg !2505
  %150 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %149, align 8, !dbg !2505
  %151 = getelementptr inbounds %struct._VARIABLE_INFO_ENTRY, %struct._VARIABLE_INFO_ENTRY* %150, i32 0, i32 1, !dbg !2506
  %152 = load %struct.GUID*, %struct.GUID** %10, align 8, !dbg !2507
  %153 = call %struct.GUID* @CopyGuid(%struct.GUID* %151, %struct.GUID* %152), !dbg !2508
  %154 = load i16*, i16** %9, align 8, !dbg !2509
  %155 = call i64 @StrSize(i16* %154), !dbg !2510
  %156 = call i8* @AllocateZeroPool(i64 %155), !dbg !2511
  %157 = bitcast i8* %156 to i16*, !dbg !2511
  %158 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %17, align 8, !dbg !2512
  %159 = getelementptr inbounds %struct._VARIABLE_INFO_ENTRY, %struct._VARIABLE_INFO_ENTRY* %158, i32 0, i32 0, !dbg !2513
  %160 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %159, align 8, !dbg !2513
  %161 = getelementptr inbounds %struct._VARIABLE_INFO_ENTRY, %struct._VARIABLE_INFO_ENTRY* %160, i32 0, i32 2, !dbg !2514
  store i16* %157, i16** %161, align 8, !dbg !2515
  %162 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %17, align 8, !dbg !2516
  %163 = getelementptr inbounds %struct._VARIABLE_INFO_ENTRY, %struct._VARIABLE_INFO_ENTRY* %162, i32 0, i32 0, !dbg !2516
  %164 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %163, align 8, !dbg !2516
  %165 = getelementptr inbounds %struct._VARIABLE_INFO_ENTRY, %struct._VARIABLE_INFO_ENTRY* %164, i32 0, i32 2, !dbg !2516
  %166 = load i16*, i16** %165, align 8, !dbg !2516
  %167 = icmp ne i16* %166, null, !dbg !2516
  br i1 %167, label %168, label %169, !dbg !2519

168:                                              ; preds = %147
  br label %170, !dbg !2519

169:                                              ; preds = %147
  call void @__assert_fail(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9.44, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3.38, i64 0, i64 0), i32 518, i8* getelementptr inbounds ([121 x i8], [121 x i8]* @__PRETTY_FUNCTION__.UpdateAccessVariableInfo, i64 0, i64 0)) #17, !dbg !2516
  unreachable, !dbg !2516

170:                                              ; preds = %168
  %171 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %17, align 8, !dbg !2520
  %172 = getelementptr inbounds %struct._VARIABLE_INFO_ENTRY, %struct._VARIABLE_INFO_ENTRY* %171, i32 0, i32 0, !dbg !2521
  %173 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %172, align 8, !dbg !2521
  %174 = getelementptr inbounds %struct._VARIABLE_INFO_ENTRY, %struct._VARIABLE_INFO_ENTRY* %173, i32 0, i32 2, !dbg !2522
  %175 = load i16*, i16** %174, align 8, !dbg !2522
  %176 = load i16*, i16** %9, align 8, !dbg !2523
  %177 = call i64 @StrSize(i16* %176), !dbg !2524
  %178 = udiv i64 %177, 2, !dbg !2525
  %179 = load i16*, i16** %9, align 8, !dbg !2526
  %180 = call i64 @StrCpyS(i16* %175, i64 %178, i16* %179), !dbg !2527
  %181 = load i8, i8* %11, align 1, !dbg !2528
  %182 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %17, align 8, !dbg !2529
  %183 = getelementptr inbounds %struct._VARIABLE_INFO_ENTRY, %struct._VARIABLE_INFO_ENTRY* %182, i32 0, i32 0, !dbg !2530
  %184 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %183, align 8, !dbg !2530
  %185 = getelementptr inbounds %struct._VARIABLE_INFO_ENTRY, %struct._VARIABLE_INFO_ENTRY* %184, i32 0, i32 8, !dbg !2531
  store i8 %181, i8* %185, align 4, !dbg !2532
  br label %186, !dbg !2533

186:                                              ; preds = %170, %131
  br label %187, !dbg !2534

187:                                              ; preds = %186
  %188 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %17, align 8, !dbg !2535
  %189 = getelementptr inbounds %struct._VARIABLE_INFO_ENTRY, %struct._VARIABLE_INFO_ENTRY* %188, i32 0, i32 0, !dbg !2536
  %190 = load %struct._VARIABLE_INFO_ENTRY*, %struct._VARIABLE_INFO_ENTRY** %189, align 8, !dbg !2536
  store %struct._VARIABLE_INFO_ENTRY* %190, %struct._VARIABLE_INFO_ENTRY** %17, align 8, !dbg !2537
  br label %81, !dbg !2538, !llvm.loop !2539

191:                                              ; preds = %26, %30, %129, %81
  ret void, !dbg !2541
}

declare dso_local i8* @AllocateZeroPool(i64) #10

declare dso_local %struct.GUID* @CopyGuid(%struct.GUID*, %struct.GUID*) #10

declare dso_local i64 @StrSize(i16*) #10

declare dso_local i64 @StrCpyS(i16*, i64, i16*) #10

declare dso_local zeroext i8 @CompareGuid(%struct.GUID*, %struct.GUID*) #10

declare dso_local i64 @StrCmp(i16*, i16*) #10

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @AccessVariableCompareTimeStampInternal(%struct.EFI_TIME* %0, %struct.EFI_TIME* %1) #6 !dbg !2542 {
  %3 = alloca i8, align 1
  %4 = alloca %struct.EFI_TIME*, align 8
  %5 = alloca %struct.EFI_TIME*, align 8
  store %struct.EFI_TIME* %0, %struct.EFI_TIME** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.EFI_TIME** %4, metadata !2545, metadata !DIExpression()), !dbg !2546
  store %struct.EFI_TIME* %1, %struct.EFI_TIME** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.EFI_TIME** %5, metadata !2547, metadata !DIExpression()), !dbg !2548
  %6 = load %struct.EFI_TIME*, %struct.EFI_TIME** %4, align 8, !dbg !2549
  %7 = getelementptr inbounds %struct.EFI_TIME, %struct.EFI_TIME* %6, i32 0, i32 0, !dbg !2551
  %8 = load i16, i16* %7, align 4, !dbg !2551
  %9 = zext i16 %8 to i32, !dbg !2549
  %10 = load %struct.EFI_TIME*, %struct.EFI_TIME** %5, align 8, !dbg !2552
  %11 = getelementptr inbounds %struct.EFI_TIME, %struct.EFI_TIME* %10, i32 0, i32 0, !dbg !2553
  %12 = load i16, i16* %11, align 4, !dbg !2553
  %13 = zext i16 %12 to i32, !dbg !2552
  %14 = icmp ne i32 %9, %13, !dbg !2554
  br i1 %14, label %15, label %27, !dbg !2555

15:                                               ; preds = %2
  %16 = load %struct.EFI_TIME*, %struct.EFI_TIME** %4, align 8, !dbg !2556
  %17 = getelementptr inbounds %struct.EFI_TIME, %struct.EFI_TIME* %16, i32 0, i32 0, !dbg !2558
  %18 = load i16, i16* %17, align 4, !dbg !2558
  %19 = zext i16 %18 to i32, !dbg !2556
  %20 = load %struct.EFI_TIME*, %struct.EFI_TIME** %5, align 8, !dbg !2559
  %21 = getelementptr inbounds %struct.EFI_TIME, %struct.EFI_TIME* %20, i32 0, i32 0, !dbg !2560
  %22 = load i16, i16* %21, align 4, !dbg !2560
  %23 = zext i16 %22 to i32, !dbg !2559
  %24 = icmp slt i32 %19, %23, !dbg !2561
  %25 = zext i1 %24 to i32, !dbg !2561
  %26 = trunc i32 %25 to i8, !dbg !2562
  store i8 %26, i8* %3, align 1, !dbg !2563
  br label %131, !dbg !2563

27:                                               ; preds = %2
  %28 = load %struct.EFI_TIME*, %struct.EFI_TIME** %4, align 8, !dbg !2564
  %29 = getelementptr inbounds %struct.EFI_TIME, %struct.EFI_TIME* %28, i32 0, i32 1, !dbg !2566
  %30 = load i8, i8* %29, align 2, !dbg !2566
  %31 = zext i8 %30 to i32, !dbg !2564
  %32 = load %struct.EFI_TIME*, %struct.EFI_TIME** %5, align 8, !dbg !2567
  %33 = getelementptr inbounds %struct.EFI_TIME, %struct.EFI_TIME* %32, i32 0, i32 1, !dbg !2568
  %34 = load i8, i8* %33, align 2, !dbg !2568
  %35 = zext i8 %34 to i32, !dbg !2567
  %36 = icmp ne i32 %31, %35, !dbg !2569
  br i1 %36, label %37, label %49, !dbg !2570

37:                                               ; preds = %27
  %38 = load %struct.EFI_TIME*, %struct.EFI_TIME** %4, align 8, !dbg !2571
  %39 = getelementptr inbounds %struct.EFI_TIME, %struct.EFI_TIME* %38, i32 0, i32 1, !dbg !2573
  %40 = load i8, i8* %39, align 2, !dbg !2573
  %41 = zext i8 %40 to i32, !dbg !2571
  %42 = load %struct.EFI_TIME*, %struct.EFI_TIME** %5, align 8, !dbg !2574
  %43 = getelementptr inbounds %struct.EFI_TIME, %struct.EFI_TIME* %42, i32 0, i32 1, !dbg !2575
  %44 = load i8, i8* %43, align 2, !dbg !2575
  %45 = zext i8 %44 to i32, !dbg !2574
  %46 = icmp slt i32 %41, %45, !dbg !2576
  %47 = zext i1 %46 to i32, !dbg !2576
  %48 = trunc i32 %47 to i8, !dbg !2577
  store i8 %48, i8* %3, align 1, !dbg !2578
  br label %131, !dbg !2578

49:                                               ; preds = %27
  %50 = load %struct.EFI_TIME*, %struct.EFI_TIME** %4, align 8, !dbg !2579
  %51 = getelementptr inbounds %struct.EFI_TIME, %struct.EFI_TIME* %50, i32 0, i32 2, !dbg !2581
  %52 = load i8, i8* %51, align 1, !dbg !2581
  %53 = zext i8 %52 to i32, !dbg !2579
  %54 = load %struct.EFI_TIME*, %struct.EFI_TIME** %5, align 8, !dbg !2582
  %55 = getelementptr inbounds %struct.EFI_TIME, %struct.EFI_TIME* %54, i32 0, i32 2, !dbg !2583
  %56 = load i8, i8* %55, align 1, !dbg !2583
  %57 = zext i8 %56 to i32, !dbg !2582
  %58 = icmp ne i32 %53, %57, !dbg !2584
  br i1 %58, label %59, label %71, !dbg !2585

59:                                               ; preds = %49
  %60 = load %struct.EFI_TIME*, %struct.EFI_TIME** %4, align 8, !dbg !2586
  %61 = getelementptr inbounds %struct.EFI_TIME, %struct.EFI_TIME* %60, i32 0, i32 2, !dbg !2588
  %62 = load i8, i8* %61, align 1, !dbg !2588
  %63 = zext i8 %62 to i32, !dbg !2586
  %64 = load %struct.EFI_TIME*, %struct.EFI_TIME** %5, align 8, !dbg !2589
  %65 = getelementptr inbounds %struct.EFI_TIME, %struct.EFI_TIME* %64, i32 0, i32 2, !dbg !2590
  %66 = load i8, i8* %65, align 1, !dbg !2590
  %67 = zext i8 %66 to i32, !dbg !2589
  %68 = icmp slt i32 %63, %67, !dbg !2591
  %69 = zext i1 %68 to i32, !dbg !2591
  %70 = trunc i32 %69 to i8, !dbg !2592
  store i8 %70, i8* %3, align 1, !dbg !2593
  br label %131, !dbg !2593

71:                                               ; preds = %49
  %72 = load %struct.EFI_TIME*, %struct.EFI_TIME** %4, align 8, !dbg !2594
  %73 = getelementptr inbounds %struct.EFI_TIME, %struct.EFI_TIME* %72, i32 0, i32 3, !dbg !2596
  %74 = load i8, i8* %73, align 4, !dbg !2596
  %75 = zext i8 %74 to i32, !dbg !2594
  %76 = load %struct.EFI_TIME*, %struct.EFI_TIME** %5, align 8, !dbg !2597
  %77 = getelementptr inbounds %struct.EFI_TIME, %struct.EFI_TIME* %76, i32 0, i32 3, !dbg !2598
  %78 = load i8, i8* %77, align 4, !dbg !2598
  %79 = zext i8 %78 to i32, !dbg !2597
  %80 = icmp ne i32 %75, %79, !dbg !2599
  br i1 %80, label %81, label %93, !dbg !2600

81:                                               ; preds = %71
  %82 = load %struct.EFI_TIME*, %struct.EFI_TIME** %4, align 8, !dbg !2601
  %83 = getelementptr inbounds %struct.EFI_TIME, %struct.EFI_TIME* %82, i32 0, i32 3, !dbg !2603
  %84 = load i8, i8* %83, align 4, !dbg !2603
  %85 = zext i8 %84 to i32, !dbg !2601
  %86 = load %struct.EFI_TIME*, %struct.EFI_TIME** %5, align 8, !dbg !2604
  %87 = getelementptr inbounds %struct.EFI_TIME, %struct.EFI_TIME* %86, i32 0, i32 3, !dbg !2605
  %88 = load i8, i8* %87, align 4, !dbg !2605
  %89 = zext i8 %88 to i32, !dbg !2604
  %90 = icmp slt i32 %85, %89, !dbg !2606
  %91 = zext i1 %90 to i32, !dbg !2606
  %92 = trunc i32 %91 to i8, !dbg !2607
  store i8 %92, i8* %3, align 1, !dbg !2608
  br label %131, !dbg !2608

93:                                               ; preds = %71
  %94 = load %struct.EFI_TIME*, %struct.EFI_TIME** %4, align 8, !dbg !2609
  %95 = getelementptr inbounds %struct.EFI_TIME, %struct.EFI_TIME* %94, i32 0, i32 4, !dbg !2611
  %96 = load i8, i8* %95, align 1, !dbg !2611
  %97 = zext i8 %96 to i32, !dbg !2609
  %98 = load %struct.EFI_TIME*, %struct.EFI_TIME** %5, align 8, !dbg !2612
  %99 = getelementptr inbounds %struct.EFI_TIME, %struct.EFI_TIME* %98, i32 0, i32 4, !dbg !2613
  %100 = load i8, i8* %99, align 1, !dbg !2613
  %101 = zext i8 %100 to i32, !dbg !2612
  %102 = icmp ne i32 %97, %101, !dbg !2614
  br i1 %102, label %103, label %115, !dbg !2615

103:                                              ; preds = %93
  %104 = load %struct.EFI_TIME*, %struct.EFI_TIME** %4, align 8, !dbg !2616
  %105 = getelementptr inbounds %struct.EFI_TIME, %struct.EFI_TIME* %104, i32 0, i32 4, !dbg !2618
  %106 = load i8, i8* %105, align 1, !dbg !2618
  %107 = zext i8 %106 to i32, !dbg !2616
  %108 = load %struct.EFI_TIME*, %struct.EFI_TIME** %5, align 8, !dbg !2619
  %109 = getelementptr inbounds %struct.EFI_TIME, %struct.EFI_TIME* %108, i32 0, i32 4, !dbg !2620
  %110 = load i8, i8* %109, align 1, !dbg !2620
  %111 = zext i8 %110 to i32, !dbg !2619
  %112 = icmp slt i32 %107, %111, !dbg !2621
  %113 = zext i1 %112 to i32, !dbg !2621
  %114 = trunc i32 %113 to i8, !dbg !2622
  store i8 %114, i8* %3, align 1, !dbg !2623
  br label %131, !dbg !2623

115:                                              ; preds = %93
  br label %116

116:                                              ; preds = %115
  br label %117

117:                                              ; preds = %116
  br label %118

118:                                              ; preds = %117
  br label %119

119:                                              ; preds = %118
  %120 = load %struct.EFI_TIME*, %struct.EFI_TIME** %4, align 8, !dbg !2624
  %121 = getelementptr inbounds %struct.EFI_TIME, %struct.EFI_TIME* %120, i32 0, i32 5, !dbg !2625
  %122 = load i8, i8* %121, align 2, !dbg !2625
  %123 = zext i8 %122 to i32, !dbg !2624
  %124 = load %struct.EFI_TIME*, %struct.EFI_TIME** %5, align 8, !dbg !2626
  %125 = getelementptr inbounds %struct.EFI_TIME, %struct.EFI_TIME* %124, i32 0, i32 5, !dbg !2627
  %126 = load i8, i8* %125, align 2, !dbg !2627
  %127 = zext i8 %126 to i32, !dbg !2626
  %128 = icmp sle i32 %123, %127, !dbg !2628
  %129 = zext i1 %128 to i32, !dbg !2628
  %130 = trunc i32 %129 to i8, !dbg !2629
  store i8 %130, i8* %3, align 1, !dbg !2630
  br label %131, !dbg !2630

131:                                              ; preds = %119, %103, %81, %59, %37, %15
  %132 = load i8, i8* %3, align 1, !dbg !2631
  ret i8 %132, !dbg !2631
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @SetNameSizeOfAccessVariable(%struct.ACCESS_VARIABLE_HEADER* %0, i64 %1, i8 zeroext %2) #6 !dbg !2632 {
  %4 = alloca %struct.ACCESS_VARIABLE_HEADER*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  %7 = alloca %struct.AUTHENTICATED_VARIABLE_HEADER*, align 8
  store %struct.ACCESS_VARIABLE_HEADER* %0, %struct.ACCESS_VARIABLE_HEADER** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.ACCESS_VARIABLE_HEADER** %4, metadata !2635, metadata !DIExpression()), !dbg !2636
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !2637, metadata !DIExpression()), !dbg !2638
  store i8 %2, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !2639, metadata !DIExpression()), !dbg !2640
  call void @llvm.dbg.declare(metadata %struct.AUTHENTICATED_VARIABLE_HEADER** %7, metadata !2641, metadata !DIExpression()), !dbg !2642
  %8 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %4, align 8, !dbg !2643
  %9 = bitcast %struct.ACCESS_VARIABLE_HEADER* %8 to %struct.AUTHENTICATED_VARIABLE_HEADER*, !dbg !2644
  store %struct.AUTHENTICATED_VARIABLE_HEADER* %9, %struct.AUTHENTICATED_VARIABLE_HEADER** %7, align 8, !dbg !2645
  %10 = load i8, i8* %6, align 1, !dbg !2646
  %11 = icmp ne i8 %10, 0, !dbg !2646
  br i1 %11, label %12, label %17, !dbg !2648

12:                                               ; preds = %3
  %13 = load i64, i64* %5, align 8, !dbg !2649
  %14 = trunc i64 %13 to i32, !dbg !2651
  %15 = load %struct.AUTHENTICATED_VARIABLE_HEADER*, %struct.AUTHENTICATED_VARIABLE_HEADER** %7, align 8, !dbg !2652
  %16 = getelementptr inbounds %struct.AUTHENTICATED_VARIABLE_HEADER, %struct.AUTHENTICATED_VARIABLE_HEADER* %15, i32 0, i32 7, !dbg !2653
  store i32 %14, i32* %16, align 1, !dbg !2654
  br label %22, !dbg !2655

17:                                               ; preds = %3
  %18 = load i64, i64* %5, align 8, !dbg !2656
  %19 = trunc i64 %18 to i32, !dbg !2658
  %20 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %4, align 8, !dbg !2659
  %21 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %20, i32 0, i32 4, !dbg !2660
  store i32 %19, i32* %21, align 1, !dbg !2661
  br label %22

22:                                               ; preds = %17, %12
  ret void, !dbg !2662
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @SetDataSizeOfAccessVariable(%struct.ACCESS_VARIABLE_HEADER* %0, i64 %1, i8 zeroext %2) #6 !dbg !2663 {
  %4 = alloca %struct.ACCESS_VARIABLE_HEADER*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  %7 = alloca %struct.AUTHENTICATED_VARIABLE_HEADER*, align 8
  store %struct.ACCESS_VARIABLE_HEADER* %0, %struct.ACCESS_VARIABLE_HEADER** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.ACCESS_VARIABLE_HEADER** %4, metadata !2664, metadata !DIExpression()), !dbg !2665
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !2666, metadata !DIExpression()), !dbg !2667
  store i8 %2, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !2668, metadata !DIExpression()), !dbg !2669
  call void @llvm.dbg.declare(metadata %struct.AUTHENTICATED_VARIABLE_HEADER** %7, metadata !2670, metadata !DIExpression()), !dbg !2671
  %8 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %4, align 8, !dbg !2672
  %9 = bitcast %struct.ACCESS_VARIABLE_HEADER* %8 to %struct.AUTHENTICATED_VARIABLE_HEADER*, !dbg !2673
  store %struct.AUTHENTICATED_VARIABLE_HEADER* %9, %struct.AUTHENTICATED_VARIABLE_HEADER** %7, align 8, !dbg !2674
  %10 = load i8, i8* %6, align 1, !dbg !2675
  %11 = icmp ne i8 %10, 0, !dbg !2675
  br i1 %11, label %12, label %17, !dbg !2677

12:                                               ; preds = %3
  %13 = load i64, i64* %5, align 8, !dbg !2678
  %14 = trunc i64 %13 to i32, !dbg !2680
  %15 = load %struct.AUTHENTICATED_VARIABLE_HEADER*, %struct.AUTHENTICATED_VARIABLE_HEADER** %7, align 8, !dbg !2681
  %16 = getelementptr inbounds %struct.AUTHENTICATED_VARIABLE_HEADER, %struct.AUTHENTICATED_VARIABLE_HEADER* %15, i32 0, i32 8, !dbg !2682
  store i32 %14, i32* %16, align 1, !dbg !2683
  br label %22, !dbg !2684

17:                                               ; preds = %3
  %18 = load i64, i64* %5, align 8, !dbg !2685
  %19 = trunc i64 %18 to i32, !dbg !2687
  %20 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %4, align 8, !dbg !2688
  %21 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %20, i32 0, i32 5, !dbg !2689
  store i32 %19, i32* %21, align 1, !dbg !2690
  br label %22

22:                                               ; preds = %17, %12
  ret void, !dbg !2691
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @UpdateAccessVariableStore(%struct.VARIABLE_GLOBAL* %0, i8 zeroext %1, i8 zeroext %2, %struct._EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL* %3, i64 %4, i32 %5, i8* %6) #6 !dbg !2692 {
  %8 = alloca i64, align 8
  %9 = alloca %struct.VARIABLE_GLOBAL*, align 8
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca %struct._EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i64, align 8
  store %struct.VARIABLE_GLOBAL* %0, %struct.VARIABLE_GLOBAL** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.VARIABLE_GLOBAL** %9, metadata !2696, metadata !DIExpression()), !dbg !2697
  store i8 %1, i8* %10, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !2698, metadata !DIExpression()), !dbg !2699
  store i8 %2, i8* %11, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !2700, metadata !DIExpression()), !dbg !2701
  store %struct._EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL* %3, %struct._EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL** %12, align 8
  call void @llvm.dbg.declare(metadata %struct._EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL** %12, metadata !2702, metadata !DIExpression()), !dbg !2703
  store i64 %4, i64* %13, align 8
  call void @llvm.dbg.declare(metadata i64* %13, metadata !2704, metadata !DIExpression()), !dbg !2705
  store i32 %5, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !2706, metadata !DIExpression()), !dbg !2707
  store i8* %6, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !2708, metadata !DIExpression()), !dbg !2709
  call void @llvm.dbg.declare(metadata i64* %16, metadata !2710, metadata !DIExpression()), !dbg !2711
  %17 = load i64, i64* %13, align 8, !dbg !2712
  store i64 %17, i64* %16, align 8, !dbg !2711
  %18 = load i8, i8* %11, align 1, !dbg !2713
  %19 = icmp ne i8 %18, 0, !dbg !2713
  br i1 %19, label %20, label %25, !dbg !2715

20:                                               ; preds = %7
  %21 = load %struct.VARIABLE_STORE_HEADER*, %struct.VARIABLE_STORE_HEADER** @mineNvVariableCache, align 8, !dbg !2716
  %22 = ptrtoint %struct.VARIABLE_STORE_HEADER* %21 to i64, !dbg !2718
  %23 = load i64, i64* %16, align 8, !dbg !2719
  %24 = add i64 %23, %22, !dbg !2719
  store i64 %24, i64* %16, align 8, !dbg !2719
  br label %25, !dbg !2720

25:                                               ; preds = %20, %7
  %26 = load i64, i64* %16, align 8, !dbg !2721
  %27 = load i32, i32* %14, align 4, !dbg !2723
  %28 = zext i32 %27 to i64, !dbg !2723
  %29 = add i64 %26, %28, !dbg !2724
  %30 = load %struct.VARIABLE_STORE_HEADER*, %struct.VARIABLE_STORE_HEADER** @mineNvVariableCache, align 8, !dbg !2725
  %31 = ptrtoint %struct.VARIABLE_STORE_HEADER* %30 to i64, !dbg !2726
  %32 = load %struct.VARIABLE_STORE_HEADER*, %struct.VARIABLE_STORE_HEADER** @mineNvVariableCache, align 8, !dbg !2727
  %33 = getelementptr inbounds %struct.VARIABLE_STORE_HEADER, %struct.VARIABLE_STORE_HEADER* %32, i32 0, i32 1, !dbg !2728
  %34 = load i32, i32* %33, align 1, !dbg !2728
  %35 = zext i32 %34 to i64, !dbg !2727
  %36 = add i64 %31, %35, !dbg !2729
  %37 = icmp ugt i64 %29, %36, !dbg !2730
  br i1 %37, label %38, label %39, !dbg !2731

38:                                               ; preds = %25
  store i64 -9223372036854775799, i64* %8, align 8, !dbg !2732
  br label %46, !dbg !2732

39:                                               ; preds = %25
  %40 = load i64, i64* %16, align 8, !dbg !2734
  %41 = inttoptr i64 %40 to i8*, !dbg !2735
  %42 = load i8*, i8** %15, align 8, !dbg !2736
  %43 = load i32, i32* %14, align 4, !dbg !2737
  %44 = zext i32 %43 to i64, !dbg !2737
  %45 = call i8* @CopyMem(i8* %41, i8* %42, i64 %44), !dbg !2738
  store i64 0, i64* %8, align 8, !dbg !2739
  br label %46, !dbg !2739

46:                                               ; preds = %39, %38
  %47 = load i64, i64* %8, align 8, !dbg !2740
  ret i64 %47, !dbg !2740
}

declare dso_local i8* @CopyMem(i8*, i8*, i64) #10

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @GetAccessVariableDataOffset(%struct.ACCESS_VARIABLE_HEADER* %0, i8 zeroext %1) #6 !dbg !2741 {
  %3 = alloca %struct.ACCESS_VARIABLE_HEADER*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i64, align 8
  store %struct.ACCESS_VARIABLE_HEADER* %0, %struct.ACCESS_VARIABLE_HEADER** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.ACCESS_VARIABLE_HEADER** %3, metadata !2742, metadata !DIExpression()), !dbg !2743
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !2744, metadata !DIExpression()), !dbg !2745
  call void @llvm.dbg.declare(metadata i64* %5, metadata !2746, metadata !DIExpression()), !dbg !2747
  %6 = load i8, i8* %4, align 1, !dbg !2748
  %7 = call i64 @GetAccessVariableHeaderSize(i8 zeroext %6), !dbg !2749
  store i64 %7, i64* %5, align 8, !dbg !2750
  %8 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %3, align 8, !dbg !2751
  %9 = load i8, i8* %4, align 1, !dbg !2752
  %10 = call i64 @NameSizeOfAccessVariable(%struct.ACCESS_VARIABLE_HEADER* %8, i8 zeroext %9), !dbg !2753
  %11 = load i64, i64* %5, align 8, !dbg !2754
  %12 = add i64 %11, %10, !dbg !2754
  store i64 %12, i64* %5, align 8, !dbg !2754
  %13 = load i64, i64* %5, align 8, !dbg !2755
  %14 = add i64 %13, 0, !dbg !2755
  store i64 %14, i64* %5, align 8, !dbg !2755
  %15 = load i64, i64* %5, align 8, !dbg !2756
  ret i64 %15, !dbg !2757
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @UpdateAccessVariable(i16* %0, %struct.GUID* %1, %struct._DEMO1_ACCESS_KEY* %2, i8* %3, i64 %4, i32 %5, i32 %6, i64 %7, %struct.ACCESS_VARIABLE_POINTER_TRACK* %8, %struct.EFI_TIME* %9) #6 !dbg !2758 {
  %11 = alloca i64, align 8
  %12 = alloca i16*, align 8
  %13 = alloca %struct.GUID*, align 8
  %14 = alloca %struct._DEMO1_ACCESS_KEY*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i64, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i64, align 8
  %20 = alloca %struct.ACCESS_VARIABLE_POINTER_TRACK*, align 8
  %21 = alloca %struct.EFI_TIME*, align 8
  %22 = alloca i64, align 8
  %23 = alloca %struct.ACCESS_VARIABLE_HEADER*, align 8
  %24 = alloca i64, align 8
  %25 = alloca i64, align 8
  %26 = alloca i64, align 8
  %27 = alloca i64, align 8
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  %30 = alloca %struct._EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL*, align 8
  %31 = alloca i8, align 1
  %32 = alloca %struct.ACCESS_VARIABLE_POINTER_TRACK*, align 8
  %33 = alloca %struct.ACCESS_VARIABLE_POINTER_TRACK, align 8
  %34 = alloca %struct.VARIABLE_STORE_HEADER*, align 8
  %35 = alloca i8*, align 8
  %36 = alloca i64, align 8
  %37 = alloca i8, align 1
  %38 = alloca i64, align 8
  %39 = alloca %struct.AUTHENTICATED_VARIABLE_HEADER*, align 8
  %40 = alloca i8, align 1
  store i16* %0, i16** %12, align 8
  call void @llvm.dbg.declare(metadata i16** %12, metadata !2770, metadata !DIExpression()), !dbg !2771
  store %struct.GUID* %1, %struct.GUID** %13, align 8
  call void @llvm.dbg.declare(metadata %struct.GUID** %13, metadata !2772, metadata !DIExpression()), !dbg !2773
  store %struct._DEMO1_ACCESS_KEY* %2, %struct._DEMO1_ACCESS_KEY** %14, align 8
  call void @llvm.dbg.declare(metadata %struct._DEMO1_ACCESS_KEY** %14, metadata !2774, metadata !DIExpression()), !dbg !2775
  store i8* %3, i8** %15, align 8
  call void @llvm.dbg.declare(metadata i8** %15, metadata !2776, metadata !DIExpression()), !dbg !2777
  store i64 %4, i64* %16, align 8
  call void @llvm.dbg.declare(metadata i64* %16, metadata !2778, metadata !DIExpression()), !dbg !2779
  store i32 %5, i32* %17, align 4
  call void @llvm.dbg.declare(metadata i32* %17, metadata !2780, metadata !DIExpression()), !dbg !2781
  store i32 %6, i32* %18, align 4
  call void @llvm.dbg.declare(metadata i32* %18, metadata !2782, metadata !DIExpression()), !dbg !2783
  store i64 %7, i64* %19, align 8
  call void @llvm.dbg.declare(metadata i64* %19, metadata !2784, metadata !DIExpression()), !dbg !2785
  store %struct.ACCESS_VARIABLE_POINTER_TRACK* %8, %struct.ACCESS_VARIABLE_POINTER_TRACK** %20, align 8
  call void @llvm.dbg.declare(metadata %struct.ACCESS_VARIABLE_POINTER_TRACK** %20, metadata !2786, metadata !DIExpression()), !dbg !2787
  store %struct.EFI_TIME* %9, %struct.EFI_TIME** %21, align 8
  call void @llvm.dbg.declare(metadata %struct.EFI_TIME** %21, metadata !2788, metadata !DIExpression()), !dbg !2789
  call void @llvm.dbg.declare(metadata i64* %22, metadata !2790, metadata !DIExpression()), !dbg !2791
  call void @llvm.dbg.declare(metadata %struct.ACCESS_VARIABLE_HEADER** %23, metadata !2792, metadata !DIExpression()), !dbg !2793
  call void @llvm.dbg.declare(metadata i64* %24, metadata !2794, metadata !DIExpression()), !dbg !2795
  call void @llvm.dbg.declare(metadata i64* %25, metadata !2796, metadata !DIExpression()), !dbg !2797
  call void @llvm.dbg.declare(metadata i64* %26, metadata !2798, metadata !DIExpression()), !dbg !2799
  call void @llvm.dbg.declare(metadata i64* %27, metadata !2800, metadata !DIExpression()), !dbg !2801
  call void @llvm.dbg.declare(metadata i64* %28, metadata !2802, metadata !DIExpression()), !dbg !2803
  call void @llvm.dbg.declare(metadata i64* %29, metadata !2804, metadata !DIExpression()), !dbg !2805
  call void @llvm.dbg.declare(metadata %struct._EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL** %30, metadata !2806, metadata !DIExpression()), !dbg !2807
  call void @llvm.dbg.declare(metadata i8* %31, metadata !2808, metadata !DIExpression()), !dbg !2809
  call void @llvm.dbg.declare(metadata %struct.ACCESS_VARIABLE_POINTER_TRACK** %32, metadata !2810, metadata !DIExpression()), !dbg !2811
  call void @llvm.dbg.declare(metadata %struct.ACCESS_VARIABLE_POINTER_TRACK* %33, metadata !2812, metadata !DIExpression()), !dbg !2813
  call void @llvm.dbg.declare(metadata %struct.VARIABLE_STORE_HEADER** %34, metadata !2814, metadata !DIExpression()), !dbg !2815
  call void @llvm.dbg.declare(metadata i8** %35, metadata !2816, metadata !DIExpression()), !dbg !2817
  call void @llvm.dbg.declare(metadata i64* %36, metadata !2818, metadata !DIExpression()), !dbg !2819
  call void @llvm.dbg.declare(metadata i8* %37, metadata !2820, metadata !DIExpression()), !dbg !2821
  call void @llvm.dbg.declare(metadata i64* %38, metadata !2822, metadata !DIExpression()), !dbg !2823
  call void @llvm.dbg.declare(metadata %struct.AUTHENTICATED_VARIABLE_HEADER** %39, metadata !2824, metadata !DIExpression()), !dbg !2825
  call void @llvm.dbg.declare(metadata i8* %40, metadata !2826, metadata !DIExpression()), !dbg !2827
  %41 = load %struct._DEMO1_ACCESS_KEY*, %struct._DEMO1_ACCESS_KEY** %14, align 8, !dbg !2828
  %42 = icmp eq %struct._DEMO1_ACCESS_KEY* %41, null, !dbg !2830
  br i1 %42, label %43, label %44, !dbg !2831

43:                                               ; preds = %10
  store i64 -9223372036854775806, i64* %11, align 8, !dbg !2832
  br label %546, !dbg !2832

44:                                               ; preds = %10
  %45 = load %struct._DEMO1_ACCESS_KEY*, %struct._DEMO1_ACCESS_KEY** %14, align 8, !dbg !2834
  %46 = getelementptr inbounds %struct._DEMO1_ACCESS_KEY, %struct._DEMO1_ACCESS_KEY* %45, i32 0, i32 0, !dbg !2836
  %47 = getelementptr inbounds [2 x i64], [2 x i64]* %46, i64 0, i64 1, !dbg !2834
  %48 = load i64, i64* %47, align 8, !dbg !2834
  %49 = and i64 %48, 32273, !dbg !2837
  %50 = icmp ne i64 %49, 32273, !dbg !2838
  br i1 %50, label %51, label %52, !dbg !2839

51:                                               ; preds = %44
  store i64 -9223372036854775800, i64* %11, align 8, !dbg !2840
  br label %546, !dbg !2840

52:                                               ; preds = %44
  %53 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !2842
  %54 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %53, i32 0, i32 0, !dbg !2843
  %55 = getelementptr inbounds %struct.VARIABLE_GLOBAL, %struct.VARIABLE_GLOBAL* %54, i32 0, i32 6, !dbg !2844
  %56 = load i8, i8* %55, align 4, !dbg !2844
  store i8 %56, i8* %40, align 1, !dbg !2845
  %57 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %20, align 8, !dbg !2846
  %58 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %57, i32 0, i32 0, !dbg !2848
  %59 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %58, align 8, !dbg !2848
  %60 = icmp eq %struct.ACCESS_VARIABLE_HEADER* %59, null, !dbg !2849
  br i1 %60, label %61, label %63, !dbg !2850

61:                                               ; preds = %52
  %62 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %20, align 8, !dbg !2851
  store %struct.ACCESS_VARIABLE_POINTER_TRACK* %62, %struct.ACCESS_VARIABLE_POINTER_TRACK** %32, align 8, !dbg !2853
  br label %135, !dbg !2854

63:                                               ; preds = %52
  %64 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !2855
  %65 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %64, i32 0, i32 0, !dbg !2857
  %66 = getelementptr inbounds %struct.VARIABLE_GLOBAL, %struct.VARIABLE_GLOBAL* %65, i32 0, i32 2, !dbg !2858
  %67 = load i64, i64* %66, align 8, !dbg !2858
  %68 = inttoptr i64 %67 to %struct.VARIABLE_STORE_HEADER*, !dbg !2859
  store %struct.VARIABLE_STORE_HEADER* %68, %struct.VARIABLE_STORE_HEADER** %34, align 8, !dbg !2860
  store %struct.ACCESS_VARIABLE_POINTER_TRACK* %33, %struct.ACCESS_VARIABLE_POINTER_TRACK** %32, align 8, !dbg !2861
  %69 = load %struct.VARIABLE_STORE_HEADER*, %struct.VARIABLE_STORE_HEADER** %34, align 8, !dbg !2862
  %70 = call %struct.ACCESS_VARIABLE_HEADER* @GetAccessStartPointer(%struct.VARIABLE_STORE_HEADER* %69), !dbg !2863
  %71 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %32, align 8, !dbg !2864
  %72 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %71, i32 0, i32 3, !dbg !2865
  store %struct.ACCESS_VARIABLE_HEADER* %70, %struct.ACCESS_VARIABLE_HEADER** %72, align 8, !dbg !2866
  %73 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %32, align 8, !dbg !2867
  %74 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %73, i32 0, i32 3, !dbg !2868
  %75 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %74, align 8, !dbg !2868
  %76 = ptrtoint %struct.ACCESS_VARIABLE_HEADER* %75 to i64, !dbg !2869
  %77 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %20, align 8, !dbg !2870
  %78 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %77, i32 0, i32 2, !dbg !2871
  %79 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %78, align 8, !dbg !2871
  %80 = ptrtoint %struct.ACCESS_VARIABLE_HEADER* %79 to i64, !dbg !2872
  %81 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %20, align 8, !dbg !2873
  %82 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %81, i32 0, i32 3, !dbg !2874
  %83 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %82, align 8, !dbg !2874
  %84 = ptrtoint %struct.ACCESS_VARIABLE_HEADER* %83 to i64, !dbg !2875
  %85 = sub i64 %80, %84, !dbg !2876
  %86 = add i64 %76, %85, !dbg !2877
  %87 = inttoptr i64 %86 to %struct.ACCESS_VARIABLE_HEADER*, !dbg !2878
  %88 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %32, align 8, !dbg !2879
  %89 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %88, i32 0, i32 2, !dbg !2880
  store %struct.ACCESS_VARIABLE_HEADER* %87, %struct.ACCESS_VARIABLE_HEADER** %89, align 8, !dbg !2881
  %90 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %32, align 8, !dbg !2882
  %91 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %90, i32 0, i32 3, !dbg !2883
  %92 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %91, align 8, !dbg !2883
  %93 = ptrtoint %struct.ACCESS_VARIABLE_HEADER* %92 to i64, !dbg !2884
  %94 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %20, align 8, !dbg !2885
  %95 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %94, i32 0, i32 0, !dbg !2886
  %96 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %95, align 8, !dbg !2886
  %97 = ptrtoint %struct.ACCESS_VARIABLE_HEADER* %96 to i64, !dbg !2887
  %98 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %20, align 8, !dbg !2888
  %99 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %98, i32 0, i32 3, !dbg !2889
  %100 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %99, align 8, !dbg !2889
  %101 = ptrtoint %struct.ACCESS_VARIABLE_HEADER* %100 to i64, !dbg !2890
  %102 = sub i64 %97, %101, !dbg !2891
  %103 = add i64 %93, %102, !dbg !2892
  %104 = inttoptr i64 %103 to %struct.ACCESS_VARIABLE_HEADER*, !dbg !2893
  %105 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %32, align 8, !dbg !2894
  %106 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %105, i32 0, i32 0, !dbg !2895
  store %struct.ACCESS_VARIABLE_HEADER* %104, %struct.ACCESS_VARIABLE_HEADER** %106, align 8, !dbg !2896
  %107 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %20, align 8, !dbg !2897
  %108 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %107, i32 0, i32 1, !dbg !2899
  %109 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %108, align 8, !dbg !2899
  %110 = icmp ne %struct.ACCESS_VARIABLE_HEADER* %109, null, !dbg !2900
  br i1 %110, label %111, label %129, !dbg !2901

111:                                              ; preds = %63
  %112 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %32, align 8, !dbg !2902
  %113 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %112, i32 0, i32 3, !dbg !2904
  %114 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %113, align 8, !dbg !2904
  %115 = ptrtoint %struct.ACCESS_VARIABLE_HEADER* %114 to i64, !dbg !2905
  %116 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %20, align 8, !dbg !2906
  %117 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %116, i32 0, i32 1, !dbg !2907
  %118 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %117, align 8, !dbg !2907
  %119 = ptrtoint %struct.ACCESS_VARIABLE_HEADER* %118 to i64, !dbg !2908
  %120 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %20, align 8, !dbg !2909
  %121 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %120, i32 0, i32 3, !dbg !2910
  %122 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %121, align 8, !dbg !2910
  %123 = ptrtoint %struct.ACCESS_VARIABLE_HEADER* %122 to i64, !dbg !2911
  %124 = sub i64 %119, %123, !dbg !2912
  %125 = add i64 %115, %124, !dbg !2913
  %126 = inttoptr i64 %125 to %struct.ACCESS_VARIABLE_HEADER*, !dbg !2914
  %127 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %32, align 8, !dbg !2915
  %128 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %127, i32 0, i32 1, !dbg !2916
  store %struct.ACCESS_VARIABLE_HEADER* %126, %struct.ACCESS_VARIABLE_HEADER** %128, align 8, !dbg !2917
  br label %132, !dbg !2918

129:                                              ; preds = %63
  %130 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %32, align 8, !dbg !2919
  %131 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %130, i32 0, i32 1, !dbg !2921
  store %struct.ACCESS_VARIABLE_HEADER* null, %struct.ACCESS_VARIABLE_HEADER** %131, align 8, !dbg !2922
  br label %132

132:                                              ; preds = %129, %111
  %133 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %32, align 8, !dbg !2923
  %134 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %133, i32 0, i32 4, !dbg !2924
  store i8 0, i8* %134, align 8, !dbg !2925
  br label %135

135:                                              ; preds = %132, %61
  %136 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !2926
  %137 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %136, i32 0, i32 17, !dbg !2927
  %138 = load %struct._EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL*, %struct._EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL** %137, align 8, !dbg !2927
  store %struct._EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL* %138, %struct._EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL** %30, align 8, !dbg !2928
  %139 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !2929
  %140 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %139, i32 0, i32 0, !dbg !2930
  %141 = getelementptr inbounds %struct.VARIABLE_GLOBAL, %struct.VARIABLE_GLOBAL* %140, i32 0, i32 2, !dbg !2931
  %142 = load i64, i64* %141, align 8, !dbg !2931
  %143 = inttoptr i64 %142 to %struct.VARIABLE_STORE_HEADER*, !dbg !2932
  %144 = call %struct.ACCESS_VARIABLE_HEADER* @GetAccessEndPointer(%struct.VARIABLE_STORE_HEADER* %143), !dbg !2933
  store %struct.ACCESS_VARIABLE_HEADER* %144, %struct.ACCESS_VARIABLE_HEADER** %23, align 8, !dbg !2934
  %145 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !2935
  %146 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %145, i32 0, i32 12, !dbg !2936
  %147 = load i64, i64* %146, align 8, !dbg !2936
  store i64 %147, i64* %24, align 8, !dbg !2937
  %148 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %23, align 8, !dbg !2938
  %149 = bitcast %struct.ACCESS_VARIABLE_HEADER* %148 to i8*, !dbg !2939
  %150 = load i64, i64* %24, align 8, !dbg !2940
  %151 = trunc i64 %150 to i32, !dbg !2940
  %152 = trunc i32 %151 to i8, !dbg !2939
  %153 = zext i8 %152 to i32, !dbg !2939
  %154 = call i8* @memset(i8* %149, i32 %153, i64 255), !dbg !2939
  store i8 0, i8* %37, align 1, !dbg !2941
  %155 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %32, align 8, !dbg !2942
  %156 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %155, i32 0, i32 0, !dbg !2944
  %157 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %156, align 8, !dbg !2944
  %158 = icmp ne %struct.ACCESS_VARIABLE_HEADER* %157, null, !dbg !2945
  br i1 %158, label %159, label %340, !dbg !2946

159:                                              ; preds = %135
  %160 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %20, align 8, !dbg !2947
  %161 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %160, i32 0, i32 0, !dbg !2950
  %162 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %161, align 8, !dbg !2950
  %163 = load i8, i8* %40, align 1, !dbg !2951
  %164 = call i64 @DataSizeOfAccessVariable(%struct.ACCESS_VARIABLE_HEADER* %162, i8 zeroext %163), !dbg !2952
  %165 = load i64, i64* %16, align 8, !dbg !2953
  %166 = icmp eq i64 %164, %165, !dbg !2954
  br i1 %166, label %167, label %190, !dbg !2955

167:                                              ; preds = %159
  %168 = load i8*, i8** %15, align 8, !dbg !2956
  %169 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %20, align 8, !dbg !2957
  %170 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %169, i32 0, i32 0, !dbg !2958
  %171 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %170, align 8, !dbg !2958
  %172 = load i8, i8* %40, align 1, !dbg !2959
  %173 = call i8* @GetAccessVariableDataPtr(%struct.ACCESS_VARIABLE_HEADER* %171, i8 zeroext %172), !dbg !2960
  %174 = load i64, i64* %16, align 8, !dbg !2961
  %175 = call i64 @CompareMem(i8* %168, i8* %173, i64 %174), !dbg !2962
  %176 = icmp eq i64 %175, 0, !dbg !2963
  br i1 %176, label %177, label %190, !dbg !2964

177:                                              ; preds = %167
  %178 = load i32, i32* %17, align 4, !dbg !2965
  %179 = and i32 %178, 64, !dbg !2966
  %180 = icmp eq i32 %179, 0, !dbg !2967
  br i1 %180, label %181, label %190, !dbg !2968

181:                                              ; preds = %177
  %182 = load %struct.EFI_TIME*, %struct.EFI_TIME** %21, align 8, !dbg !2969
  %183 = icmp eq %struct.EFI_TIME* %182, null, !dbg !2970
  br i1 %183, label %184, label %190, !dbg !2971

184:                                              ; preds = %181
  %185 = load i16*, i16** %12, align 8, !dbg !2972
  %186 = load %struct.GUID*, %struct.GUID** %13, align 8, !dbg !2974
  %187 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %32, align 8, !dbg !2975
  %188 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %187, i32 0, i32 4, !dbg !2976
  %189 = load i8, i8* %188, align 8, !dbg !2976
  call void @UpdateAccessVariableInfo(i16* %185, %struct.GUID* %186, i8 zeroext %189, i8 zeroext 0, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0, %struct._VARIABLE_INFO_ENTRY** @gVarInfo), !dbg !2977
  store i64 0, i64* %22, align 8, !dbg !2978
  br label %544, !dbg !2979

190:                                              ; preds = %181, %177, %167, %159
  %191 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %20, align 8, !dbg !2980
  %192 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %191, i32 0, i32 0, !dbg !2982
  %193 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %192, align 8, !dbg !2982
  %194 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %193, i32 0, i32 1, !dbg !2983
  %195 = load i8, i8* %194, align 1, !dbg !2983
  %196 = zext i8 %195 to i32, !dbg !2980
  %197 = icmp eq i32 %196, 63, !dbg !2984
  br i1 %197, label %206, label %198, !dbg !2985

198:                                              ; preds = %190
  %199 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %20, align 8, !dbg !2986
  %200 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %199, i32 0, i32 0, !dbg !2987
  %201 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %200, align 8, !dbg !2987
  %202 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %201, i32 0, i32 1, !dbg !2988
  %203 = load i8, i8* %202, align 1, !dbg !2988
  %204 = zext i8 %203 to i32, !dbg !2986
  %205 = icmp eq i32 %204, 62, !dbg !2989
  br i1 %205, label %206, label %338, !dbg !2990

206:                                              ; preds = %198, %190
  %207 = load i32, i32* %17, align 4, !dbg !2991
  %208 = and i32 %207, 64, !dbg !2994
  %209 = icmp ne i32 %208, 0, !dbg !2995
  br i1 %209, label %210, label %301, !dbg !2996

210:                                              ; preds = %206
  %211 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %20, align 8, !dbg !2997
  %212 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %211, i32 0, i32 0, !dbg !2999
  %213 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %212, align 8, !dbg !2999
  %214 = load i8, i8* %40, align 1, !dbg !3000
  %215 = call i64 @GetAccessVariableDataOffset(%struct.ACCESS_VARIABLE_HEADER* %213, i8 zeroext %214), !dbg !3001
  store i64 %215, i64* %38, align 8, !dbg !3002
  %216 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %23, align 8, !dbg !3003
  %217 = ptrtoint %struct.ACCESS_VARIABLE_HEADER* %216 to i64, !dbg !3004
  %218 = load i64, i64* %38, align 8, !dbg !3005
  %219 = add i64 %217, %218, !dbg !3006
  %220 = inttoptr i64 %219 to i8*, !dbg !3007
  store i8* %220, i8** %35, align 8, !dbg !3008
  %221 = load i8*, i8** %35, align 8, !dbg !3009
  %222 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %20, align 8, !dbg !3010
  %223 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %222, i32 0, i32 0, !dbg !3011
  %224 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %223, align 8, !dbg !3011
  %225 = ptrtoint %struct.ACCESS_VARIABLE_HEADER* %224 to i64, !dbg !3012
  %226 = load i64, i64* %38, align 8, !dbg !3013
  %227 = add i64 %225, %226, !dbg !3014
  %228 = inttoptr i64 %227 to i8*, !dbg !3015
  %229 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %20, align 8, !dbg !3016
  %230 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %229, i32 0, i32 0, !dbg !3017
  %231 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %230, align 8, !dbg !3017
  %232 = load i8, i8* %40, align 1, !dbg !3018
  %233 = call i64 @DataSizeOfAccessVariable(%struct.ACCESS_VARIABLE_HEADER* %231, i8 zeroext %232), !dbg !3019
  %234 = call i8* @CopyMem(i8* %221, i8* %228, i64 %233), !dbg !3020
  %235 = load i32, i32* %17, align 4, !dbg !3021
  %236 = and i32 %235, 48, !dbg !3023
  %237 = icmp ne i32 %236, 0, !dbg !3024
  br i1 %237, label %238, label %244, !dbg !3025

238:                                              ; preds = %210
  %239 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !3026
  %240 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %239, i32 0, i32 10, !dbg !3028
  %241 = load i64, i64* %240, align 8, !dbg !3028
  %242 = load i64, i64* %38, align 8, !dbg !3029
  %243 = sub i64 %241, %242, !dbg !3030
  store i64 %243, i64* %25, align 8, !dbg !3031
  br label %261, !dbg !3032

244:                                              ; preds = %210
  %245 = load i32, i32* %17, align 4, !dbg !3033
  %246 = and i32 %245, 1, !dbg !3035
  %247 = icmp ne i32 %246, 0, !dbg !3036
  br i1 %247, label %248, label %254, !dbg !3037

248:                                              ; preds = %244
  %249 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !3038
  %250 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %249, i32 0, i32 9, !dbg !3040
  %251 = load i64, i64* %250, align 8, !dbg !3040
  %252 = load i64, i64* %38, align 8, !dbg !3041
  %253 = sub i64 %251, %252, !dbg !3042
  store i64 %253, i64* %25, align 8, !dbg !3043
  br label %260, !dbg !3044

254:                                              ; preds = %244
  %255 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !3045
  %256 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %255, i32 0, i32 11, !dbg !3047
  %257 = load i64, i64* %256, align 8, !dbg !3047
  %258 = load i64, i64* %38, align 8, !dbg !3048
  %259 = sub i64 %257, %258, !dbg !3049
  store i64 %259, i64* %25, align 8, !dbg !3050
  br label %260

260:                                              ; preds = %254, %248
  br label %261

261:                                              ; preds = %260, %238
  %262 = load i32, i32* %17, align 4, !dbg !3051
  %263 = and i32 %262, 8, !dbg !3053
  %264 = icmp eq i32 %263, 8, !dbg !3054
  br i1 %264, label %265, label %268, !dbg !3055

265:                                              ; preds = %261
  %266 = load i64, i64* %38, align 8, !dbg !3056
  %267 = sub i64 4, %266, !dbg !3058
  store i64 %267, i64* %25, align 8, !dbg !3059
  br label %268, !dbg !3060

268:                                              ; preds = %265, %261
  %269 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %20, align 8, !dbg !3061
  %270 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %269, i32 0, i32 0, !dbg !3063
  %271 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %270, align 8, !dbg !3063
  %272 = load i8, i8* %40, align 1, !dbg !3064
  %273 = call i64 @DataSizeOfAccessVariable(%struct.ACCESS_VARIABLE_HEADER* %271, i8 zeroext %272), !dbg !3065
  %274 = load i64, i64* %16, align 8, !dbg !3066
  %275 = add i64 %273, %274, !dbg !3067
  %276 = load i64, i64* %25, align 8, !dbg !3068
  %277 = icmp ugt i64 %275, %276, !dbg !3069
  br i1 %277, label %278, label %279, !dbg !3070

278:                                              ; preds = %268
  store i64 -9223372036854775806, i64* %22, align 8, !dbg !3071
  br label %544, !dbg !3073

279:                                              ; preds = %268
  %280 = load i8*, i8** %35, align 8, !dbg !3074
  %281 = ptrtoint i8* %280 to i64, !dbg !3075
  %282 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %20, align 8, !dbg !3076
  %283 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %282, i32 0, i32 0, !dbg !3077
  %284 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %283, align 8, !dbg !3077
  %285 = load i8, i8* %40, align 1, !dbg !3078
  %286 = call i64 @DataSizeOfAccessVariable(%struct.ACCESS_VARIABLE_HEADER* %284, i8 zeroext %285), !dbg !3079
  %287 = add i64 %281, %286, !dbg !3080
  %288 = inttoptr i64 %287 to i8*, !dbg !3081
  %289 = load i8*, i8** %15, align 8, !dbg !3082
  %290 = load i64, i64* %16, align 8, !dbg !3083
  %291 = call i8* @CopyMem(i8* %288, i8* %289, i64 %290), !dbg !3084
  %292 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %20, align 8, !dbg !3085
  %293 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %292, i32 0, i32 0, !dbg !3086
  %294 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %293, align 8, !dbg !3086
  %295 = load i8, i8* %40, align 1, !dbg !3087
  %296 = call i64 @DataSizeOfAccessVariable(%struct.ACCESS_VARIABLE_HEADER* %294, i8 zeroext %295), !dbg !3088
  %297 = load i64, i64* %16, align 8, !dbg !3089
  %298 = add i64 %296, %297, !dbg !3090
  store i64 %298, i64* %36, align 8, !dbg !3091
  %299 = load i8*, i8** %35, align 8, !dbg !3092
  store i8* %299, i8** %15, align 8, !dbg !3093
  %300 = load i64, i64* %36, align 8, !dbg !3094
  store i64 %300, i64* %16, align 8, !dbg !3095
  store i8 1, i8* %37, align 1, !dbg !3096
  br label %301, !dbg !3097

301:                                              ; preds = %279, %206
  %302 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %20, align 8, !dbg !3098
  %303 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %302, i32 0, i32 0, !dbg !3099
  %304 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %303, align 8, !dbg !3099
  %305 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %304, i32 0, i32 1, !dbg !3100
  %306 = load i8, i8* %305, align 1, !dbg !3100
  store i8 %306, i8* %31, align 1, !dbg !3101
  %307 = load i8, i8* %31, align 1, !dbg !3102
  %308 = zext i8 %307 to i32, !dbg !3102
  %309 = and i32 %308, 254, !dbg !3102
  %310 = trunc i32 %309 to i8, !dbg !3102
  store i8 %310, i8* %31, align 1, !dbg !3102
  %311 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !3103
  %312 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %311, i32 0, i32 0, !dbg !3104
  %313 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %32, align 8, !dbg !3105
  %314 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %313, i32 0, i32 4, !dbg !3106
  %315 = load i8, i8* %314, align 8, !dbg !3106
  %316 = load %struct._EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL*, %struct._EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL** %30, align 8, !dbg !3107
  %317 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %32, align 8, !dbg !3108
  %318 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %317, i32 0, i32 0, !dbg !3109
  %319 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %318, align 8, !dbg !3109
  %320 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %319, i32 0, i32 1, !dbg !3110
  %321 = ptrtoint i8* %320 to i64, !dbg !3111
  %322 = call i64 @UpdateAccessVariableStore(%struct.VARIABLE_GLOBAL* %312, i8 zeroext %315, i8 zeroext 0, %struct._EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL* %316, i64 %321, i32 1, i8* %31), !dbg !3112
  store i64 %322, i64* %22, align 8, !dbg !3113
  %323 = load i64, i64* %22, align 8, !dbg !3114
  %324 = icmp slt i64 %323, 0, !dbg !3114
  br i1 %324, label %325, label %326, !dbg !3116

325:                                              ; preds = %301
  br label %544, !dbg !3117

326:                                              ; preds = %301
  %327 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %32, align 8, !dbg !3119
  %328 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %327, i32 0, i32 4, !dbg !3121
  %329 = load i8, i8* %328, align 8, !dbg !3121
  %330 = icmp ne i8 %329, 0, !dbg !3119
  br i1 %330, label %337, label %331, !dbg !3122

331:                                              ; preds = %326
  %332 = load i8, i8* %31, align 1, !dbg !3123
  %333 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %20, align 8, !dbg !3125
  %334 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %333, i32 0, i32 0, !dbg !3126
  %335 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %334, align 8, !dbg !3126
  %336 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %335, i32 0, i32 1, !dbg !3127
  store i8 %332, i8* %336, align 1, !dbg !3128
  br label %337, !dbg !3129

337:                                              ; preds = %331, %326
  br label %338, !dbg !3130

338:                                              ; preds = %337, %198
  br label %339

339:                                              ; preds = %338
  br label %363, !dbg !3131

340:                                              ; preds = %135
  %341 = load i64, i64* %16, align 8, !dbg !3132
  %342 = icmp eq i64 %341, 0, !dbg !3135
  br i1 %342, label %343, label %348, !dbg !3136

343:                                              ; preds = %340
  %344 = load i32, i32* %17, align 4, !dbg !3137
  %345 = and i32 %344, 64, !dbg !3138
  %346 = icmp ne i32 %345, 0, !dbg !3139
  br i1 %346, label %347, label %348, !dbg !3140

347:                                              ; preds = %343
  store i64 0, i64* %22, align 8, !dbg !3141
  br label %544, !dbg !3143

348:                                              ; preds = %343, %340
  %349 = load i64, i64* %16, align 8, !dbg !3144
  %350 = icmp eq i64 %349, 0, !dbg !3146
  br i1 %350, label %355, label %351, !dbg !3147

351:                                              ; preds = %348
  %352 = load i32, i32* %17, align 4, !dbg !3148
  %353 = and i32 %352, 6, !dbg !3149
  %354 = icmp eq i32 %353, 0, !dbg !3150
  br i1 %354, label %355, label %356, !dbg !3151

355:                                              ; preds = %351, %348
  store i64 -9223372036854775794, i64* %22, align 8, !dbg !3152
  br label %544, !dbg !3154

356:                                              ; preds = %351
  %357 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %23, align 8, !dbg !3155
  %358 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %357, i32 0, i32 7, !dbg !3156
  %359 = bitcast %struct._DEMO1_ACCESS_KEY* %358 to i8*, !dbg !3157
  %360 = load %struct._DEMO1_ACCESS_KEY*, %struct._DEMO1_ACCESS_KEY** %14, align 8, !dbg !3158
  %361 = bitcast %struct._DEMO1_ACCESS_KEY* %360 to i8*, !dbg !3158
  %362 = call i8* @CopyMem(i8* %359, i8* %361, i64 16), !dbg !3159
  br label %363

363:                                              ; preds = %356, %339
  %364 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %23, align 8, !dbg !3160
  %365 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %364, i32 0, i32 0, !dbg !3161
  store i16 21930, i16* %365, align 1, !dbg !3162
  %366 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %23, align 8, !dbg !3163
  %367 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %366, i32 0, i32 2, !dbg !3164
  store i8 0, i8* %367, align 1, !dbg !3165
  %368 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !3166
  %369 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %368, i32 0, i32 0, !dbg !3168
  %370 = getelementptr inbounds %struct.VARIABLE_GLOBAL, %struct.VARIABLE_GLOBAL* %369, i32 0, i32 6, !dbg !3169
  %371 = load i8, i8* %370, align 4, !dbg !3169
  %372 = icmp ne i8 %371, 0, !dbg !3166
  br i1 %372, label %373, label %439, !dbg !3170

373:                                              ; preds = %363
  %374 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %23, align 8, !dbg !3171
  %375 = bitcast %struct.ACCESS_VARIABLE_HEADER* %374 to %struct.AUTHENTICATED_VARIABLE_HEADER*, !dbg !3173
  store %struct.AUTHENTICATED_VARIABLE_HEADER* %375, %struct.AUTHENTICATED_VARIABLE_HEADER** %39, align 8, !dbg !3174
  %376 = load i32, i32* %18, align 4, !dbg !3175
  %377 = load %struct.AUTHENTICATED_VARIABLE_HEADER*, %struct.AUTHENTICATED_VARIABLE_HEADER** %39, align 8, !dbg !3176
  %378 = getelementptr inbounds %struct.AUTHENTICATED_VARIABLE_HEADER, %struct.AUTHENTICATED_VARIABLE_HEADER* %377, i32 0, i32 6, !dbg !3177
  store i32 %376, i32* %378, align 1, !dbg !3178
  %379 = load i64, i64* %19, align 8, !dbg !3179
  %380 = load %struct.AUTHENTICATED_VARIABLE_HEADER*, %struct.AUTHENTICATED_VARIABLE_HEADER** %39, align 8, !dbg !3180
  %381 = getelementptr inbounds %struct.AUTHENTICATED_VARIABLE_HEADER, %struct.AUTHENTICATED_VARIABLE_HEADER* %380, i32 0, i32 4, !dbg !3181
  store i64 %379, i64* %381, align 1, !dbg !3182
  %382 = load %struct.AUTHENTICATED_VARIABLE_HEADER*, %struct.AUTHENTICATED_VARIABLE_HEADER** %39, align 8, !dbg !3183
  %383 = getelementptr inbounds %struct.AUTHENTICATED_VARIABLE_HEADER, %struct.AUTHENTICATED_VARIABLE_HEADER* %382, i32 0, i32 5, !dbg !3184
  %384 = bitcast %struct.EFI_TIME* %383 to i8*, !dbg !3185
  %385 = call i8* @ZeroMem(i8* %384, i64 16), !dbg !3186
  %386 = load i32, i32* %17, align 4, !dbg !3187
  %387 = and i32 %386, 32, !dbg !3189
  %388 = icmp ne i32 %387, 0, !dbg !3190
  br i1 %388, label %389, label %438, !dbg !3191

389:                                              ; preds = %373
  %390 = load %struct.EFI_TIME*, %struct.EFI_TIME** %21, align 8, !dbg !3192
  %391 = icmp ne %struct.EFI_TIME* %390, null, !dbg !3193
  br i1 %391, label %392, label %438, !dbg !3194

392:                                              ; preds = %389
  %393 = load i32, i32* %17, align 4, !dbg !3195
  %394 = and i32 %393, 64, !dbg !3198
  %395 = icmp eq i32 %394, 0, !dbg !3199
  br i1 %395, label %396, label %403, !dbg !3200

396:                                              ; preds = %392
  %397 = load %struct.AUTHENTICATED_VARIABLE_HEADER*, %struct.AUTHENTICATED_VARIABLE_HEADER** %39, align 8, !dbg !3201
  %398 = getelementptr inbounds %struct.AUTHENTICATED_VARIABLE_HEADER, %struct.AUTHENTICATED_VARIABLE_HEADER* %397, i32 0, i32 5, !dbg !3203
  %399 = bitcast %struct.EFI_TIME* %398 to i8*, !dbg !3204
  %400 = load %struct.EFI_TIME*, %struct.EFI_TIME** %21, align 8, !dbg !3205
  %401 = bitcast %struct.EFI_TIME* %400 to i8*, !dbg !3205
  %402 = call i8* @CopyMem(i8* %399, i8* %401, i64 16), !dbg !3206
  br label %437, !dbg !3207

403:                                              ; preds = %392
  %404 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %32, align 8, !dbg !3208
  %405 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %404, i32 0, i32 0, !dbg !3211
  %406 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %405, align 8, !dbg !3211
  %407 = icmp ne %struct.ACCESS_VARIABLE_HEADER* %406, null, !dbg !3212
  br i1 %407, label %408, label %436, !dbg !3213

408:                                              ; preds = %403
  %409 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %20, align 8, !dbg !3214
  %410 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %409, i32 0, i32 0, !dbg !3217
  %411 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %410, align 8, !dbg !3217
  %412 = bitcast %struct.ACCESS_VARIABLE_HEADER* %411 to %struct.AUTHENTICATED_VARIABLE_HEADER*, !dbg !3218
  %413 = getelementptr inbounds %struct.AUTHENTICATED_VARIABLE_HEADER, %struct.AUTHENTICATED_VARIABLE_HEADER* %412, i32 0, i32 5, !dbg !3218
  %414 = load %struct.EFI_TIME*, %struct.EFI_TIME** %21, align 8, !dbg !3219
  %415 = call zeroext i8 @AccessVariableCompareTimeStampInternal(%struct.EFI_TIME* %413, %struct.EFI_TIME* %414), !dbg !3220
  %416 = icmp ne i8 %415, 0, !dbg !3220
  br i1 %416, label %417, label %424, !dbg !3221

417:                                              ; preds = %408
  %418 = load %struct.AUTHENTICATED_VARIABLE_HEADER*, %struct.AUTHENTICATED_VARIABLE_HEADER** %39, align 8, !dbg !3222
  %419 = getelementptr inbounds %struct.AUTHENTICATED_VARIABLE_HEADER, %struct.AUTHENTICATED_VARIABLE_HEADER* %418, i32 0, i32 5, !dbg !3224
  %420 = bitcast %struct.EFI_TIME* %419 to i8*, !dbg !3225
  %421 = load %struct.EFI_TIME*, %struct.EFI_TIME** %21, align 8, !dbg !3226
  %422 = bitcast %struct.EFI_TIME* %421 to i8*, !dbg !3226
  %423 = call i8* @CopyMem(i8* %420, i8* %422, i64 16), !dbg !3227
  br label %435, !dbg !3228

424:                                              ; preds = %408
  %425 = load %struct.AUTHENTICATED_VARIABLE_HEADER*, %struct.AUTHENTICATED_VARIABLE_HEADER** %39, align 8, !dbg !3229
  %426 = getelementptr inbounds %struct.AUTHENTICATED_VARIABLE_HEADER, %struct.AUTHENTICATED_VARIABLE_HEADER* %425, i32 0, i32 5, !dbg !3231
  %427 = bitcast %struct.EFI_TIME* %426 to i8*, !dbg !3232
  %428 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %20, align 8, !dbg !3233
  %429 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %428, i32 0, i32 0, !dbg !3234
  %430 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %429, align 8, !dbg !3234
  %431 = bitcast %struct.ACCESS_VARIABLE_HEADER* %430 to %struct.AUTHENTICATED_VARIABLE_HEADER*, !dbg !3235
  %432 = getelementptr inbounds %struct.AUTHENTICATED_VARIABLE_HEADER, %struct.AUTHENTICATED_VARIABLE_HEADER* %431, i32 0, i32 5, !dbg !3235
  %433 = bitcast %struct.EFI_TIME* %432 to i8*, !dbg !3236
  %434 = call i8* @CopyMem(i8* %427, i8* %433, i64 16), !dbg !3237
  br label %435

435:                                              ; preds = %424, %417
  br label %436, !dbg !3238

436:                                              ; preds = %435, %403
  br label %437

437:                                              ; preds = %436, %396
  br label %438, !dbg !3239

438:                                              ; preds = %437, %389, %373
  br label %439, !dbg !3240

439:                                              ; preds = %438, %363
  %440 = load i32, i32* %17, align 4, !dbg !3241
  %441 = and i32 %440, -65, !dbg !3242
  %442 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %23, align 8, !dbg !3243
  %443 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %442, i32 0, i32 3, !dbg !3244
  store i32 %441, i32* %443, align 1, !dbg !3245
  %444 = load i8, i8* %40, align 1, !dbg !3246
  %445 = call i64 @GetAccessVariableHeaderSize(i8 zeroext %444), !dbg !3247
  store i64 %445, i64* %26, align 8, !dbg !3248
  %446 = load i16*, i16** %12, align 8, !dbg !3249
  %447 = bitcast i16* %446 to i8*, !dbg !3249
  %448 = call i64 @strlen(i8* %447) #18, !dbg !3250
  store i64 %448, i64* %28, align 8, !dbg !3251
  %449 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %23, align 8, !dbg !3252
  %450 = ptrtoint %struct.ACCESS_VARIABLE_HEADER* %449 to i64, !dbg !3253
  %451 = load i64, i64* %26, align 8, !dbg !3254
  %452 = add i64 %450, %451, !dbg !3255
  %453 = inttoptr i64 %452 to i8*, !dbg !3256
  %454 = load i16*, i16** %12, align 8, !dbg !3257
  %455 = bitcast i16* %454 to i8*, !dbg !3257
  %456 = load i64, i64* %28, align 8, !dbg !3258
  %457 = call i8* @CopyMem(i8* %453, i8* %455, i64 %456), !dbg !3259
  %458 = load i64, i64* %26, align 8, !dbg !3260
  %459 = load i64, i64* %28, align 8, !dbg !3261
  %460 = add i64 %458, %459, !dbg !3262
  %461 = add i64 %460, 0, !dbg !3263
  store i64 %461, i64* %27, align 8, !dbg !3264
  %462 = load i8, i8* %37, align 1, !dbg !3265
  %463 = icmp ne i8 %462, 0, !dbg !3265
  br i1 %463, label %473, label %464, !dbg !3267

464:                                              ; preds = %439
  %465 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %23, align 8, !dbg !3268
  %466 = ptrtoint %struct.ACCESS_VARIABLE_HEADER* %465 to i64, !dbg !3270
  %467 = load i64, i64* %27, align 8, !dbg !3271
  %468 = add i64 %466, %467, !dbg !3272
  %469 = inttoptr i64 %468 to i8*, !dbg !3273
  %470 = load i8*, i8** %15, align 8, !dbg !3274
  %471 = load i64, i64* %16, align 8, !dbg !3275
  %472 = call i8* @CopyMem(i8* %469, i8* %470, i64 %471), !dbg !3276
  br label %473, !dbg !3277

473:                                              ; preds = %464, %439
  %474 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %23, align 8, !dbg !3278
  %475 = load i8, i8* %40, align 1, !dbg !3279
  %476 = call %struct.GUID* @GetAccessVendorGuidPtr(%struct.ACCESS_VARIABLE_HEADER* %474, i8 zeroext %475), !dbg !3280
  %477 = bitcast %struct.GUID* %476 to i8*, !dbg !3280
  %478 = load %struct.GUID*, %struct.GUID** %13, align 8, !dbg !3281
  %479 = bitcast %struct.GUID* %478 to i8*, !dbg !3281
  %480 = call i8* @CopyMem(i8* %477, i8* %479, i64 16), !dbg !3282
  %481 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %23, align 8, !dbg !3283
  %482 = load i64, i64* %28, align 8, !dbg !3284
  %483 = load i8, i8* %40, align 1, !dbg !3285
  call void @SetNameSizeOfAccessVariable(%struct.ACCESS_VARIABLE_HEADER* %481, i64 %482, i8 zeroext %483), !dbg !3286
  %484 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %23, align 8, !dbg !3287
  %485 = load i64, i64* %16, align 8, !dbg !3288
  %486 = load i8, i8* %40, align 1, !dbg !3289
  call void @SetDataSizeOfAccessVariable(%struct.ACCESS_VARIABLE_HEADER* %484, i64 %485, i8 zeroext %486), !dbg !3290
  %487 = load i64, i64* %27, align 8, !dbg !3291
  %488 = load i64, i64* %16, align 8, !dbg !3292
  %489 = add i64 %487, %488, !dbg !3293
  %490 = add i64 %489, 0, !dbg !3294
  store i64 %490, i64* %29, align 8, !dbg !3295
  %491 = load i32, i32* %17, align 4, !dbg !3296
  %492 = and i32 %491, 1, !dbg !3298
  %493 = icmp ne i32 %492, 0, !dbg !3299
  br i1 %493, label %494, label %542, !dbg !3300

494:                                              ; preds = %473
  %495 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %23, align 8, !dbg !3301
  %496 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %495, i32 0, i32 1, !dbg !3303
  store i8 63, i8* %496, align 1, !dbg !3304
  %497 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !3305
  %498 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %497, i32 0, i32 0, !dbg !3306
  %499 = load %struct._EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL*, %struct._EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL** %30, align 8, !dbg !3307
  %500 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !3308
  %501 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %500, i32 0, i32 2, !dbg !3309
  %502 = load i64, i64* %501, align 8, !dbg !3309
  %503 = load i64, i64* %29, align 8, !dbg !3310
  %504 = trunc i64 %503 to i32, !dbg !3311
  %505 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %23, align 8, !dbg !3312
  %506 = bitcast %struct.ACCESS_VARIABLE_HEADER* %505 to i8*, !dbg !3313
  %507 = call i64 @UpdateAccessVariableStore(%struct.VARIABLE_GLOBAL* %498, i8 zeroext 0, i8 zeroext 1, %struct._EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL* %499, i64 %502, i32 %504, i8* %506), !dbg !3314
  store i64 %507, i64* %22, align 8, !dbg !3315
  %508 = load i64, i64* %22, align 8, !dbg !3316
  %509 = icmp slt i64 %508, 0, !dbg !3316
  br i1 %509, label %510, label %511, !dbg !3318

510:                                              ; preds = %494
  br label %544, !dbg !3319

511:                                              ; preds = %494
  %512 = load i64, i64* %29, align 8, !dbg !3321
  %513 = add i64 %512, 4, !dbg !3321
  %514 = sub i64 %513, 1, !dbg !3321
  %515 = and i64 %514, -4, !dbg !3321
  %516 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !3322
  %517 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %516, i32 0, i32 2, !dbg !3323
  %518 = load i64, i64* %517, align 8, !dbg !3324
  %519 = add i64 %518, %515, !dbg !3324
  store i64 %519, i64* %517, align 8, !dbg !3324
  %520 = load i32, i32* %17, align 4, !dbg !3325
  %521 = and i32 %520, 8, !dbg !3327
  %522 = icmp ne i32 %521, 0, !dbg !3328
  br i1 %522, label %523, label %532, !dbg !3329

523:                                              ; preds = %511
  %524 = load i64, i64* %29, align 8, !dbg !3330
  %525 = add i64 %524, 4, !dbg !3330
  %526 = sub i64 %525, 1, !dbg !3330
  %527 = and i64 %526, -4, !dbg !3330
  %528 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !3332
  %529 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %528, i32 0, i32 8, !dbg !3333
  %530 = load i64, i64* %529, align 8, !dbg !3334
  %531 = add i64 %530, %527, !dbg !3334
  store i64 %531, i64* %529, align 8, !dbg !3334
  br label %541, !dbg !3335

532:                                              ; preds = %511
  %533 = load i64, i64* %29, align 8, !dbg !3336
  %534 = add i64 %533, 4, !dbg !3336
  %535 = sub i64 %534, 1, !dbg !3336
  %536 = and i64 %535, -4, !dbg !3336
  %537 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !3338
  %538 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %537, i32 0, i32 6, !dbg !3339
  %539 = load i64, i64* %538, align 8, !dbg !3340
  %540 = add i64 %539, %536, !dbg !3340
  store i64 %540, i64* %538, align 8, !dbg !3340
  br label %541

541:                                              ; preds = %532, %523
  br label %543, !dbg !3341

542:                                              ; preds = %473
  store i64 -9223372036854775806, i64* %11, align 8, !dbg !3342
  br label %546, !dbg !3342

543:                                              ; preds = %541
  br label %544, !dbg !3344

544:                                              ; preds = %543, %510, %355, %347, %325, %278, %184
  call void @llvm.dbg.label(metadata !3345), !dbg !3346
  %545 = load i64, i64* %22, align 8, !dbg !3347
  store i64 %545, i64* %11, align 8, !dbg !3348
  br label %546, !dbg !3348

546:                                              ; preds = %544, %542, %51, %43
  %547 = load i64, i64* %11, align 8, !dbg !3349
  ret i64 %547, !dbg !3349
}

declare dso_local i64 @CompareMem(i8*, i8*, i64) #10

declare dso_local i8* @ZeroMem(i8*, i64) #10

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #11

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @FindAccessVariableEx(i16* %0, %struct.GUID* %1, i8 zeroext %2, %struct.ACCESS_VARIABLE_POINTER_TRACK* %3, i8 zeroext %4) #6 !dbg !3350 {
  %6 = alloca i64, align 8
  %7 = alloca i16*, align 8
  %8 = alloca %struct.GUID*, align 8
  %9 = alloca i8, align 1
  %10 = alloca %struct.ACCESS_VARIABLE_POINTER_TRACK*, align 8
  %11 = alloca i8, align 1
  %12 = alloca %struct.ACCESS_VARIABLE_HEADER*, align 8
  %13 = alloca i8*, align 8
  store i16* %0, i16** %7, align 8
  call void @llvm.dbg.declare(metadata i16** %7, metadata !3353, metadata !DIExpression()), !dbg !3354
  store %struct.GUID* %1, %struct.GUID** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.GUID** %8, metadata !3355, metadata !DIExpression()), !dbg !3356
  store i8 %2, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !3357, metadata !DIExpression()), !dbg !3358
  store %struct.ACCESS_VARIABLE_POINTER_TRACK* %3, %struct.ACCESS_VARIABLE_POINTER_TRACK** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.ACCESS_VARIABLE_POINTER_TRACK** %10, metadata !3359, metadata !DIExpression()), !dbg !3360
  store i8 %4, i8* %11, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !3361, metadata !DIExpression()), !dbg !3362
  call void @llvm.dbg.declare(metadata %struct.ACCESS_VARIABLE_HEADER** %12, metadata !3363, metadata !DIExpression()), !dbg !3364
  call void @llvm.dbg.declare(metadata i8** %13, metadata !3365, metadata !DIExpression()), !dbg !3366
  %14 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %10, align 8, !dbg !3367
  %15 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %14, i32 0, i32 1, !dbg !3368
  store %struct.ACCESS_VARIABLE_HEADER* null, %struct.ACCESS_VARIABLE_HEADER** %15, align 8, !dbg !3369
  store %struct.ACCESS_VARIABLE_HEADER* null, %struct.ACCESS_VARIABLE_HEADER** %12, align 8, !dbg !3370
  %16 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %10, align 8, !dbg !3371
  %17 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %16, i32 0, i32 3, !dbg !3373
  %18 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %17, align 8, !dbg !3373
  %19 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %10, align 8, !dbg !3374
  %20 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %19, i32 0, i32 0, !dbg !3375
  store %struct.ACCESS_VARIABLE_HEADER* %18, %struct.ACCESS_VARIABLE_HEADER** %20, align 8, !dbg !3376
  br label %21, !dbg !3374

21:                                               ; preds = %141, %5
  %22 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %10, align 8, !dbg !3377
  %23 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %22, i32 0, i32 0, !dbg !3379
  %24 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %23, align 8, !dbg !3379
  %25 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %10, align 8, !dbg !3380
  %26 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %25, i32 0, i32 2, !dbg !3381
  %27 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %26, align 8, !dbg !3381
  %28 = call zeroext i8 @IsValidAccessVariableHeader(%struct.ACCESS_VARIABLE_HEADER* %24, %struct.ACCESS_VARIABLE_HEADER* %27), !dbg !3382
  %29 = icmp ne i8 %28, 0, !dbg !3383
  br i1 %29, label %30, label %149, !dbg !3383

30:                                               ; preds = %21
  %31 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %10, align 8, !dbg !3384
  %32 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %31, i32 0, i32 0, !dbg !3387
  %33 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %32, align 8, !dbg !3387
  %34 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %33, i32 0, i32 1, !dbg !3388
  %35 = load i8, i8* %34, align 1, !dbg !3388
  %36 = zext i8 %35 to i32, !dbg !3384
  %37 = icmp eq i32 %36, 63, !dbg !3389
  br i1 %37, label %46, label %38, !dbg !3390

38:                                               ; preds = %30
  %39 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %10, align 8, !dbg !3391
  %40 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %39, i32 0, i32 0, !dbg !3392
  %41 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %40, align 8, !dbg !3392
  %42 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %41, i32 0, i32 1, !dbg !3393
  %43 = load i8, i8* %42, align 1, !dbg !3393
  %44 = zext i8 %43 to i32, !dbg !3391
  %45 = icmp eq i32 %44, 62, !dbg !3394
  br i1 %45, label %46, label %140, !dbg !3395

46:                                               ; preds = %38, %30
  %47 = load i8, i8* %9, align 1, !dbg !3396
  %48 = zext i8 %47 to i32, !dbg !3396
  %49 = icmp ne i32 %48, 0, !dbg !3396
  br i1 %49, label %61, label %50, !dbg !3399

50:                                               ; preds = %46
  %51 = call zeroext i8 @AtRuntime(), !dbg !3400
  %52 = icmp ne i8 %51, 0, !dbg !3400
  br i1 %52, label %53, label %61, !dbg !3401

53:                                               ; preds = %50
  %54 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %10, align 8, !dbg !3402
  %55 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %54, i32 0, i32 0, !dbg !3403
  %56 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %55, align 8, !dbg !3403
  %57 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %56, i32 0, i32 3, !dbg !3404
  %58 = load i32, i32* %57, align 1, !dbg !3404
  %59 = and i32 %58, 4, !dbg !3405
  %60 = icmp ne i32 %59, 0, !dbg !3406
  br i1 %60, label %61, label %139, !dbg !3407

61:                                               ; preds = %53, %50, %46
  %62 = load i16*, i16** %7, align 8, !dbg !3408
  %63 = getelementptr inbounds i16, i16* %62, i64 0, !dbg !3408
  %64 = load i16, i16* %63, align 2, !dbg !3408
  %65 = zext i16 %64 to i32, !dbg !3408
  %66 = icmp eq i32 %65, 0, !dbg !3411
  br i1 %66, label %67, label %84, !dbg !3412

67:                                               ; preds = %61
  %68 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %10, align 8, !dbg !3413
  %69 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %68, i32 0, i32 0, !dbg !3416
  %70 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %69, align 8, !dbg !3416
  %71 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %70, i32 0, i32 1, !dbg !3417
  %72 = load i8, i8* %71, align 1, !dbg !3417
  %73 = zext i8 %72 to i32, !dbg !3413
  %74 = icmp eq i32 %73, 62, !dbg !3418
  br i1 %74, label %75, label %79, !dbg !3419

75:                                               ; preds = %67
  %76 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %10, align 8, !dbg !3420
  %77 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %76, i32 0, i32 0, !dbg !3422
  %78 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %77, align 8, !dbg !3422
  store %struct.ACCESS_VARIABLE_HEADER* %78, %struct.ACCESS_VARIABLE_HEADER** %12, align 8, !dbg !3423
  br label %83, !dbg !3424

79:                                               ; preds = %67
  %80 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %12, align 8, !dbg !3425
  %81 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %10, align 8, !dbg !3427
  %82 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %81, i32 0, i32 1, !dbg !3428
  store %struct.ACCESS_VARIABLE_HEADER* %80, %struct.ACCESS_VARIABLE_HEADER** %82, align 8, !dbg !3429
  store i64 0, i64* %6, align 8, !dbg !3430
  br label %159, !dbg !3430

83:                                               ; preds = %75
  br label %138, !dbg !3431

84:                                               ; preds = %61
  %85 = load %struct.GUID*, %struct.GUID** %8, align 8, !dbg !3432
  %86 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %10, align 8, !dbg !3435
  %87 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %86, i32 0, i32 0, !dbg !3436
  %88 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %87, align 8, !dbg !3436
  %89 = load i8, i8* %11, align 1, !dbg !3437
  %90 = call %struct.GUID* @GetAccessVendorGuidPtr(%struct.ACCESS_VARIABLE_HEADER* %88, i8 zeroext %89), !dbg !3438
  %91 = call zeroext i8 @CompareGuid(%struct.GUID* %85, %struct.GUID* %90), !dbg !3439
  %92 = icmp ne i8 %91, 0, !dbg !3439
  br i1 %92, label %93, label %137, !dbg !3440

93:                                               ; preds = %84
  %94 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %10, align 8, !dbg !3441
  %95 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %94, i32 0, i32 0, !dbg !3443
  %96 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %95, align 8, !dbg !3443
  %97 = load i8, i8* %11, align 1, !dbg !3444
  %98 = call i16* @GetAccessVariableNamePtr(%struct.ACCESS_VARIABLE_HEADER* %96, i8 zeroext %97), !dbg !3445
  %99 = bitcast i16* %98 to i8*, !dbg !3446
  store i8* %99, i8** %13, align 8, !dbg !3447
  %100 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %10, align 8, !dbg !3448
  %101 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %100, i32 0, i32 0, !dbg !3448
  %102 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %101, align 8, !dbg !3448
  %103 = load i8, i8* %11, align 1, !dbg !3448
  %104 = call i64 @NameSizeOfAccessVariable(%struct.ACCESS_VARIABLE_HEADER* %102, i8 zeroext %103), !dbg !3448
  %105 = icmp ne i64 %104, 0, !dbg !3448
  br i1 %105, label %106, label %107, !dbg !3451

106:                                              ; preds = %93
  br label %108, !dbg !3451

107:                                              ; preds = %93
  call void @__assert_fail(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.10.45, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3.38, i64 0, i64 0), i32 1062, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @__PRETTY_FUNCTION__.FindAccessVariableEx, i64 0, i64 0)) #17, !dbg !3448
  unreachable, !dbg !3448

108:                                              ; preds = %106
  %109 = load i16*, i16** %7, align 8, !dbg !3452
  %110 = bitcast i16* %109 to i8*, !dbg !3452
  %111 = load i8*, i8** %13, align 8, !dbg !3454
  %112 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %10, align 8, !dbg !3455
  %113 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %112, i32 0, i32 0, !dbg !3456
  %114 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %113, align 8, !dbg !3456
  %115 = load i8, i8* %11, align 1, !dbg !3457
  %116 = call i64 @NameSizeOfAccessVariable(%struct.ACCESS_VARIABLE_HEADER* %114, i8 zeroext %115), !dbg !3458
  %117 = call i64 @CompareMem(i8* %110, i8* %111, i64 %116), !dbg !3459
  %118 = icmp eq i64 %117, 0, !dbg !3460
  br i1 %118, label %119, label %136, !dbg !3461

119:                                              ; preds = %108
  %120 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %10, align 8, !dbg !3462
  %121 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %120, i32 0, i32 0, !dbg !3465
  %122 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %121, align 8, !dbg !3465
  %123 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %122, i32 0, i32 1, !dbg !3466
  %124 = load i8, i8* %123, align 1, !dbg !3466
  %125 = zext i8 %124 to i32, !dbg !3462
  %126 = icmp eq i32 %125, 62, !dbg !3467
  br i1 %126, label %127, label %131, !dbg !3468

127:                                              ; preds = %119
  %128 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %10, align 8, !dbg !3469
  %129 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %128, i32 0, i32 0, !dbg !3471
  %130 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %129, align 8, !dbg !3471
  store %struct.ACCESS_VARIABLE_HEADER* %130, %struct.ACCESS_VARIABLE_HEADER** %12, align 8, !dbg !3472
  br label %135, !dbg !3473

131:                                              ; preds = %119
  %132 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %12, align 8, !dbg !3474
  %133 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %10, align 8, !dbg !3476
  %134 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %133, i32 0, i32 1, !dbg !3477
  store %struct.ACCESS_VARIABLE_HEADER* %132, %struct.ACCESS_VARIABLE_HEADER** %134, align 8, !dbg !3478
  store i64 0, i64* %6, align 8, !dbg !3479
  br label %159, !dbg !3479

135:                                              ; preds = %127
  br label %136, !dbg !3480

136:                                              ; preds = %135, %108
  br label %137, !dbg !3481

137:                                              ; preds = %136, %84
  br label %138

138:                                              ; preds = %137, %83
  br label %139, !dbg !3482

139:                                              ; preds = %138, %53
  br label %140, !dbg !3483

140:                                              ; preds = %139, %38
  br label %141, !dbg !3484

141:                                              ; preds = %140
  %142 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %10, align 8, !dbg !3485
  %143 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %142, i32 0, i32 0, !dbg !3486
  %144 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %143, align 8, !dbg !3486
  %145 = load i8, i8* %11, align 1, !dbg !3487
  %146 = call %struct.ACCESS_VARIABLE_HEADER* @GetNextAccessVariablePtr(%struct.ACCESS_VARIABLE_HEADER* %144, i8 zeroext %145), !dbg !3488
  %147 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %10, align 8, !dbg !3489
  %148 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %147, i32 0, i32 0, !dbg !3490
  store %struct.ACCESS_VARIABLE_HEADER* %146, %struct.ACCESS_VARIABLE_HEADER** %148, align 8, !dbg !3491
  br label %21, !dbg !3492, !llvm.loop !3493

149:                                              ; preds = %21
  %150 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %12, align 8, !dbg !3495
  %151 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %10, align 8, !dbg !3496
  %152 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %151, i32 0, i32 0, !dbg !3497
  store %struct.ACCESS_VARIABLE_HEADER* %150, %struct.ACCESS_VARIABLE_HEADER** %152, align 8, !dbg !3498
  %153 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %10, align 8, !dbg !3499
  %154 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %153, i32 0, i32 0, !dbg !3500
  %155 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %154, align 8, !dbg !3500
  %156 = icmp eq %struct.ACCESS_VARIABLE_HEADER* %155, null, !dbg !3501
  %157 = zext i1 %156 to i64, !dbg !3502
  %158 = select i1 %156, i64 -9223372036854775794, i64 0, !dbg !3502
  store i64 %158, i64* %6, align 8, !dbg !3503
  br label %159, !dbg !3503

159:                                              ; preds = %149, %131, %79
  %160 = load i64, i64* %6, align 8, !dbg !3504
  ret i64 %160, !dbg !3504
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @FindAccessVariable(i16* %0, %struct.GUID* %1, %struct.ACCESS_VARIABLE_POINTER_TRACK* %2, %struct.VARIABLE_GLOBAL* %3, i8 zeroext %4) #6 !dbg !3505 {
  %6 = alloca i64, align 8
  %7 = alloca i16*, align 8
  %8 = alloca %struct.GUID*, align 8
  %9 = alloca %struct.ACCESS_VARIABLE_POINTER_TRACK*, align 8
  %10 = alloca %struct.VARIABLE_GLOBAL*, align 8
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  store i16* %0, i16** %7, align 8
  call void @llvm.dbg.declare(metadata i16** %7, metadata !3508, metadata !DIExpression()), !dbg !3509
  store %struct.GUID* %1, %struct.GUID** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.GUID** %8, metadata !3510, metadata !DIExpression()), !dbg !3511
  store %struct.ACCESS_VARIABLE_POINTER_TRACK* %2, %struct.ACCESS_VARIABLE_POINTER_TRACK** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.ACCESS_VARIABLE_POINTER_TRACK** %9, metadata !3512, metadata !DIExpression()), !dbg !3513
  store %struct.VARIABLE_GLOBAL* %3, %struct.VARIABLE_GLOBAL** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.VARIABLE_GLOBAL** %10, metadata !3514, metadata !DIExpression()), !dbg !3515
  store i8 %4, i8* %11, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !3516, metadata !DIExpression()), !dbg !3517
  call void @llvm.dbg.declare(metadata i64* %12, metadata !3518, metadata !DIExpression()), !dbg !3519
  %13 = load i16*, i16** %7, align 8, !dbg !3520
  %14 = getelementptr inbounds i16, i16* %13, i64 0, !dbg !3520
  %15 = load i16, i16* %14, align 2, !dbg !3520
  %16 = zext i16 %15 to i32, !dbg !3520
  %17 = icmp ne i32 %16, 0, !dbg !3522
  br i1 %17, label %18, label %22, !dbg !3523

18:                                               ; preds = %5
  %19 = load %struct.GUID*, %struct.GUID** %8, align 8, !dbg !3524
  %20 = icmp eq %struct.GUID* %19, null, !dbg !3525
  br i1 %20, label %21, label %22, !dbg !3526

21:                                               ; preds = %18
  store i64 -9223372036854775806, i64* %6, align 8, !dbg !3527
  br label %47, !dbg !3527

22:                                               ; preds = %18, %5
  %23 = load %struct.VARIABLE_STORE_HEADER*, %struct.VARIABLE_STORE_HEADER** @mineNvVariableCache, align 8, !dbg !3529
  %24 = call %struct.ACCESS_VARIABLE_HEADER* @GetAccessStartPointer(%struct.VARIABLE_STORE_HEADER* %23), !dbg !3530
  %25 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %9, align 8, !dbg !3531
  %26 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %25, i32 0, i32 3, !dbg !3532
  store %struct.ACCESS_VARIABLE_HEADER* %24, %struct.ACCESS_VARIABLE_HEADER** %26, align 8, !dbg !3533
  %27 = load %struct.VARIABLE_STORE_HEADER*, %struct.VARIABLE_STORE_HEADER** @mineNvVariableCache, align 8, !dbg !3534
  %28 = call %struct.ACCESS_VARIABLE_HEADER* @GetAccessEndPointer(%struct.VARIABLE_STORE_HEADER* %27), !dbg !3535
  %29 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %9, align 8, !dbg !3536
  %30 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %29, i32 0, i32 2, !dbg !3537
  store %struct.ACCESS_VARIABLE_HEADER* %28, %struct.ACCESS_VARIABLE_HEADER** %30, align 8, !dbg !3538
  %31 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %9, align 8, !dbg !3539
  %32 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %31, i32 0, i32 4, !dbg !3540
  store i8 0, i8* %32, align 8, !dbg !3541
  %33 = load i16*, i16** %7, align 8, !dbg !3542
  %34 = load %struct.GUID*, %struct.GUID** %8, align 8, !dbg !3543
  %35 = load i8, i8* %11, align 1, !dbg !3544
  %36 = load %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.ACCESS_VARIABLE_POINTER_TRACK** %9, align 8, !dbg !3545
  %37 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !3546
  %38 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %37, i32 0, i32 0, !dbg !3547
  %39 = getelementptr inbounds %struct.VARIABLE_GLOBAL, %struct.VARIABLE_GLOBAL* %38, i32 0, i32 6, !dbg !3548
  %40 = load i8, i8* %39, align 4, !dbg !3548
  %41 = call i64 @FindAccessVariableEx(i16* %33, %struct.GUID* %34, i8 zeroext %35, %struct.ACCESS_VARIABLE_POINTER_TRACK* %36, i8 zeroext %40), !dbg !3549
  store i64 %41, i64* %12, align 8, !dbg !3550
  %42 = load i64, i64* %12, align 8, !dbg !3551
  %43 = icmp slt i64 %42, 0, !dbg !3551
  br i1 %43, label %46, label %44, !dbg !3553

44:                                               ; preds = %22
  %45 = load i64, i64* %12, align 8, !dbg !3554
  store i64 %45, i64* %6, align 8, !dbg !3556
  br label %47, !dbg !3556

46:                                               ; preds = %22
  store i64 -9223372036854775794, i64* %6, align 8, !dbg !3557
  br label %47, !dbg !3557

47:                                               ; preds = %46, %44, %21
  %48 = load i64, i64* %6, align 8, !dbg !3558
  ret i64 %48, !dbg !3558
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @mineVariableServiceSetVariable(i16* %0, %struct.GUID* %1, i32 %2, %struct._DEMO1_ACCESS_KEY* %3, i64 %4, i8* %5) #6 !dbg !3559 {
  %7 = alloca i64, align 8
  %8 = alloca i16*, align 8
  %9 = alloca %struct.GUID*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct._DEMO1_ACCESS_KEY*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  %14 = alloca %struct.ACCESS_VARIABLE_POINTER_TRACK, align 8
  %15 = alloca i64, align 8
  %16 = alloca %struct.ACCESS_VARIABLE_HEADER*, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i8, align 1
  %20 = alloca i8, align 1
  store i16* %0, i16** %8, align 8
  call void @llvm.dbg.declare(metadata i16** %8, metadata !3560, metadata !DIExpression()), !dbg !3561
  store %struct.GUID* %1, %struct.GUID** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.GUID** %9, metadata !3562, metadata !DIExpression()), !dbg !3563
  store i32 %2, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !3564, metadata !DIExpression()), !dbg !3565
  store %struct._DEMO1_ACCESS_KEY* %3, %struct._DEMO1_ACCESS_KEY** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._DEMO1_ACCESS_KEY** %11, metadata !3566, metadata !DIExpression()), !dbg !3567
  store i64 %4, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !3568, metadata !DIExpression()), !dbg !3569
  store i8* %5, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !3570, metadata !DIExpression()), !dbg !3571
  call void @llvm.dbg.declare(metadata %struct.ACCESS_VARIABLE_POINTER_TRACK* %14, metadata !3572, metadata !DIExpression()), !dbg !3573
  call void @llvm.dbg.declare(metadata i64* %15, metadata !3574, metadata !DIExpression()), !dbg !3575
  call void @llvm.dbg.declare(metadata %struct.ACCESS_VARIABLE_HEADER** %16, metadata !3576, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.declare(metadata i64* %17, metadata !3578, metadata !DIExpression()), !dbg !3579
  call void @llvm.dbg.declare(metadata i64* %18, metadata !3580, metadata !DIExpression()), !dbg !3581
  call void @llvm.dbg.declare(metadata i8* %19, metadata !3582, metadata !DIExpression()), !dbg !3583
  call void @llvm.dbg.declare(metadata i8* %20, metadata !3584, metadata !DIExpression()), !dbg !3585
  %21 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !3586
  %22 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %21, i32 0, i32 0, !dbg !3587
  %23 = getelementptr inbounds %struct.VARIABLE_GLOBAL, %struct.VARIABLE_GLOBAL* %22, i32 0, i32 6, !dbg !3588
  %24 = load i8, i8* %23, align 4, !dbg !3588
  store i8 %24, i8* %19, align 1, !dbg !3589
  %25 = load i16*, i16** %8, align 8, !dbg !3590
  %26 = icmp eq i16* %25, null, !dbg !3592
  br i1 %26, label %36, label %27, !dbg !3593

27:                                               ; preds = %6
  %28 = load i16*, i16** %8, align 8, !dbg !3594
  %29 = getelementptr inbounds i16, i16* %28, i64 0, !dbg !3594
  %30 = load i16, i16* %29, align 2, !dbg !3594
  %31 = zext i16 %30 to i32, !dbg !3594
  %32 = icmp eq i32 %31, 0, !dbg !3595
  br i1 %32, label %36, label %33, !dbg !3596

33:                                               ; preds = %27
  %34 = load %struct.GUID*, %struct.GUID** %9, align 8, !dbg !3597
  %35 = icmp eq %struct.GUID* %34, null, !dbg !3598
  br i1 %35, label %36, label %37, !dbg !3599

36:                                               ; preds = %33, %27, %6
  store i64 -9223372036854775806, i64* %7, align 8, !dbg !3600
  br label %103, !dbg !3600

37:                                               ; preds = %33
  %38 = load i64, i64* %12, align 8, !dbg !3602
  %39 = icmp ne i64 %38, 0, !dbg !3604
  br i1 %39, label %40, label %44, !dbg !3605

40:                                               ; preds = %37
  %41 = load i8*, i8** %13, align 8, !dbg !3606
  %42 = icmp eq i8* %41, null, !dbg !3607
  br i1 %42, label %43, label %44, !dbg !3608

43:                                               ; preds = %40
  store i64 -9223372036854775806, i64* %7, align 8, !dbg !3609
  br label %103, !dbg !3609

44:                                               ; preds = %40, %37
  %45 = load i64, i64* %12, align 8, !dbg !3611
  store i64 %45, i64* %18, align 8, !dbg !3612
  %46 = load i64, i64* %18, align 8, !dbg !3613
  %47 = sub i64 -1, %46, !dbg !3615
  %48 = load i16*, i16** %8, align 8, !dbg !3616
  %49 = bitcast i16* %48 to i8*, !dbg !3616
  %50 = call i64 @strlen(i8* %49) #18, !dbg !3617
  %51 = icmp ult i64 %47, %50, !dbg !3618
  br i1 %51, label %52, label %53, !dbg !3619

52:                                               ; preds = %44
  store i64 -9223372036854775806, i64* %7, align 8, !dbg !3620
  br label %103, !dbg !3620

53:                                               ; preds = %44
  %54 = load i16*, i16** %8, align 8, !dbg !3622
  %55 = bitcast i16* %54 to i8*, !dbg !3622
  %56 = call i64 @strlen(i8* %55) #18, !dbg !3624
  %57 = load i64, i64* %18, align 8, !dbg !3625
  %58 = add i64 %56, %57, !dbg !3626
  %59 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !3627
  %60 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %59, i32 0, i32 9, !dbg !3628
  %61 = load i64, i64* %60, align 8, !dbg !3628
  %62 = load i8, i8* %19, align 1, !dbg !3629
  %63 = call i64 @GetAccessVariableHeaderSize(i8 zeroext %62), !dbg !3630
  %64 = sub i64 %61, %63, !dbg !3631
  %65 = icmp ugt i64 %58, %64, !dbg !3632
  br i1 %65, label %66, label %67, !dbg !3633

66:                                               ; preds = %53
  store i64 -9223372036854775806, i64* %7, align 8, !dbg !3634
  br label %103, !dbg !3634

67:                                               ; preds = %53
  %68 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !3636
  %69 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %68, i32 0, i32 0, !dbg !3637
  %70 = getelementptr inbounds %struct.VARIABLE_GLOBAL, %struct.VARIABLE_GLOBAL* %69, i32 0, i32 2, !dbg !3638
  %71 = load i64, i64* %70, align 8, !dbg !3638
  store i64 %71, i64* %17, align 8, !dbg !3639
  %72 = load i64, i64* %17, align 8, !dbg !3640
  %73 = inttoptr i64 %72 to %struct.VARIABLE_STORE_HEADER*, !dbg !3641
  %74 = call %struct.ACCESS_VARIABLE_HEADER* @GetAccessStartPointer(%struct.VARIABLE_STORE_HEADER* %73), !dbg !3642
  store %struct.ACCESS_VARIABLE_HEADER* %74, %struct.ACCESS_VARIABLE_HEADER** %16, align 8, !dbg !3643
  br label %75, !dbg !3644

75:                                               ; preds = %82, %67
  %76 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %16, align 8, !dbg !3645
  %77 = load i64, i64* %17, align 8, !dbg !3646
  %78 = inttoptr i64 %77 to %struct.VARIABLE_STORE_HEADER*, !dbg !3647
  %79 = call %struct.ACCESS_VARIABLE_HEADER* @GetAccessEndPointer(%struct.VARIABLE_STORE_HEADER* %78), !dbg !3648
  %80 = call zeroext i8 @IsValidAccessVariableHeader(%struct.ACCESS_VARIABLE_HEADER* %76, %struct.ACCESS_VARIABLE_HEADER* %79), !dbg !3649
  %81 = icmp ne i8 %80, 0, !dbg !3644
  br i1 %81, label %82, label %86, !dbg !3644

82:                                               ; preds = %75
  %83 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %16, align 8, !dbg !3650
  %84 = load i8, i8* %19, align 1, !dbg !3652
  %85 = call %struct.ACCESS_VARIABLE_HEADER* @GetNextAccessVariablePtr(%struct.ACCESS_VARIABLE_HEADER* %83, i8 zeroext %84), !dbg !3653
  store %struct.ACCESS_VARIABLE_HEADER* %85, %struct.ACCESS_VARIABLE_HEADER** %16, align 8, !dbg !3654
  br label %75, !dbg !3644, !llvm.loop !3655

86:                                               ; preds = %75
  %87 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %16, align 8, !dbg !3657
  %88 = ptrtoint %struct.ACCESS_VARIABLE_HEADER* %87 to i64, !dbg !3658
  %89 = load i64, i64* %17, align 8, !dbg !3659
  %90 = sub i64 %88, %89, !dbg !3660
  %91 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !3661
  %92 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %91, i32 0, i32 2, !dbg !3662
  store i64 %90, i64* %92, align 8, !dbg !3663
  %93 = load %struct._Demo1_Access_Key_PROTOCOL*, %struct._Demo1_Access_Key_PROTOCOL** @AccessKeyProtocol, align 8, !dbg !3664
  %94 = load %struct._DEMO1_ACCESS_KEY*, %struct._DEMO1_ACCESS_KEY** %11, align 8, !dbg !3666
  %95 = call i64 @Demo1ValidateAccessKey(%struct._Demo1_Access_Key_PROTOCOL* %93, i8* null, %struct._DEMO1_ACCESS_KEY* %94, i8 zeroext 1, i8* %20), !dbg !3667
  %96 = icmp ne i64 %95, 0, !dbg !3668
  br i1 %96, label %97, label %98, !dbg !3669

97:                                               ; preds = %86
  store i64 -9223372036854775806, i64* %7, align 8, !dbg !3670
  br label %103, !dbg !3670

98:                                               ; preds = %86
  %99 = load i8, i8* %20, align 1, !dbg !3672
  %100 = icmp ne i8 %99, 0, !dbg !3672
  br i1 %100, label %102, label %101, !dbg !3674

101:                                              ; preds = %98
  store i64 -9223372036854775806, i64* %7, align 8, !dbg !3675
  br label %103, !dbg !3675

102:                                              ; preds = %98
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.46, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3.38, i64 0, i64 0), i32 1216, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @__PRETTY_FUNCTION__.mineVariableServiceSetVariable, i64 0, i64 0)) #17, !dbg !3677
  unreachable, !dbg !3677

103:                                              ; preds = %101, %97, %66, %52, %43, %36
  %104 = load i64, i64* %7, align 8, !dbg !3678
  ret i64 %104, !dbg !3678
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @mineVariableServiceGetVariable(i16* %0, %struct.GUID* %1, i32* %2, %struct._DEMO1_ACCESS_KEY* %3, i64* %4, i8* %5) #6 !dbg !3679 {
  %7 = alloca i64, align 8
  %8 = alloca i16*, align 8
  %9 = alloca %struct.GUID*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca %struct._DEMO1_ACCESS_KEY*, align 8
  %12 = alloca i64*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca %struct.ACCESS_VARIABLE_POINTER_TRACK, align 8
  %16 = alloca i64, align 8
  %17 = alloca i8, align 1
  store i16* %0, i16** %8, align 8
  call void @llvm.dbg.declare(metadata i16** %8, metadata !3680, metadata !DIExpression()), !dbg !3681
  store %struct.GUID* %1, %struct.GUID** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.GUID** %9, metadata !3682, metadata !DIExpression()), !dbg !3683
  store i32* %2, i32** %10, align 8
  call void @llvm.dbg.declare(metadata i32** %10, metadata !3684, metadata !DIExpression()), !dbg !3685
  store %struct._DEMO1_ACCESS_KEY* %3, %struct._DEMO1_ACCESS_KEY** %11, align 8
  call void @llvm.dbg.declare(metadata %struct._DEMO1_ACCESS_KEY** %11, metadata !3686, metadata !DIExpression()), !dbg !3687
  store i64* %4, i64** %12, align 8
  call void @llvm.dbg.declare(metadata i64** %12, metadata !3688, metadata !DIExpression()), !dbg !3689
  store i8* %5, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !3690, metadata !DIExpression()), !dbg !3691
  call void @llvm.dbg.declare(metadata i64* %14, metadata !3692, metadata !DIExpression()), !dbg !3693
  call void @llvm.dbg.declare(metadata %struct.ACCESS_VARIABLE_POINTER_TRACK* %15, metadata !3694, metadata !DIExpression()), !dbg !3695
  call void @llvm.dbg.declare(metadata i64* %16, metadata !3696, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.declare(metadata i8* %17, metadata !3698, metadata !DIExpression()), !dbg !3699
  %18 = load i16*, i16** %8, align 8, !dbg !3700
  %19 = icmp eq i16* %18, null, !dbg !3702
  br i1 %19, label %26, label %20, !dbg !3703

20:                                               ; preds = %6
  %21 = load %struct.GUID*, %struct.GUID** %9, align 8, !dbg !3704
  %22 = icmp eq %struct.GUID* %21, null, !dbg !3705
  br i1 %22, label %26, label %23, !dbg !3706

23:                                               ; preds = %20
  %24 = load i64*, i64** %12, align 8, !dbg !3707
  %25 = icmp eq i64* %24, null, !dbg !3708
  br i1 %25, label %26, label %27, !dbg !3709

26:                                               ; preds = %23, %20, %6
  store i64 -9223372036854775806, i64* %7, align 8, !dbg !3710
  br label %121, !dbg !3710

27:                                               ; preds = %23
  %28 = load i16*, i16** %8, align 8, !dbg !3712
  %29 = getelementptr inbounds i16, i16* %28, i64 0, !dbg !3712
  %30 = load i16, i16* %29, align 2, !dbg !3712
  %31 = zext i16 %30 to i32, !dbg !3712
  %32 = icmp eq i32 %31, 0, !dbg !3714
  br i1 %32, label %33, label %34, !dbg !3715

33:                                               ; preds = %27
  store i64 -9223372036854775794, i64* %7, align 8, !dbg !3716
  br label %121, !dbg !3716

34:                                               ; preds = %27
  %35 = load %struct._Demo1_Access_Key_PROTOCOL*, %struct._Demo1_Access_Key_PROTOCOL** @AccessKeyProtocol, align 8, !dbg !3718
  %36 = load %struct._DEMO1_ACCESS_KEY*, %struct._DEMO1_ACCESS_KEY** %11, align 8, !dbg !3720
  %37 = call i64 @Demo1ValidateAccessKey(%struct._Demo1_Access_Key_PROTOCOL* %35, i8* null, %struct._DEMO1_ACCESS_KEY* %36, i8 zeroext 0, i8* %17), !dbg !3721
  %38 = icmp ne i64 %37, 0, !dbg !3722
  br i1 %38, label %39, label %40, !dbg !3723

39:                                               ; preds = %34
  store i64 -9223372036854775806, i64* %7, align 8, !dbg !3724
  br label %121, !dbg !3724

40:                                               ; preds = %34
  %41 = load i8, i8* %17, align 1, !dbg !3726
  %42 = icmp ne i8 %41, 0, !dbg !3726
  br i1 %42, label %44, label %43, !dbg !3728

43:                                               ; preds = %40
  store i64 -9223372036854775806, i64* %7, align 8, !dbg !3729
  br label %121, !dbg !3729

44:                                               ; preds = %40
  %45 = load i16*, i16** %8, align 8, !dbg !3731
  %46 = load %struct.GUID*, %struct.GUID** %9, align 8, !dbg !3732
  %47 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !3733
  %48 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %47, i32 0, i32 0, !dbg !3734
  %49 = call i32 (i16*, %struct.GUID*, %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.VARIABLE_GLOBAL*, i32, ...) bitcast (i32 (...)* @FindAcDoesKeyExistcessVariable to i32 (i16*, %struct.GUID*, %struct.ACCESS_VARIABLE_POINTER_TRACK*, %struct.VARIABLE_GLOBAL*, i32, ...)*)(i16* %45, %struct.GUID* %46, %struct.ACCESS_VARIABLE_POINTER_TRACK* %15, %struct.VARIABLE_GLOBAL* %48, i32 0), !dbg !3735
  %50 = sext i32 %49 to i64, !dbg !3735
  store i64 %50, i64* %14, align 8, !dbg !3736
  %51 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %15, i32 0, i32 0, !dbg !3737
  %52 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %51, align 8, !dbg !3737
  %53 = icmp eq %struct.ACCESS_VARIABLE_HEADER* %52, null, !dbg !3739
  br i1 %53, label %57, label %54, !dbg !3740

54:                                               ; preds = %44
  %55 = load i64, i64* %14, align 8, !dbg !3741
  %56 = icmp slt i64 %55, 0, !dbg !3741
  br i1 %56, label %57, label %58, !dbg !3742

57:                                               ; preds = %54, %44
  br label %99, !dbg !3743

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %15, i32 0, i32 0, !dbg !3745
  %60 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %59, align 8, !dbg !3745
  %61 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !3746
  %62 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %61, i32 0, i32 0, !dbg !3747
  %63 = getelementptr inbounds %struct.VARIABLE_GLOBAL, %struct.VARIABLE_GLOBAL* %62, i32 0, i32 6, !dbg !3748
  %64 = load i8, i8* %63, align 4, !dbg !3748
  %65 = call i64 @DataSizeOfAccessVariable(%struct.ACCESS_VARIABLE_HEADER* %60, i8 zeroext %64), !dbg !3749
  store i64 %65, i64* %16, align 8, !dbg !3750
  %66 = load i64, i64* %16, align 8, !dbg !3751
  %67 = icmp ne i64 %66, 0, !dbg !3751
  br i1 %67, label %68, label %69, !dbg !3754

68:                                               ; preds = %58
  br label %70, !dbg !3754

69:                                               ; preds = %58
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12.47, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3.38, i64 0, i64 0), i32 1282, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @__PRETTY_FUNCTION__.mineVariableServiceGetVariable, i64 0, i64 0)) #17, !dbg !3751
  unreachable, !dbg !3751

70:                                               ; preds = %68
  %71 = load i64*, i64** %12, align 8, !dbg !3755
  %72 = load i64, i64* %71, align 8, !dbg !3757
  %73 = load i64, i64* %16, align 8, !dbg !3758
  %74 = icmp uge i64 %72, %73, !dbg !3759
  br i1 %74, label %75, label %96, !dbg !3760

75:                                               ; preds = %70
  %76 = load i8*, i8** %13, align 8, !dbg !3761
  %77 = icmp eq i8* %76, null, !dbg !3764
  br i1 %77, label %78, label %79, !dbg !3765

78:                                               ; preds = %75
  store i64 -9223372036854775806, i64* %14, align 8, !dbg !3766
  br label %99, !dbg !3768

79:                                               ; preds = %75
  %80 = load i8*, i8** %13, align 8, !dbg !3769
  %81 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %15, i32 0, i32 0, !dbg !3770
  %82 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %81, align 8, !dbg !3770
  %83 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !3771
  %84 = getelementptr inbounds %struct.VARIABLE_MODULE_GLOBAL, %struct.VARIABLE_MODULE_GLOBAL* %83, i32 0, i32 0, !dbg !3772
  %85 = getelementptr inbounds %struct.VARIABLE_GLOBAL, %struct.VARIABLE_GLOBAL* %84, i32 0, i32 6, !dbg !3773
  %86 = load i8, i8* %85, align 4, !dbg !3773
  %87 = call i8* @GetAccessVariableDataPtr(%struct.ACCESS_VARIABLE_HEADER* %82, i8 zeroext %86), !dbg !3774
  %88 = load i64, i64* %16, align 8, !dbg !3775
  %89 = call i8* @CopyMem(i8* %80, i8* %87, i64 %88), !dbg !3776
  %90 = load i64, i64* %16, align 8, !dbg !3777
  %91 = load i64*, i64** %12, align 8, !dbg !3778
  store i64 %90, i64* %91, align 8, !dbg !3779
  %92 = load i16*, i16** %8, align 8, !dbg !3780
  %93 = load %struct.GUID*, %struct.GUID** %9, align 8, !dbg !3781
  %94 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %15, i32 0, i32 4, !dbg !3782
  %95 = load i8, i8* %94, align 8, !dbg !3782
  call void @UpdateAccessVariableInfo(i16* %92, %struct.GUID* %93, i8 zeroext %95, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, %struct._VARIABLE_INFO_ENTRY** @gVarInfo), !dbg !3783
  store i64 0, i64* %14, align 8, !dbg !3784
  br label %99, !dbg !3785

96:                                               ; preds = %70
  %97 = load i64, i64* %16, align 8, !dbg !3786
  %98 = load i64*, i64** %12, align 8, !dbg !3788
  store i64 %97, i64* %98, align 8, !dbg !3789
  store i64 -9223372036854775803, i64* %14, align 8, !dbg !3790
  br label %99, !dbg !3791

99:                                               ; preds = %96, %79, %78, %57
  call void @llvm.dbg.label(metadata !3792), !dbg !3793
  %100 = load i64, i64* %14, align 8, !dbg !3794
  %101 = icmp eq i64 %100, 0, !dbg !3796
  br i1 %101, label %105, label %102, !dbg !3797

102:                                              ; preds = %99
  %103 = load i64, i64* %14, align 8, !dbg !3798
  %104 = icmp eq i64 %103, -9223372036854775803, !dbg !3799
  br i1 %104, label %105, label %119, !dbg !3800

105:                                              ; preds = %102, %99
  %106 = load i32*, i32** %10, align 8, !dbg !3801
  %107 = icmp ne i32* %106, null, !dbg !3804
  br i1 %107, label %108, label %118, !dbg !3805

108:                                              ; preds = %105
  %109 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %15, i32 0, i32 0, !dbg !3806
  %110 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %109, align 8, !dbg !3806
  %111 = icmp ne %struct.ACCESS_VARIABLE_HEADER* %110, null, !dbg !3807
  br i1 %111, label %112, label %118, !dbg !3808

112:                                              ; preds = %108
  %113 = getelementptr inbounds %struct.ACCESS_VARIABLE_POINTER_TRACK, %struct.ACCESS_VARIABLE_POINTER_TRACK* %15, i32 0, i32 0, !dbg !3809
  %114 = load %struct.ACCESS_VARIABLE_HEADER*, %struct.ACCESS_VARIABLE_HEADER** %113, align 8, !dbg !3809
  %115 = getelementptr inbounds %struct.ACCESS_VARIABLE_HEADER, %struct.ACCESS_VARIABLE_HEADER* %114, i32 0, i32 3, !dbg !3811
  %116 = load i32, i32* %115, align 1, !dbg !3811
  %117 = load i32*, i32** %10, align 8, !dbg !3812
  store i32 %116, i32* %117, align 4, !dbg !3813
  br label %118, !dbg !3814

118:                                              ; preds = %112, %108, %105
  br label %119, !dbg !3815

119:                                              ; preds = %118, %102
  %120 = load i64, i64* %14, align 8, !dbg !3816
  store i64 %120, i64* %7, align 8, !dbg !3817
  br label %121, !dbg !3817

121:                                              ; preds = %119, %43, %39, %33, %26
  %122 = load i64, i64* %7, align 8, !dbg !3818
  ret i64 %122, !dbg !3818
}

declare dso_local i32 @FindAcDoesKeyExistcessVariable(...) #10

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @Demo1VariableInit(i8* %0, %struct.EFI_SYSTEM_TABLE* %1) #6 !dbg !3819 {
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.EFI_SYSTEM_TABLE*, align 8
  %6 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3820, metadata !DIExpression()), !dbg !3821
  store %struct.EFI_SYSTEM_TABLE* %1, %struct.EFI_SYSTEM_TABLE** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.EFI_SYSTEM_TABLE** %5, metadata !3822, metadata !DIExpression()), !dbg !3823
  call void @llvm.dbg.declare(metadata i64* %6, metadata !3824, metadata !DIExpression()), !dbg !3825
  %7 = load i64, i64* %6, align 8, !dbg !3826
  %8 = icmp slt i64 %7, 0, !dbg !3826
  br i1 %8, label %12, label %9, !dbg !3828

9:                                                ; preds = %2
  %10 = load %struct._Demo1_Access_Key_PROTOCOL*, %struct._Demo1_Access_Key_PROTOCOL** @AccessKeyProtocol, align 8, !dbg !3829
  %11 = icmp eq %struct._Demo1_Access_Key_PROTOCOL* %10, null, !dbg !3830
  br i1 %11, label %12, label %14, !dbg !3831

12:                                               ; preds = %9, %2
  %13 = load i64, i64* %6, align 8, !dbg !3832
  store i64 %13, i64* %3, align 8, !dbg !3834
  br label %37, !dbg !3834

14:                                               ; preds = %9
  %15 = call i8* @AllocateRuntimeZeroPool(i64 264), !dbg !3835
  %16 = bitcast i8* %15 to %struct.VARIABLE_MODULE_GLOBAL*, !dbg !3835
  store %struct.VARIABLE_MODULE_GLOBAL* %16, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !3836
  %17 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !3837
  %18 = icmp eq %struct.VARIABLE_MODULE_GLOBAL* %17, null, !dbg !3839
  br i1 %18, label %19, label %20, !dbg !3840

19:                                               ; preds = %14
  store i64 -9223372036854775799, i64* %3, align 8, !dbg !3841
  br label %37, !dbg !3841

20:                                               ; preds = %14
  %21 = call i64 @mineInitNonVolatileVariableStore(), !dbg !3843
  store i64 %21, i64* %6, align 8, !dbg !3844
  %22 = load i64, i64* %6, align 8, !dbg !3845
  %23 = icmp slt i64 %22, 0, !dbg !3845
  br i1 %23, label %24, label %28, !dbg !3847

24:                                               ; preds = %20
  %25 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !3848
  %26 = bitcast %struct.VARIABLE_MODULE_GLOBAL* %25 to i8*, !dbg !3848
  call void @FreePool(i8* %26), !dbg !3850
  %27 = load i64, i64* %6, align 8, !dbg !3851
  store i64 %27, i64* %3, align 8, !dbg !3852
  br label %37, !dbg !3852

28:                                               ; preds = %20
  %29 = load %struct.EFI_SYSTEM_TABLE*, %struct.EFI_SYSTEM_TABLE** %5, align 8, !dbg !3853
  %30 = getelementptr inbounds %struct.EFI_SYSTEM_TABLE, %struct.EFI_SYSTEM_TABLE* %29, i32 0, i32 9, !dbg !3854
  %31 = load %struct.EFI_RUNTIME_SERVICES*, %struct.EFI_RUNTIME_SERVICES** %30, align 8, !dbg !3854
  %32 = getelementptr inbounds %struct.EFI_RUNTIME_SERVICES, %struct.EFI_RUNTIME_SERVICES* %31, i32 0, i32 10, !dbg !3855
  store i64 (i16*, %struct.GUID*, i32*, %struct._DEMO1_ACCESS_KEY*, i64*, i8*)* @mineVariableServiceGetVariable, i64 (i16*, %struct.GUID*, i32*, %struct._DEMO1_ACCESS_KEY*, i64*, i8*)** %32, align 8, !dbg !3856
  %33 = load %struct.EFI_SYSTEM_TABLE*, %struct.EFI_SYSTEM_TABLE** %5, align 8, !dbg !3857
  %34 = getelementptr inbounds %struct.EFI_SYSTEM_TABLE, %struct.EFI_SYSTEM_TABLE* %33, i32 0, i32 9, !dbg !3858
  %35 = load %struct.EFI_RUNTIME_SERVICES*, %struct.EFI_RUNTIME_SERVICES** %34, align 8, !dbg !3858
  %36 = getelementptr inbounds %struct.EFI_RUNTIME_SERVICES, %struct.EFI_RUNTIME_SERVICES* %35, i32 0, i32 11, !dbg !3859
  store i64 (i16*, %struct.GUID*, i32, %struct._DEMO1_ACCESS_KEY*, i64, i8*)* @mineVariableServiceSetVariable, i64 (i16*, %struct.GUID*, i32, %struct._DEMO1_ACCESS_KEY*, i64, i8*)** %36, align 8, !dbg !3860
  store i64 0, i64* %3, align 8, !dbg !3861
  br label %37, !dbg !3861

37:                                               ; preds = %28, %24, %19, %12
  %38 = load i64, i64* %3, align 8, !dbg !3862
  ret i64 %38, !dbg !3862
}

declare dso_local i8* @AllocateRuntimeZeroPool(i64) #10

declare dso_local void @FreePool(i8*) #10

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @Demo1_Variable_Unload(i8* %0) #6 !dbg !3863 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !3864, metadata !DIExpression()), !dbg !3865
  %3 = load %struct.VARIABLE_MODULE_GLOBAL*, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !3866
  %4 = bitcast %struct.VARIABLE_MODULE_GLOBAL* %3 to i8*, !dbg !3866
  call void @FreePool(i8* %4), !dbg !3867
  ret i64 0, !dbg !3868
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @__klee_posix_wrapped_main() #6 !dbg !153 {
  %1 = alloca i32, align 4
  %2 = alloca i16*, align 8
  %3 = alloca %struct.GUID*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct._DEMO1_ACCESS_KEY*, align 8
  %8 = alloca i64, align 8
  store i32 0, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i16** %2, metadata !3869, metadata !DIExpression()), !dbg !3870
  call void @llvm.dbg.declare(metadata %struct.GUID** %3, metadata !3871, metadata !DIExpression()), !dbg !3872
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3873, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.declare(metadata i64* %5, metadata !3875, metadata !DIExpression()), !dbg !3876
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3877, metadata !DIExpression()), !dbg !3878
  call void @llvm.dbg.declare(metadata %struct._DEMO1_ACCESS_KEY** %7, metadata !3879, metadata !DIExpression()), !dbg !3880
  %9 = call noalias i8* @malloc(i64 16) #15, !dbg !3881
  %10 = bitcast i8* %9 to %struct.DEMO1_ACCESS_KEY*, !dbg !3882
  %11 = bitcast %struct.DEMO1_ACCESS_KEY* %10 to %struct._DEMO1_ACCESS_KEY*, !dbg !3882
  store %struct._DEMO1_ACCESS_KEY* %11, %struct._DEMO1_ACCESS_KEY** %7, align 8, !dbg !3883
  %12 = load %struct._DEMO1_ACCESS_KEY*, %struct._DEMO1_ACCESS_KEY** %7, align 8, !dbg !3884
  %13 = bitcast %struct._DEMO1_ACCESS_KEY* %12 to i8*, !dbg !3884
  call void @klee_make_symbolic(i8* %13, i64 16, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13.50, i64 0, i64 0)), !dbg !3885
  %14 = load %struct._DEMO1_ACCESS_KEY*, %struct._DEMO1_ACCESS_KEY** %7, align 8, !dbg !3886
  %15 = getelementptr inbounds %struct._DEMO1_ACCESS_KEY, %struct._DEMO1_ACCESS_KEY* %14, i32 0, i32 0, !dbg !3887
  %16 = getelementptr inbounds [2 x i64], [2 x i64]* %15, i64 0, i64 1, !dbg !3886
  %17 = load i64, i64* %16, align 8, !dbg !3886
  %18 = icmp eq i64 %17, -2395670108176510803, !dbg !3888
  %19 = zext i1 %18 to i32, !dbg !3888
  %20 = sext i32 %19 to i64, !dbg !3886
  call void @klee_assume(i64 %20), !dbg !3889
  %21 = bitcast %struct.GUID** %3 to i8*, !dbg !3890
  call void @klee_make_symbolic(i8* %21, i64 8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.51, i64 0, i64 0)), !dbg !3891
  %22 = call noalias i8* @malloc(i64 264) #15, !dbg !3892
  %23 = bitcast i8* %22 to %struct.VARIABLE_MODULE_GLOBAL*, !dbg !3892
  store %struct.VARIABLE_MODULE_GLOBAL* %23, %struct.VARIABLE_MODULE_GLOBAL** @mineVariableModuleGlobal, align 8, !dbg !3893
  %24 = call i64 @mineInitNonVolatileVariableStore(), !dbg !3894
  store i16* bitcast ([11 x i32]* @.str.15.52 to i16*), i16** %2, align 8, !dbg !3895
  call void @llvm.dbg.declare(metadata i64* %8, metadata !3896, metadata !DIExpression()), !dbg !3897
  store i64 0, i64* %8, align 8, !dbg !3897
  %25 = load i16*, i16** %2, align 8, !dbg !3898
  %26 = load %struct.GUID*, %struct.GUID** %3, align 8, !dbg !3899
  %27 = load %struct._DEMO1_ACCESS_KEY*, %struct._DEMO1_ACCESS_KEY** %7, align 8, !dbg !3900
  %28 = bitcast i64* %8 to i8*, !dbg !3901
  %29 = call i64 @mineVariableServiceSetVariable(i16* %25, %struct.GUID* %26, i32 7, %struct._DEMO1_ACCESS_KEY* %27, i64 8, i8* %28), !dbg !3902
  ret i32 0, !dbg !3903
}

declare dso_local void @klee_assume(i64) #10

; Function Attrs: noinline nounwind uwtable
define dso_local void @klee_init_fds(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) #0 !dbg !3904 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca [7 x i8], align 1
  %15 = alloca %struct.stat64.15, align 8
  store i32 %0, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3907, metadata !DIExpression()), !dbg !3908
  store i32 %1, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !3909, metadata !DIExpression()), !dbg !3910
  store i32 %2, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !3911, metadata !DIExpression()), !dbg !3912
  store i32 %3, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !3913, metadata !DIExpression()), !dbg !3914
  store i32 %4, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !3915, metadata !DIExpression()), !dbg !3916
  store i32 %5, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !3917, metadata !DIExpression()), !dbg !3918
  call void @llvm.dbg.declare(metadata i32* %13, metadata !3919, metadata !DIExpression()), !dbg !3920
  call void @llvm.dbg.declare(metadata [7 x i8]* %14, metadata !3921, metadata !DIExpression()), !dbg !3925
  %16 = bitcast [7 x i8]* %14 to i8*, !dbg !3925
  %17 = call i8* @memcpy(i8* %16, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__const.klee_init_fds.name, i32 0, i32 0), i64 7), !dbg !3925
  call void @llvm.dbg.declare(metadata %struct.stat64.15* %15, metadata !3926, metadata !DIExpression()), !dbg !3927
  %18 = call i32 @stat64(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.55, i64 0, i64 0), %struct.stat64.15* %15) #15, !dbg !3928
  %19 = load i32, i32* %7, align 4, !dbg !3929
  store i32 %19, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 0), align 8, !dbg !3930
  %20 = load i32, i32* %7, align 4, !dbg !3931
  %21 = zext i32 %20 to i64, !dbg !3931
  %22 = mul i64 24, %21, !dbg !3932
  %23 = call noalias i8* @malloc(i64 %22) #15, !dbg !3933
  %24 = bitcast i8* %23 to %struct.exe_disk_file_t.16*, !dbg !3933
  store %struct.exe_disk_file_t.16* %24, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 4), align 8, !dbg !3934
  %25 = load i32, i32* %7, align 4, !dbg !3935
  %26 = icmp eq i32 %25, 0, !dbg !3935
  %27 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 4), align 8
  %28 = icmp ne %struct.exe_disk_file_t.16* %27, null
  %or.cond = or i1 %26, %28, !dbg !3937
  br i1 %or.cond, label %30, label %29, !dbg !3937

29:                                               ; preds = %6
  call void @klee_report_error(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1.56, i64 0, i64 0), i32 117, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2.57, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3.58, i64 0, i64 0)) #16, !dbg !3938
  unreachable, !dbg !3938

30:                                               ; preds = %6
  store i32 0, i32* %13, align 4, !dbg !3939
  br label %31, !dbg !3941

31:                                               ; preds = %35, %30
  %32 = load i32, i32* %13, align 4, !dbg !3942
  %33 = load i32, i32* %7, align 4, !dbg !3944
  %34 = icmp ult i32 %32, %33, !dbg !3945
  br i1 %34, label %35, label %48, !dbg !3946

35:                                               ; preds = %31
  %36 = load i32, i32* %13, align 4, !dbg !3947
  %37 = add i32 65, %36, !dbg !3949
  %38 = trunc i32 %37 to i8, !dbg !3950
  %39 = getelementptr inbounds [7 x i8], [7 x i8]* %14, i64 0, i64 0, !dbg !3951
  store i8 %38, i8* %39, align 1, !dbg !3952
  %40 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 4), align 8, !dbg !3953
  %41 = load i32, i32* %13, align 4, !dbg !3954
  %42 = zext i32 %41 to i64, !dbg !3955
  %43 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %40, i64 %42, !dbg !3955
  %44 = load i32, i32* %8, align 4, !dbg !3956
  %45 = getelementptr inbounds [7 x i8], [7 x i8]* %14, i64 0, i64 0, !dbg !3957
  call void @__create_new_dfile(%struct.exe_disk_file_t.16* %43, i32 %44, i8* %45, %struct.stat64.15* %15), !dbg !3958
  %46 = load i32, i32* %13, align 4, !dbg !3959
  %47 = add i32 %46, 1, !dbg !3959
  store i32 %47, i32* %13, align 4, !dbg !3959
  br label %31, !dbg !3960, !llvm.loop !3961

48:                                               ; preds = %31
  %49 = load i32, i32* %9, align 4, !dbg !3963
  %50 = icmp ne i32 %49, 0, !dbg !3963
  br i1 %50, label %51, label %61, !dbg !3965

51:                                               ; preds = %48
  %52 = call noalias i8* @malloc(i64 24) #15, !dbg !3966
  %53 = bitcast i8* %52 to %struct.exe_disk_file_t.16*, !dbg !3966
  store %struct.exe_disk_file_t.16* %53, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 1), align 8, !dbg !3968
  %54 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 1), align 8, !dbg !3969
  %55 = icmp ne %struct.exe_disk_file_t.16* %54, null, !dbg !3971
  br i1 %55, label %57, label %56, !dbg !3972

56:                                               ; preds = %51
  call void @klee_report_error(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1.56, i64 0, i64 0), i32 128, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2.57, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3.58, i64 0, i64 0)) #16, !dbg !3973
  unreachable, !dbg !3973

57:                                               ; preds = %51
  %58 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 1), align 8, !dbg !3974
  %59 = load i32, i32* %9, align 4, !dbg !3975
  call void @__create_new_dfile(%struct.exe_disk_file_t.16* %58, i32 %59, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4.59, i64 0, i64 0), %struct.stat64.15* %15), !dbg !3976
  %60 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 1), align 8, !dbg !3977
  store %struct.exe_disk_file_t.16* %60, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32 }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 0, i64 0, i32 3), align 8, !dbg !3978
  br label %62, !dbg !3979

61:                                               ; preds = %48
  store %struct.exe_disk_file_t.16* null, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 1), align 8, !dbg !3980
  br label %62

62:                                               ; preds = %61, %57
  %63 = load i32, i32* %12, align 4, !dbg !3981
  store i32 %63, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !3982
  %64 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !3983
  %65 = icmp ne i32 %64, 0, !dbg !3985
  br i1 %65, label %66, label %99, !dbg !3986

66:                                               ; preds = %62
  %67 = call noalias i8* @malloc(i64 4) #15, !dbg !3987
  %68 = bitcast i8* %67 to i32*, !dbg !3987
  store i32* %68, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 6), align 8, !dbg !3989
  %69 = call noalias i8* @malloc(i64 4) #15, !dbg !3990
  %70 = bitcast i8* %69 to i32*, !dbg !3990
  store i32* %70, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 7), align 8, !dbg !3991
  %71 = call noalias i8* @malloc(i64 4) #15, !dbg !3992
  %72 = bitcast i8* %71 to i32*, !dbg !3992
  store i32* %72, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 8), align 8, !dbg !3993
  %73 = call noalias i8* @malloc(i64 4) #15, !dbg !3994
  %74 = bitcast i8* %73 to i32*, !dbg !3994
  store i32* %74, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 9), align 8, !dbg !3995
  %75 = call noalias i8* @malloc(i64 4) #15, !dbg !3996
  %76 = bitcast i8* %75 to i32*, !dbg !3996
  store i32* %76, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 10), align 8, !dbg !3997
  %77 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 6), align 8, !dbg !3998
  %78 = icmp ne i32* %77, null, !dbg !4000
  %79 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 7), align 8
  %80 = icmp ne i32* %79, null
  %or.cond3 = and i1 %78, %80, !dbg !4001
  %81 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 8), align 8
  %82 = icmp ne i32* %81, null
  %or.cond5 = and i1 %or.cond3, %82, !dbg !4001
  %83 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 9), align 8
  %84 = icmp ne i32* %83, null
  %or.cond7 = and i1 %or.cond5, %84, !dbg !4001
  %85 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 10), align 8
  %86 = icmp ne i32* %85, null
  %or.cond9 = and i1 %or.cond7, %86, !dbg !4001
  br i1 %or.cond9, label %88, label %87, !dbg !4001

87:                                               ; preds = %66
  call void @klee_report_error(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1.56, i64 0, i64 0), i32 143, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2.57, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3.58, i64 0, i64 0)) #16, !dbg !4002
  unreachable, !dbg !4002

88:                                               ; preds = %66
  %89 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 6), align 8, !dbg !4003
  %90 = bitcast i32* %89 to i8*, !dbg !4004
  call void @klee_make_symbolic(i8* %90, i64 4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.60, i64 0, i64 0)), !dbg !4005
  %91 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 7), align 8, !dbg !4006
  %92 = bitcast i32* %91 to i8*, !dbg !4007
  call void @klee_make_symbolic(i8* %92, i64 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6.61, i64 0, i64 0)), !dbg !4008
  %93 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 8), align 8, !dbg !4009
  %94 = bitcast i32* %93 to i8*, !dbg !4010
  call void @klee_make_symbolic(i8* %94, i64 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7.62, i64 0, i64 0)), !dbg !4011
  %95 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 9), align 8, !dbg !4012
  %96 = bitcast i32* %95 to i8*, !dbg !4013
  call void @klee_make_symbolic(i8* %96, i64 4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8.63, i64 0, i64 0)), !dbg !4014
  %97 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 10), align 8, !dbg !4015
  %98 = bitcast i32* %97 to i8*, !dbg !4016
  call void @klee_make_symbolic(i8* %98, i64 4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9.64, i64 0, i64 0)), !dbg !4017
  br label %99, !dbg !4018

99:                                               ; preds = %88, %62
  %100 = load i32, i32* %10, align 4, !dbg !4019
  %101 = icmp ne i32 %100, 0, !dbg !4019
  br i1 %101, label %102, label %111, !dbg !4021

102:                                              ; preds = %99
  %103 = call noalias i8* @malloc(i64 24) #15, !dbg !4022
  %104 = bitcast i8* %103 to %struct.exe_disk_file_t.16*, !dbg !4022
  store %struct.exe_disk_file_t.16* %104, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 2), align 8, !dbg !4024
  %105 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 2), align 8, !dbg !4025
  %106 = icmp ne %struct.exe_disk_file_t.16* %105, null, !dbg !4027
  br i1 %106, label %108, label %107, !dbg !4028

107:                                              ; preds = %102
  call void @klee_report_error(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1.56, i64 0, i64 0), i32 156, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2.57, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3.58, i64 0, i64 0)) #16, !dbg !4029
  unreachable, !dbg !4029

108:                                              ; preds = %102
  %109 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 2), align 8, !dbg !4030
  call void @__create_new_dfile(%struct.exe_disk_file_t.16* %109, i32 1024, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10.65, i64 0, i64 0), %struct.stat64.15* %15), !dbg !4031
  %110 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 2), align 8, !dbg !4032
  store %struct.exe_disk_file_t.16* %110, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32 }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 0, i64 1, i32 3), align 8, !dbg !4033
  store i32 0, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 3), align 8, !dbg !4034
  br label %112, !dbg !4035

111:                                              ; preds = %99
  store %struct.exe_disk_file_t.16* null, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 2), align 8, !dbg !4036
  br label %112

112:                                              ; preds = %111, %108
  %113 = load i32, i32* %11, align 4, !dbg !4037
  store i32 %113, i32* getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32 }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 2), align 4, !dbg !4038
  ret void, !dbg !4039
}

; Function Attrs: noinline nounwind uwtable
define internal void @__create_new_dfile(%struct.exe_disk_file_t.16* %0, i32 %1, i8* %2, %struct.stat64.15* %3) #0 !dbg !4040 {
  %5 = alloca %struct.exe_disk_file_t.16*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca %struct.stat64.15*, align 8
  %9 = alloca %struct.stat64.15*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca [64 x i8], align 16
  store %struct.exe_disk_file_t.16* %0, %struct.exe_disk_file_t.16** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %5, metadata !4043, metadata !DIExpression()), !dbg !4044
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4045, metadata !DIExpression()), !dbg !4046
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4047, metadata !DIExpression()), !dbg !4048
  store %struct.stat64.15* %3, %struct.stat64.15** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.stat64.15** %8, metadata !4049, metadata !DIExpression()), !dbg !4050
  call void @llvm.dbg.declare(metadata %struct.stat64.15** %9, metadata !4051, metadata !DIExpression()), !dbg !4052
  %12 = call noalias i8* @malloc(i64 144) #15, !dbg !4053
  %13 = bitcast i8* %12 to %struct.stat64.15*, !dbg !4053
  store %struct.stat64.15* %13, %struct.stat64.15** %9, align 8, !dbg !4052
  %14 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4054
  %15 = icmp ne %struct.stat64.15* %14, null, !dbg !4054
  br i1 %15, label %17, label %16, !dbg !4056

16:                                               ; preds = %4
  call void @klee_report_error(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1.56, i64 0, i64 0), i32 46, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2.57, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3.58, i64 0, i64 0)) #16, !dbg !4057
  unreachable, !dbg !4057

17:                                               ; preds = %4
  call void @llvm.dbg.declare(metadata i8** %10, metadata !4058, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.declare(metadata [64 x i8]* %11, metadata !4060, metadata !DIExpression()), !dbg !4064
  %18 = load i8*, i8** %7, align 8, !dbg !4065
  store i8* %18, i8** %10, align 8, !dbg !4067
  br label %19, !dbg !4068

19:                                               ; preds = %23, %17
  %20 = load i8*, i8** %10, align 8, !dbg !4069
  %21 = load i8, i8* %20, align 1, !dbg !4071
  %22 = icmp ne i8 %21, 0, !dbg !4072
  br i1 %22, label %23, label %34, !dbg !4072

23:                                               ; preds = %19
  %24 = load i8*, i8** %10, align 8, !dbg !4073
  %25 = load i8, i8* %24, align 1, !dbg !4074
  %26 = load i8*, i8** %10, align 8, !dbg !4075
  %27 = load i8*, i8** %7, align 8, !dbg !4076
  %28 = ptrtoint i8* %26 to i64, !dbg !4077
  %29 = ptrtoint i8* %27 to i64, !dbg !4077
  %30 = sub i64 %28, %29, !dbg !4077
  %31 = getelementptr inbounds [64 x i8], [64 x i8]* %11, i64 0, i64 %30, !dbg !4078
  store i8 %25, i8* %31, align 1, !dbg !4079
  %32 = load i8*, i8** %10, align 8, !dbg !4080
  %33 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !4080
  store i8* %33, i8** %10, align 8, !dbg !4080
  br label %19, !dbg !4081, !llvm.loop !4082

34:                                               ; preds = %19
  %35 = load i8*, i8** %10, align 8, !dbg !4084
  %36 = load i8*, i8** %7, align 8, !dbg !4085
  %37 = ptrtoint i8* %35 to i64, !dbg !4086
  %38 = ptrtoint i8* %36 to i64, !dbg !4086
  %39 = sub i64 %37, %38, !dbg !4086
  %40 = getelementptr inbounds [64 x i8], [64 x i8]* %11, i64 0, i64 %39, !dbg !4087
  %41 = call i8* @memcpy(i8* %40, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11.66, i64 0, i64 0), i64 6), !dbg !4088
  %42 = load i32, i32* %6, align 4, !dbg !4089
  %43 = icmp ne i32 %42, 0, !dbg !4089
  br i1 %43, label %45, label %44, !dbg !4092

44:                                               ; preds = %34
  call void @__assert_fail(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12.67, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1.56, i64 0, i64 0), i32 54, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__.__create_new_dfile, i64 0, i64 0)) #17, !dbg !4089
  unreachable, !dbg !4089

45:                                               ; preds = %34
  %46 = load i32, i32* %6, align 4, !dbg !4093
  %47 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %5, align 8, !dbg !4094
  %48 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %47, i32 0, i32 0, !dbg !4095
  store i32 %46, i32* %48, align 8, !dbg !4096
  %49 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %5, align 8, !dbg !4097
  %50 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %49, i32 0, i32 0, !dbg !4098
  %51 = load i32, i32* %50, align 8, !dbg !4098
  %52 = zext i32 %51 to i64, !dbg !4097
  %53 = call noalias i8* @malloc(i64 %52) #15, !dbg !4099
  %54 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %5, align 8, !dbg !4100
  %55 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %54, i32 0, i32 1, !dbg !4101
  store i8* %53, i8** %55, align 8, !dbg !4102
  %56 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %5, align 8, !dbg !4103
  %57 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %56, i32 0, i32 1, !dbg !4105
  %58 = load i8*, i8** %57, align 8, !dbg !4105
  %59 = icmp ne i8* %58, null, !dbg !4103
  br i1 %59, label %61, label %60, !dbg !4106

60:                                               ; preds = %45
  call void @klee_report_error(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1.56, i64 0, i64 0), i32 59, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2.57, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3.58, i64 0, i64 0)) #16, !dbg !4107
  unreachable, !dbg !4107

61:                                               ; preds = %45
  %62 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %5, align 8, !dbg !4108
  %63 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %62, i32 0, i32 1, !dbg !4109
  %64 = load i8*, i8** %63, align 8, !dbg !4109
  %65 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %5, align 8, !dbg !4110
  %66 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %65, i32 0, i32 0, !dbg !4111
  %67 = load i32, i32* %66, align 8, !dbg !4111
  %68 = zext i32 %67 to i64, !dbg !4110
  %69 = load i8*, i8** %7, align 8, !dbg !4112
  call void @klee_make_symbolic(i8* %64, i64 %68, i8* %69), !dbg !4113
  %70 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4114
  %71 = bitcast %struct.stat64.15* %70 to i8*, !dbg !4114
  %72 = getelementptr inbounds [64 x i8], [64 x i8]* %11, i64 0, i64 0, !dbg !4115
  call void @klee_make_symbolic(i8* %71, i64 144, i8* %72), !dbg !4116
  %73 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4117
  %74 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %73, i32 0, i32 1, !dbg !4119
  %75 = load i64, i64* %74, align 8, !dbg !4119
  %76 = call i32 @klee_is_symbolic(i64 %75), !dbg !4120
  %77 = icmp ne i32 %76, 0, !dbg !4120
  br i1 %77, label %90, label %78, !dbg !4121

78:                                               ; preds = %61
  %79 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4122
  %80 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %79, i32 0, i32 1, !dbg !4123
  %81 = load i64, i64* %80, align 8, !dbg !4123
  %82 = and i64 %81, 2147483647, !dbg !4124
  %83 = icmp eq i64 %82, 0, !dbg !4125
  br i1 %83, label %84, label %90, !dbg !4126

84:                                               ; preds = %78
  %85 = load %struct.stat64.15*, %struct.stat64.15** %8, align 8, !dbg !4127
  %86 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %85, i32 0, i32 1, !dbg !4128
  %87 = load i64, i64* %86, align 8, !dbg !4128
  %88 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4129
  %89 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %88, i32 0, i32 1, !dbg !4130
  store i64 %87, i64* %89, align 8, !dbg !4131
  br label %90, !dbg !4129

90:                                               ; preds = %84, %78, %61
  %91 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4132
  %92 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %91, i32 0, i32 1, !dbg !4133
  %93 = load i64, i64* %92, align 8, !dbg !4133
  %94 = and i64 %93, 2147483647, !dbg !4134
  %95 = icmp ne i64 %94, 0, !dbg !4135
  %96 = zext i1 %95 to i32, !dbg !4135
  %97 = sext i32 %96 to i64, !dbg !4136
  call void @klee_assume(i64 %97), !dbg !4137
  %98 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4138
  %99 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %98, i32 0, i32 9, !dbg !4139
  %100 = load i64, i64* %99, align 8, !dbg !4139
  %101 = and i64 %100, -65536, !dbg !4140
  %102 = icmp eq i64 %101, 0, !dbg !4141
  %103 = zext i1 %102 to i32, !dbg !4141
  %104 = sext i32 %103 to i64, !dbg !4142
  call void @klee_assume(i64 %104), !dbg !4143
  %105 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4144
  %106 = bitcast %struct.stat64.15* %105 to i8*, !dbg !4144
  %107 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4145
  %108 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %107, i32 0, i32 3, !dbg !4146
  %109 = load i32, i32* %108, align 8, !dbg !4146
  %110 = and i32 %109, -61952, !dbg !4147
  %111 = icmp ne i32 %110, 0, !dbg !4148
  %112 = xor i1 %111, true, !dbg !4148
  %113 = zext i1 %112 to i32, !dbg !4148
  %114 = sext i32 %113 to i64, !dbg !4148
  call void @klee_prefer_cex(i8* %106, i64 %114), !dbg !4149
  %115 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4150
  %116 = bitcast %struct.stat64.15* %115 to i8*, !dbg !4150
  %117 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4151
  %118 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %117, i32 0, i32 0, !dbg !4152
  %119 = load i64, i64* %118, align 8, !dbg !4152
  %120 = load %struct.stat64.15*, %struct.stat64.15** %8, align 8, !dbg !4153
  %121 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %120, i32 0, i32 0, !dbg !4154
  %122 = load i64, i64* %121, align 8, !dbg !4154
  %123 = icmp eq i64 %119, %122, !dbg !4155
  %124 = zext i1 %123 to i32, !dbg !4155
  %125 = sext i32 %124 to i64, !dbg !4151
  call void @klee_prefer_cex(i8* %116, i64 %125), !dbg !4156
  %126 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4157
  %127 = bitcast %struct.stat64.15* %126 to i8*, !dbg !4157
  %128 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4158
  %129 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %128, i32 0, i32 7, !dbg !4159
  %130 = load i64, i64* %129, align 8, !dbg !4159
  %131 = load %struct.stat64.15*, %struct.stat64.15** %8, align 8, !dbg !4160
  %132 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %131, i32 0, i32 7, !dbg !4161
  %133 = load i64, i64* %132, align 8, !dbg !4161
  %134 = icmp eq i64 %130, %133, !dbg !4162
  %135 = zext i1 %134 to i32, !dbg !4162
  %136 = sext i32 %135 to i64, !dbg !4158
  call void @klee_prefer_cex(i8* %127, i64 %136), !dbg !4163
  %137 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4164
  %138 = bitcast %struct.stat64.15* %137 to i8*, !dbg !4164
  %139 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4165
  %140 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %139, i32 0, i32 3, !dbg !4166
  %141 = load i32, i32* %140, align 8, !dbg !4166
  %142 = and i32 %141, 448, !dbg !4167
  %143 = icmp eq i32 %142, 384, !dbg !4168
  %144 = zext i1 %143 to i32, !dbg !4168
  %145 = sext i32 %144 to i64, !dbg !4169
  call void @klee_prefer_cex(i8* %138, i64 %145), !dbg !4170
  %146 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4171
  %147 = bitcast %struct.stat64.15* %146 to i8*, !dbg !4171
  %148 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4172
  %149 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %148, i32 0, i32 3, !dbg !4173
  %150 = load i32, i32* %149, align 8, !dbg !4173
  %151 = and i32 %150, 56, !dbg !4174
  %152 = icmp eq i32 %151, 32, !dbg !4175
  %153 = zext i1 %152 to i32, !dbg !4175
  %154 = sext i32 %153 to i64, !dbg !4176
  call void @klee_prefer_cex(i8* %147, i64 %154), !dbg !4177
  %155 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4178
  %156 = bitcast %struct.stat64.15* %155 to i8*, !dbg !4178
  %157 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4179
  %158 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %157, i32 0, i32 3, !dbg !4180
  %159 = load i32, i32* %158, align 8, !dbg !4180
  %160 = and i32 %159, 7, !dbg !4181
  %161 = icmp eq i32 %160, 4, !dbg !4182
  %162 = zext i1 %161 to i32, !dbg !4182
  %163 = sext i32 %162 to i64, !dbg !4183
  call void @klee_prefer_cex(i8* %156, i64 %163), !dbg !4184
  %164 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4185
  %165 = bitcast %struct.stat64.15* %164 to i8*, !dbg !4185
  %166 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4186
  %167 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %166, i32 0, i32 3, !dbg !4187
  %168 = load i32, i32* %167, align 8, !dbg !4187
  %169 = and i32 %168, 61440, !dbg !4188
  %170 = icmp eq i32 %169, 32768, !dbg !4189
  %171 = zext i1 %170 to i32, !dbg !4189
  %172 = sext i32 %171 to i64, !dbg !4190
  call void @klee_prefer_cex(i8* %165, i64 %172), !dbg !4191
  %173 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4192
  %174 = bitcast %struct.stat64.15* %173 to i8*, !dbg !4192
  %175 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4193
  %176 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %175, i32 0, i32 2, !dbg !4194
  %177 = load i64, i64* %176, align 8, !dbg !4194
  %178 = icmp eq i64 %177, 1, !dbg !4195
  %179 = zext i1 %178 to i32, !dbg !4195
  %180 = sext i32 %179 to i64, !dbg !4193
  call void @klee_prefer_cex(i8* %174, i64 %180), !dbg !4196
  %181 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4197
  %182 = bitcast %struct.stat64.15* %181 to i8*, !dbg !4197
  %183 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4198
  %184 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %183, i32 0, i32 4, !dbg !4199
  %185 = load i32, i32* %184, align 4, !dbg !4199
  %186 = load %struct.stat64.15*, %struct.stat64.15** %8, align 8, !dbg !4200
  %187 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %186, i32 0, i32 4, !dbg !4201
  %188 = load i32, i32* %187, align 4, !dbg !4201
  %189 = icmp eq i32 %185, %188, !dbg !4202
  %190 = zext i1 %189 to i32, !dbg !4202
  %191 = sext i32 %190 to i64, !dbg !4198
  call void @klee_prefer_cex(i8* %182, i64 %191), !dbg !4203
  %192 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4204
  %193 = bitcast %struct.stat64.15* %192 to i8*, !dbg !4204
  %194 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4205
  %195 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %194, i32 0, i32 5, !dbg !4206
  %196 = load i32, i32* %195, align 8, !dbg !4206
  %197 = load %struct.stat64.15*, %struct.stat64.15** %8, align 8, !dbg !4207
  %198 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %197, i32 0, i32 5, !dbg !4208
  %199 = load i32, i32* %198, align 8, !dbg !4208
  %200 = icmp eq i32 %196, %199, !dbg !4209
  %201 = zext i1 %200 to i32, !dbg !4209
  %202 = sext i32 %201 to i64, !dbg !4205
  call void @klee_prefer_cex(i8* %193, i64 %202), !dbg !4210
  %203 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4211
  %204 = bitcast %struct.stat64.15* %203 to i8*, !dbg !4211
  %205 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4212
  %206 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %205, i32 0, i32 9, !dbg !4213
  %207 = load i64, i64* %206, align 8, !dbg !4213
  %208 = icmp eq i64 %207, 4096, !dbg !4214
  %209 = zext i1 %208 to i32, !dbg !4214
  %210 = sext i32 %209 to i64, !dbg !4212
  call void @klee_prefer_cex(i8* %204, i64 %210), !dbg !4215
  %211 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4216
  %212 = bitcast %struct.stat64.15* %211 to i8*, !dbg !4216
  %213 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4217
  %214 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %213, i32 0, i32 11, !dbg !4218
  %215 = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %214, i32 0, i32 0, !dbg !4218
  %216 = load i64, i64* %215, align 8, !dbg !4218
  %217 = load %struct.stat64.15*, %struct.stat64.15** %8, align 8, !dbg !4219
  %218 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %217, i32 0, i32 11, !dbg !4220
  %219 = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %218, i32 0, i32 0, !dbg !4220
  %220 = load i64, i64* %219, align 8, !dbg !4220
  %221 = icmp eq i64 %216, %220, !dbg !4221
  %222 = zext i1 %221 to i32, !dbg !4221
  %223 = sext i32 %222 to i64, !dbg !4217
  call void @klee_prefer_cex(i8* %212, i64 %223), !dbg !4222
  %224 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4223
  %225 = bitcast %struct.stat64.15* %224 to i8*, !dbg !4223
  %226 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4224
  %227 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %226, i32 0, i32 12, !dbg !4225
  %228 = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %227, i32 0, i32 0, !dbg !4225
  %229 = load i64, i64* %228, align 8, !dbg !4225
  %230 = load %struct.stat64.15*, %struct.stat64.15** %8, align 8, !dbg !4226
  %231 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %230, i32 0, i32 12, !dbg !4227
  %232 = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %231, i32 0, i32 0, !dbg !4227
  %233 = load i64, i64* %232, align 8, !dbg !4227
  %234 = icmp eq i64 %229, %233, !dbg !4228
  %235 = zext i1 %234 to i32, !dbg !4228
  %236 = sext i32 %235 to i64, !dbg !4224
  call void @klee_prefer_cex(i8* %225, i64 %236), !dbg !4229
  %237 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4230
  %238 = bitcast %struct.stat64.15* %237 to i8*, !dbg !4230
  %239 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4231
  %240 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %239, i32 0, i32 13, !dbg !4232
  %241 = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %240, i32 0, i32 0, !dbg !4232
  %242 = load i64, i64* %241, align 8, !dbg !4232
  %243 = load %struct.stat64.15*, %struct.stat64.15** %8, align 8, !dbg !4233
  %244 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %243, i32 0, i32 13, !dbg !4234
  %245 = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %244, i32 0, i32 0, !dbg !4234
  %246 = load i64, i64* %245, align 8, !dbg !4234
  %247 = icmp eq i64 %242, %246, !dbg !4235
  %248 = zext i1 %247 to i32, !dbg !4235
  %249 = sext i32 %248 to i64, !dbg !4231
  call void @klee_prefer_cex(i8* %238, i64 %249), !dbg !4236
  %250 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %5, align 8, !dbg !4237
  %251 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %250, i32 0, i32 0, !dbg !4238
  %252 = load i32, i32* %251, align 8, !dbg !4238
  %253 = zext i32 %252 to i64, !dbg !4237
  %254 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4239
  %255 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %254, i32 0, i32 8, !dbg !4240
  store i64 %253, i64* %255, align 8, !dbg !4241
  %256 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4242
  %257 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %256, i32 0, i32 10, !dbg !4243
  store i64 8, i64* %257, align 8, !dbg !4244
  %258 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !4245
  %259 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %5, align 8, !dbg !4246
  %260 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %259, i32 0, i32 2, !dbg !4247
  store %struct.stat64.15* %258, %struct.stat64.15** %260, align 8, !dbg !4248
  ret void, !dbg !4249
}

declare dso_local i32 @klee_is_symbolic(i64) #4

declare dso_local void @klee_prefer_cex(i8*, i64) #4

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @klee_range(i32 %0, i32 %1, i8* %2) #0 !dbg !4250 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4254, metadata !DIExpression()), !dbg !4255
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4256, metadata !DIExpression()), !dbg !4257
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4258, metadata !DIExpression()), !dbg !4259
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4260, metadata !DIExpression()), !dbg !4261
  %9 = load i32, i32* %5, align 4, !dbg !4262
  %10 = load i32, i32* %6, align 4, !dbg !4264
  %11 = icmp sge i32 %9, %10, !dbg !4265
  br i1 %11, label %12, label %13, !dbg !4266

12:                                               ; preds = %3
  call void @klee_report_error(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.70, i64 0, i64 0), i32 18, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.71, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.72, i64 0, i64 0)) #16, !dbg !4267
  unreachable, !dbg !4267

13:                                               ; preds = %3
  %14 = load i32, i32* %5, align 4, !dbg !4268
  %15 = add nsw i32 %14, 1, !dbg !4270
  %16 = load i32, i32* %6, align 4, !dbg !4271
  %17 = icmp eq i32 %15, %16, !dbg !4272
  br i1 %17, label %18, label %20, !dbg !4273

18:                                               ; preds = %13
  %19 = load i32, i32* %5, align 4, !dbg !4274
  store i32 %19, i32* %4, align 4, !dbg !4276
  br label %44, !dbg !4276

20:                                               ; preds = %13
  %21 = bitcast i32* %8 to i8*, !dbg !4277
  %22 = load i8*, i8** %7, align 8, !dbg !4279
  call void @klee_make_symbolic(i8* %21, i64 4, i8* %22), !dbg !4280
  %23 = load i32, i32* %5, align 4, !dbg !4281
  %24 = icmp eq i32 %23, 0, !dbg !4283
  br i1 %24, label %25, label %31, !dbg !4284

25:                                               ; preds = %20
  %26 = load i32, i32* %8, align 4, !dbg !4285
  %27 = load i32, i32* %6, align 4, !dbg !4287
  %28 = icmp ult i32 %26, %27, !dbg !4288
  %29 = zext i1 %28 to i32, !dbg !4288
  %30 = sext i32 %29 to i64, !dbg !4289
  call void @klee_assume(i64 %30), !dbg !4290
  br label %42, !dbg !4291

31:                                               ; preds = %20
  %32 = load i32, i32* %5, align 4, !dbg !4292
  %33 = load i32, i32* %8, align 4, !dbg !4294
  %34 = icmp sle i32 %32, %33, !dbg !4295
  %35 = zext i1 %34 to i32, !dbg !4295
  %36 = sext i32 %35 to i64, !dbg !4292
  call void @klee_assume(i64 %36), !dbg !4296
  %37 = load i32, i32* %8, align 4, !dbg !4297
  %38 = load i32, i32* %6, align 4, !dbg !4298
  %39 = icmp slt i32 %37, %38, !dbg !4299
  %40 = zext i1 %39 to i32, !dbg !4299
  %41 = sext i32 %40 to i64, !dbg !4297
  call void @klee_assume(i64 %41), !dbg !4300
  br label %42

42:                                               ; preds = %31, %25
  %43 = load i32, i32* %8, align 4, !dbg !4301
  store i32 %43, i32* %4, align 4, !dbg !4302
  br label %44, !dbg !4302

44:                                               ; preds = %42, %18
  %45 = load i32, i32* %4, align 4, !dbg !4303
  ret i32 %45, !dbg !4303
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @open64(i8* nonnull %0, i32 %1, ...) #0 !dbg !4304 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca [1 x %struct.__va_list_tag.13], align 16
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4308, metadata !DIExpression()), !dbg !4309
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4310, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4312, metadata !DIExpression()), !dbg !4313
  store i32 0, i32* %5, align 4, !dbg !4313
  %7 = load i32, i32* %4, align 4, !dbg !4314
  %8 = and i32 %7, 64, !dbg !4316
  %9 = icmp ne i32 %8, 0, !dbg !4316
  br i1 %9, label %10, label %33, !dbg !4317

10:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag.13]* %6, metadata !4318, metadata !DIExpression()), !dbg !4334
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag.13], [1 x %struct.__va_list_tag.13]* %6, i64 0, i64 0, !dbg !4335
  %12 = bitcast %struct.__va_list_tag.13* %11 to i8*, !dbg !4335
  call void @llvm.va_start(i8* %12), !dbg !4335
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag.13], [1 x %struct.__va_list_tag.13]* %6, i64 0, i64 0, !dbg !4336
  %14 = getelementptr inbounds %struct.__va_list_tag.13, %struct.__va_list_tag.13* %13, i32 0, i32 0, !dbg !4336
  %15 = load i32, i32* %14, align 16, !dbg !4336
  %16 = icmp ule i32 %15, 40, !dbg !4336
  br i1 %16, label %17, label %23, !dbg !4336

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.__va_list_tag.13, %struct.__va_list_tag.13* %13, i32 0, i32 3, !dbg !4336
  %19 = load i8*, i8** %18, align 16, !dbg !4336
  %20 = getelementptr i8, i8* %19, i32 %15, !dbg !4336
  %21 = bitcast i8* %20 to i32*, !dbg !4336
  %22 = add i32 %15, 8, !dbg !4336
  store i32 %22, i32* %14, align 16, !dbg !4336
  br label %28, !dbg !4336

23:                                               ; preds = %10
  %24 = getelementptr inbounds %struct.__va_list_tag.13, %struct.__va_list_tag.13* %13, i32 0, i32 2, !dbg !4336
  %25 = load i8*, i8** %24, align 8, !dbg !4336
  %26 = bitcast i8* %25 to i32*, !dbg !4336
  %27 = getelementptr i8, i8* %25, i32 8, !dbg !4336
  store i8* %27, i8** %24, align 8, !dbg !4336
  br label %28, !dbg !4336

28:                                               ; preds = %23, %17
  %29 = phi i32* [ %21, %17 ], [ %26, %23 ], !dbg !4336
  %30 = load i32, i32* %29, align 4, !dbg !4336
  store i32 %30, i32* %5, align 4, !dbg !4337
  %31 = getelementptr inbounds [1 x %struct.__va_list_tag.13], [1 x %struct.__va_list_tag.13]* %6, i64 0, i64 0, !dbg !4338
  %32 = bitcast %struct.__va_list_tag.13* %31 to i8*, !dbg !4338
  call void @llvm.va_end(i8* %32), !dbg !4338
  br label %33, !dbg !4339

33:                                               ; preds = %28, %2
  %34 = load i8*, i8** %3, align 8, !dbg !4340
  %35 = load i32, i32* %4, align 4, !dbg !4341
  %36 = load i32, i32* %5, align 4, !dbg !4342
  %37 = call i32 @__fd_open(i8* %34, i32 %35, i32 %36), !dbg !4343
  ret i32 %37, !dbg !4344
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #12

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #12

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @openat64(i32 %0, i8* nonnull %1, i32 %2, ...) #0 !dbg !4345 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [1 x %struct.__va_list_tag.13], align 16
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4348, metadata !DIExpression()), !dbg !4349
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4350, metadata !DIExpression()), !dbg !4351
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4352, metadata !DIExpression()), !dbg !4353
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4354, metadata !DIExpression()), !dbg !4355
  store i32 0, i32* %7, align 4, !dbg !4355
  %9 = load i32, i32* %6, align 4, !dbg !4356
  %10 = and i32 %9, 64, !dbg !4358
  %11 = icmp ne i32 %10, 0, !dbg !4358
  br i1 %11, label %12, label %35, !dbg !4359

12:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag.13]* %8, metadata !4360, metadata !DIExpression()), !dbg !4362
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag.13], [1 x %struct.__va_list_tag.13]* %8, i64 0, i64 0, !dbg !4363
  %14 = bitcast %struct.__va_list_tag.13* %13 to i8*, !dbg !4363
  call void @llvm.va_start(i8* %14), !dbg !4363
  %15 = getelementptr inbounds [1 x %struct.__va_list_tag.13], [1 x %struct.__va_list_tag.13]* %8, i64 0, i64 0, !dbg !4364
  %16 = getelementptr inbounds %struct.__va_list_tag.13, %struct.__va_list_tag.13* %15, i32 0, i32 0, !dbg !4364
  %17 = load i32, i32* %16, align 16, !dbg !4364
  %18 = icmp ule i32 %17, 40, !dbg !4364
  br i1 %18, label %19, label %25, !dbg !4364

19:                                               ; preds = %12
  %20 = getelementptr inbounds %struct.__va_list_tag.13, %struct.__va_list_tag.13* %15, i32 0, i32 3, !dbg !4364
  %21 = load i8*, i8** %20, align 16, !dbg !4364
  %22 = getelementptr i8, i8* %21, i32 %17, !dbg !4364
  %23 = bitcast i8* %22 to i32*, !dbg !4364
  %24 = add i32 %17, 8, !dbg !4364
  store i32 %24, i32* %16, align 16, !dbg !4364
  br label %30, !dbg !4364

25:                                               ; preds = %12
  %26 = getelementptr inbounds %struct.__va_list_tag.13, %struct.__va_list_tag.13* %15, i32 0, i32 2, !dbg !4364
  %27 = load i8*, i8** %26, align 8, !dbg !4364
  %28 = bitcast i8* %27 to i32*, !dbg !4364
  %29 = getelementptr i8, i8* %27, i32 8, !dbg !4364
  store i8* %29, i8** %26, align 8, !dbg !4364
  br label %30, !dbg !4364

30:                                               ; preds = %25, %19
  %31 = phi i32* [ %23, %19 ], [ %28, %25 ], !dbg !4364
  %32 = load i32, i32* %31, align 4, !dbg !4364
  store i32 %32, i32* %7, align 4, !dbg !4365
  %33 = getelementptr inbounds [1 x %struct.__va_list_tag.13], [1 x %struct.__va_list_tag.13]* %8, i64 0, i64 0, !dbg !4366
  %34 = bitcast %struct.__va_list_tag.13* %33 to i8*, !dbg !4366
  call void @llvm.va_end(i8* %34), !dbg !4366
  br label %35, !dbg !4367

35:                                               ; preds = %30, %3
  %36 = load i32, i32* %4, align 4, !dbg !4368
  %37 = load i8*, i8** %5, align 8, !dbg !4369
  %38 = load i32, i32* %6, align 4, !dbg !4370
  %39 = load i32, i32* %7, align 4, !dbg !4371
  %40 = call i32 @__fd_openat(i32 %36, i8* %37, i32 %38, i32 %39), !dbg !4372
  ret i32 %40, !dbg !4373
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @lseek64(i32 %0, i64 %1, i32 %2) #0 !dbg !4374 {
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4377, metadata !DIExpression()), !dbg !4378
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !4379, metadata !DIExpression()), !dbg !4380
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4381, metadata !DIExpression()), !dbg !4382
  %7 = load i32, i32* %4, align 4, !dbg !4383
  %8 = load i64, i64* %5, align 8, !dbg !4384
  %9 = load i32, i32* %6, align 4, !dbg !4385
  %10 = call i64 @__fd_lseek(i32 %7, i64 %8, i32 %9), !dbg !4386
  ret i64 %10, !dbg !4387
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @__xstat64(i32 %0, i8* nonnull %1, %struct.stat64.15* nonnull %2) #0 !dbg !4388 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca %struct.stat64.15*, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4409, metadata !DIExpression()), !dbg !4410
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4411, metadata !DIExpression()), !dbg !4412
  store %struct.stat64.15* %2, %struct.stat64.15** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.stat64.15** %6, metadata !4413, metadata !DIExpression()), !dbg !4414
  %7 = load i8*, i8** %5, align 8, !dbg !4415
  %8 = load %struct.stat64.15*, %struct.stat64.15** %6, align 8, !dbg !4416
  %9 = bitcast %struct.stat64.15* %8 to %struct.stat64.15*, !dbg !4417
  %10 = call i32 @__fd_stat(i8* %7, %struct.stat64.15* %9), !dbg !4418
  ret i32 %10, !dbg !4419
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @stat64(i8* nonnull %0, %struct.stat64.15* nonnull %1) #0 !dbg !4420 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.stat64.15*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4423, metadata !DIExpression()), !dbg !4424
  store %struct.stat64.15* %1, %struct.stat64.15** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.stat64.15** %4, metadata !4425, metadata !DIExpression()), !dbg !4426
  %5 = load i8*, i8** %3, align 8, !dbg !4427
  %6 = load %struct.stat64.15*, %struct.stat64.15** %4, align 8, !dbg !4428
  %7 = bitcast %struct.stat64.15* %6 to %struct.stat64.15*, !dbg !4429
  %8 = call i32 @__fd_stat(i8* %5, %struct.stat64.15* %7), !dbg !4430
  ret i32 %8, !dbg !4431
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @__lxstat64(i32 %0, i8* nonnull %1, %struct.stat64.15* nonnull %2) #0 !dbg !4432 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca %struct.stat64.15*, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4433, metadata !DIExpression()), !dbg !4434
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4435, metadata !DIExpression()), !dbg !4436
  store %struct.stat64.15* %2, %struct.stat64.15** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.stat64.15** %6, metadata !4437, metadata !DIExpression()), !dbg !4438
  %7 = load i8*, i8** %5, align 8, !dbg !4439
  %8 = load %struct.stat64.15*, %struct.stat64.15** %6, align 8, !dbg !4440
  %9 = bitcast %struct.stat64.15* %8 to %struct.stat64.15*, !dbg !4441
  %10 = call i32 @__fd_lstat(i8* %7, %struct.stat64.15* %9), !dbg !4442
  ret i32 %10, !dbg !4443
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @lstat64(i8* nonnull %0, %struct.stat64.15* nonnull %1) #0 !dbg !4444 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.stat64.15*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4445, metadata !DIExpression()), !dbg !4446
  store %struct.stat64.15* %1, %struct.stat64.15** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.stat64.15** %4, metadata !4447, metadata !DIExpression()), !dbg !4448
  %5 = load i8*, i8** %3, align 8, !dbg !4449
  %6 = load %struct.stat64.15*, %struct.stat64.15** %4, align 8, !dbg !4450
  %7 = bitcast %struct.stat64.15* %6 to %struct.stat64.15*, !dbg !4451
  %8 = call i32 @__fd_lstat(i8* %5, %struct.stat64.15* %7), !dbg !4452
  ret i32 %8, !dbg !4453
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @__fxstat64(i32 %0, i32 %1, %struct.stat64.15* nonnull %2) #0 !dbg !4454 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.stat64.15*, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4457, metadata !DIExpression()), !dbg !4458
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4459, metadata !DIExpression()), !dbg !4460
  store %struct.stat64.15* %2, %struct.stat64.15** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.stat64.15** %6, metadata !4461, metadata !DIExpression()), !dbg !4462
  %7 = load i32, i32* %5, align 4, !dbg !4463
  %8 = load %struct.stat64.15*, %struct.stat64.15** %6, align 8, !dbg !4464
  %9 = bitcast %struct.stat64.15* %8 to %struct.stat64.15*, !dbg !4465
  %10 = call i32 @__fd_fstat(i32 %7, %struct.stat64.15* %9), !dbg !4466
  ret i32 %10, !dbg !4467
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @fstat64(i32 %0, %struct.stat64.15* nonnull %1) #0 !dbg !4468 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.stat64.15*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4471, metadata !DIExpression()), !dbg !4472
  store %struct.stat64.15* %1, %struct.stat64.15** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.stat64.15** %4, metadata !4473, metadata !DIExpression()), !dbg !4474
  %5 = load i32, i32* %3, align 4, !dbg !4475
  %6 = load %struct.stat64.15*, %struct.stat64.15** %4, align 8, !dbg !4476
  %7 = bitcast %struct.stat64.15* %6 to %struct.stat64.15*, !dbg !4477
  %8 = call i32 @__fd_fstat(i32 %5, %struct.stat64.15* %7), !dbg !4478
  ret i32 %8, !dbg !4479
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ftruncate64(i32 %0, i64 %1) #0 !dbg !4480 {
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4481, metadata !DIExpression()), !dbg !4482
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !4483, metadata !DIExpression()), !dbg !4484
  %5 = load i32, i32* %3, align 4, !dbg !4485
  %6 = load i64, i64* %4, align 8, !dbg !4486
  %7 = call i32 @__fd_ftruncate(i32 %5, i64 %6), !dbg !4487
  ret i32 %7, !dbg !4488
}

; Function Attrs: noinline nounwind uwtable
define weak dso_local i32 @statfs64(i8* nonnull %0, %struct.statfs.11* nonnull %1) #0 !dbg !4489 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.statfs.11*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4517, metadata !DIExpression()), !dbg !4518
  store %struct.statfs.11* %1, %struct.statfs.11** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.statfs.11** %4, metadata !4519, metadata !DIExpression()), !dbg !4520
  %5 = load i8*, i8** %3, align 8, !dbg !4521
  %6 = load %struct.statfs.11*, %struct.statfs.11** %4, align 8, !dbg !4522
  %7 = call i32 @__fd_statfs(i8* %5, %struct.statfs.11* %6), !dbg !4523
  ret i32 %7, !dbg !4524
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @getdents64(i32 %0, i8* nonnull %1, i64 %2) #0 !dbg !4525 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4528, metadata !DIExpression()), !dbg !4529
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4530, metadata !DIExpression()), !dbg !4531
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !4532, metadata !DIExpression()), !dbg !4533
  %7 = load i32, i32* %4, align 4, !dbg !4534
  %8 = load i8*, i8** %5, align 8, !dbg !4535
  %9 = bitcast i8* %8 to %struct.dirent64.12*, !dbg !4536
  %10 = load i64, i64* %6, align 8, !dbg !4537
  %11 = trunc i64 %10 to i32, !dbg !4537
  %12 = call i32 @__fd_getdents(i32 %7, %struct.dirent64.12* %9, i32 %11), !dbg !4538
  %13 = sext i32 %12 to i64, !dbg !4538
  ret i64 %13, !dbg !4539
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @access(i8* nonnull %0, i32 %1) #0 !dbg !4540 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.exe_disk_file_t.16*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4543, metadata !DIExpression()), !dbg !4544
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4545, metadata !DIExpression()), !dbg !4546
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %6, metadata !4547, metadata !DIExpression()), !dbg !4573
  %7 = load i8*, i8** %4, align 8, !dbg !4574
  %8 = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %7), !dbg !4575
  store %struct.exe_disk_file_t.16* %8, %struct.exe_disk_file_t.16** %6, align 8, !dbg !4573
  %9 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %6, align 8, !dbg !4576
  %10 = icmp ne %struct.exe_disk_file_t.16* %9, null, !dbg !4576
  br i1 %10, label %11, label %12, !dbg !4578

11:                                               ; preds = %2
  store i32 0, i32* %3, align 4, !dbg !4579
  br label %18, !dbg !4579

12:                                               ; preds = %2
  %13 = load i8*, i8** %4, align 8, !dbg !4581
  %14 = call i8* @__concretize_string(i8* %13), !dbg !4582
  %15 = load i32, i32* %5, align 4, !dbg !4583
  %16 = call i64 (i64, ...) @syscall(i64 21, i8* %14, i32 %15) #15, !dbg !4584
  %17 = trunc i64 %16 to i32, !dbg !4584
  store i32 %17, i32* %3, align 4, !dbg !4585
  br label %18, !dbg !4585

18:                                               ; preds = %12, %11
  %19 = load i32, i32* %3, align 4, !dbg !4586
  ret i32 %19, !dbg !4586
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.exe_disk_file_t.16* @__get_sym_file(i8* %0) #0 !dbg !4587 {
  %2 = alloca %struct.exe_disk_file_t.16*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca [1024 x i8], align 16
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca %struct.exe_disk_file_t.16*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4590, metadata !DIExpression()), !dbg !4591
  %9 = load i8*, i8** %3, align 8, !dbg !4592
  %10 = icmp ne i8* %9, null, !dbg !4592
  br i1 %10, label %12, label %11, !dbg !4594

11:                                               ; preds = %1
  store %struct.exe_disk_file_t.16* null, %struct.exe_disk_file_t.16** %2, align 8, !dbg !4595
  br label %103, !dbg !4595

12:                                               ; preds = %1
  %13 = load i8*, i8** %3, align 8, !dbg !4596
  %14 = getelementptr inbounds i8, i8* %13, i64 0, !dbg !4596
  %15 = load i8, i8* %14, align 1, !dbg !4596
  %16 = sext i8 %15 to i32, !dbg !4596
  %17 = icmp eq i32 %16, 47, !dbg !4598
  br i1 %17, label %18, label %58, !dbg !4599

18:                                               ; preds = %12
  call void @llvm.dbg.declare(metadata [1024 x i8]* %4, metadata !4600, metadata !DIExpression()), !dbg !4603
  %19 = bitcast [1024 x i8]* %4 to i8*, !dbg !4603
  %20 = call i8* @memset(i8* %19, i32 0, i64 1024), !dbg !4603
  %21 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0, !dbg !4604
  %22 = call i8* @getcwd(i8* %21, i64 1024) #15, !dbg !4606
  %23 = icmp ne i8* %22, null, !dbg !4606
  br i1 %23, label %24, label %58, !dbg !4607

24:                                               ; preds = %18
  call void @llvm.dbg.declare(metadata i64* %5, metadata !4608, metadata !DIExpression()), !dbg !4610
  %25 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0, !dbg !4611
  %26 = call i64 @strlen(i8* %25) #19, !dbg !4612
  store i64 %26, i64* %5, align 8, !dbg !4610
  %27 = load i64, i64* %5, align 8, !dbg !4613
  %28 = icmp ugt i64 %27, 0, !dbg !4615
  br i1 %28, label %29, label %40, !dbg !4616

29:                                               ; preds = %24
  %30 = load i64, i64* %5, align 8, !dbg !4617
  %31 = sub i64 %30, 1, !dbg !4618
  %32 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 %31, !dbg !4619
  %33 = load i8, i8* %32, align 1, !dbg !4619
  %34 = sext i8 %33 to i32, !dbg !4619
  %35 = icmp eq i32 %34, 47, !dbg !4620
  br i1 %35, label %36, label %40, !dbg !4621

36:                                               ; preds = %29
  %37 = load i64, i64* %5, align 8, !dbg !4622
  %38 = add i64 %37, -1, !dbg !4622
  store i64 %38, i64* %5, align 8, !dbg !4622
  %39 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 %38, !dbg !4624
  store i8 0, i8* %39, align 1, !dbg !4625
  br label %40, !dbg !4626

40:                                               ; preds = %36, %29, %24
  %41 = load i8*, i8** %3, align 8, !dbg !4627
  %42 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0, !dbg !4629
  %43 = load i64, i64* %5, align 8, !dbg !4630
  %44 = call i32 @strncmp(i8* %41, i8* %42, i64 %43) #19, !dbg !4631
  %45 = icmp eq i32 %44, 0, !dbg !4632
  br i1 %45, label %46, label %58, !dbg !4633

46:                                               ; preds = %40
  %47 = load i8*, i8** %3, align 8, !dbg !4634
  %48 = load i64, i64* %5, align 8, !dbg !4637
  %49 = getelementptr inbounds i8, i8* %47, i64 %48, !dbg !4634
  %50 = load i8, i8* %49, align 1, !dbg !4634
  %51 = sext i8 %50 to i32, !dbg !4634
  %52 = icmp ne i32 %51, 0, !dbg !4638
  br i1 %52, label %53, label %58, !dbg !4639

53:                                               ; preds = %46
  %54 = load i64, i64* %5, align 8, !dbg !4640
  %55 = add i64 %54, 1, !dbg !4641
  %56 = load i8*, i8** %3, align 8, !dbg !4642
  %57 = getelementptr inbounds i8, i8* %56, i64 %55, !dbg !4642
  store i8* %57, i8** %3, align 8, !dbg !4642
  br label %58, !dbg !4643

58:                                               ; preds = %18, %46, %53, %40, %12
  call void @llvm.dbg.declare(metadata i8* %6, metadata !4644, metadata !DIExpression()), !dbg !4645
  %59 = load i8*, i8** %3, align 8, !dbg !4646
  %60 = getelementptr inbounds i8, i8* %59, i64 0, !dbg !4646
  %61 = load i8, i8* %60, align 1, !dbg !4646
  store i8 %61, i8* %6, align 1, !dbg !4645
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4647, metadata !DIExpression()), !dbg !4648
  %62 = load i8, i8* %6, align 1, !dbg !4649
  %63 = sext i8 %62 to i32, !dbg !4649
  %64 = icmp eq i32 %63, 0, !dbg !4651
  br i1 %64, label %71, label %65, !dbg !4652

65:                                               ; preds = %58
  %66 = load i8*, i8** %3, align 8, !dbg !4653
  %67 = getelementptr inbounds i8, i8* %66, i64 1, !dbg !4653
  %68 = load i8, i8* %67, align 1, !dbg !4653
  %69 = sext i8 %68 to i32, !dbg !4653
  %70 = icmp ne i32 %69, 0, !dbg !4654
  br i1 %70, label %71, label %72, !dbg !4655

71:                                               ; preds = %65, %58
  store %struct.exe_disk_file_t.16* null, %struct.exe_disk_file_t.16** %2, align 8, !dbg !4656
  br label %103, !dbg !4656

72:                                               ; preds = %65
  store i32 0, i32* %7, align 4, !dbg !4657
  br label %73, !dbg !4659

73:                                               ; preds = %99, %72
  %74 = load i32, i32* %7, align 4, !dbg !4660
  %75 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 0), align 8, !dbg !4662
  %76 = icmp ult i32 %74, %75, !dbg !4663
  br i1 %76, label %77, label %102, !dbg !4664

77:                                               ; preds = %73
  %78 = load i8, i8* %6, align 1, !dbg !4665
  %79 = sext i8 %78 to i32, !dbg !4665
  %80 = load i32, i32* %7, align 4, !dbg !4668
  %81 = trunc i32 %80 to i8, !dbg !4669
  %82 = sext i8 %81 to i32, !dbg !4669
  %83 = add nsw i32 65, %82, !dbg !4670
  %84 = icmp eq i32 %79, %83, !dbg !4671
  br i1 %84, label %85, label %99, !dbg !4672

85:                                               ; preds = %77
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %8, metadata !4673, metadata !DIExpression()), !dbg !4675
  %86 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 4), align 8, !dbg !4676
  %87 = load i32, i32* %7, align 4, !dbg !4677
  %88 = zext i32 %87 to i64, !dbg !4678
  %89 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %86, i64 %88, !dbg !4678
  store %struct.exe_disk_file_t.16* %89, %struct.exe_disk_file_t.16** %8, align 8, !dbg !4675
  %90 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %8, align 8, !dbg !4679
  %91 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %90, i32 0, i32 2, !dbg !4681
  %92 = load %struct.stat64.15*, %struct.stat64.15** %91, align 8, !dbg !4681
  %93 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %92, i32 0, i32 1, !dbg !4682
  %94 = load i64, i64* %93, align 8, !dbg !4682
  %95 = icmp eq i64 %94, 0, !dbg !4683
  br i1 %95, label %96, label %97, !dbg !4684

96:                                               ; preds = %85
  store %struct.exe_disk_file_t.16* null, %struct.exe_disk_file_t.16** %2, align 8, !dbg !4685
  br label %103, !dbg !4685

97:                                               ; preds = %85
  %98 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %8, align 8, !dbg !4686
  store %struct.exe_disk_file_t.16* %98, %struct.exe_disk_file_t.16** %2, align 8, !dbg !4687
  br label %103, !dbg !4687

99:                                               ; preds = %77
  %100 = load i32, i32* %7, align 4, !dbg !4688
  %101 = add i32 %100, 1, !dbg !4688
  store i32 %101, i32* %7, align 4, !dbg !4688
  br label %73, !dbg !4689, !llvm.loop !4690

102:                                              ; preds = %73
  store %struct.exe_disk_file_t.16* null, %struct.exe_disk_file_t.16** %2, align 8, !dbg !4692
  br label %103, !dbg !4692

103:                                              ; preds = %102, %97, %96, %71, %11
  %104 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %2, align 8, !dbg !4693
  ret %struct.exe_disk_file_t.16* %104, !dbg !4693
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @__concretize_string(i8* %0) #0 !dbg !4694 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !4697, metadata !DIExpression()), !dbg !4698
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4699, metadata !DIExpression()), !dbg !4700
  %7 = load i8*, i8** %2, align 8, !dbg !4701
  %8 = call i8* @__concretize_ptr(i8* %7), !dbg !4702
  store i8* %8, i8** %3, align 8, !dbg !4700
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4703, metadata !DIExpression()), !dbg !4704
  store i32 0, i32* %4, align 4, !dbg !4705
  br label %9, !dbg !4707

9:                                                ; preds = %52, %1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !4708, metadata !DIExpression()), !dbg !4711
  %10 = load i8*, i8** %3, align 8, !dbg !4712
  %11 = load i8, i8* %10, align 1, !dbg !4713
  store i8 %11, i8* %5, align 1, !dbg !4711
  %12 = load i8, i8* %5, align 1, !dbg !4714
  %13 = sext i8 %12 to i64, !dbg !4714
  %14 = call i32 @klee_is_symbolic(i64 %13), !dbg !4716
  %15 = icmp ne i32 %14, 0, !dbg !4716
  br i1 %15, label %19, label %16, !dbg !4717

16:                                               ; preds = %9
  %17 = load i8, i8* %5, align 1, !dbg !4718
  %18 = icmp ne i8 %17, 0, !dbg !4718
  br i1 %18, label %52, label %57, !dbg !4721

19:                                               ; preds = %9
  %20 = load i32, i32* %4, align 4, !dbg !4722
  %21 = load i32, i32* %4, align 4, !dbg !4724
  %22 = sub i32 %21, 1, !dbg !4725
  %23 = and i32 %20, %22, !dbg !4726
  %24 = icmp ne i32 %23, 0, !dbg !4726
  br i1 %24, label %36, label %25, !dbg !4727

25:                                               ; preds = %19
  %26 = load i8, i8* %5, align 1, !dbg !4728
  %27 = icmp ne i8 %26, 0, !dbg !4728
  br i1 %27, label %30, label %28, !dbg !4731

28:                                               ; preds = %25
  %29 = load i8*, i8** %3, align 8, !dbg !4732
  store i8 0, i8* %29, align 1, !dbg !4734
  br label %57, !dbg !4735

30:                                               ; preds = %25
  %31 = load i8, i8* %5, align 1, !dbg !4736
  %32 = sext i8 %31 to i32, !dbg !4736
  %33 = icmp eq i32 %32, 47, !dbg !4738
  br i1 %33, label %34, label %52, !dbg !4739

34:                                               ; preds = %30
  %35 = load i8*, i8** %3, align 8, !dbg !4740
  store i8 47, i8* %35, align 1, !dbg !4742
  br label %52, !dbg !4743

36:                                               ; preds = %19
  call void @llvm.dbg.declare(metadata i8* %6, metadata !4744, metadata !DIExpression()), !dbg !4746
  %37 = load i8, i8* %5, align 1, !dbg !4747
  %38 = sext i8 %37 to i64, !dbg !4748
  %39 = call i64 @klee_get_valuel(i64 %38), !dbg !4749
  %40 = trunc i64 %39 to i8, !dbg !4750
  store i8 %40, i8* %6, align 1, !dbg !4746
  %41 = load i8, i8* %6, align 1, !dbg !4751
  %42 = sext i8 %41 to i32, !dbg !4751
  %43 = load i8, i8* %5, align 1, !dbg !4752
  %44 = sext i8 %43 to i32, !dbg !4752
  %45 = icmp eq i32 %42, %44, !dbg !4753
  %46 = zext i1 %45 to i32, !dbg !4753
  %47 = sext i32 %46 to i64, !dbg !4751
  call void @klee_assume(i64 %47), !dbg !4754
  %48 = load i8, i8* %6, align 1, !dbg !4755
  %49 = load i8*, i8** %3, align 8, !dbg !4756
  store i8 %48, i8* %49, align 1, !dbg !4757
  %50 = load i8, i8* %6, align 1, !dbg !4758
  %51 = icmp ne i8 %50, 0, !dbg !4758
  br i1 %51, label %52, label %57, !dbg !4760

52:                                               ; preds = %30, %34, %36, %16
  %53 = load i32, i32* %4, align 4, !dbg !4761
  %54 = add i32 %53, 1, !dbg !4761
  store i32 %54, i32* %4, align 4, !dbg !4761
  %55 = load i8*, i8** %3, align 8, !dbg !4762
  %56 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !4762
  store i8* %56, i8** %3, align 8, !dbg !4762
  br label %9, !dbg !4763, !llvm.loop !4764

57:                                               ; preds = %36, %16, %28
  %58 = load i8*, i8** %2, align 8, !dbg !4767
  ret i8* %58, !dbg !4768
}

; Function Attrs: nounwind
declare dso_local i64 @syscall(i64, ...) #3

; Function Attrs: noinline nounwind uwtable
define internal i8* @__concretize_ptr(i8* %0) #0 !dbg !4769 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !4772, metadata !DIExpression()), !dbg !4773
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4774, metadata !DIExpression()), !dbg !4775
  %4 = load i8*, i8** %2, align 8, !dbg !4776
  %5 = ptrtoint i8* %4 to i64, !dbg !4777
  %6 = call i64 @klee_get_valuel(i64 %5), !dbg !4778
  %7 = inttoptr i64 %6 to i8*, !dbg !4779
  store i8* %7, i8** %3, align 8, !dbg !4775
  %8 = load i8*, i8** %3, align 8, !dbg !4780
  %9 = load i8*, i8** %2, align 8, !dbg !4781
  %10 = icmp eq i8* %8, %9, !dbg !4782
  %11 = zext i1 %10 to i32, !dbg !4782
  %12 = sext i32 %11 to i64, !dbg !4780
  call void @klee_assume(i64 %12), !dbg !4783
  %13 = load i8*, i8** %3, align 8, !dbg !4784
  ret i8* %13, !dbg !4785
}

declare dso_local i64 @klee_get_valuel(i64) #4

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @getcwd(i8* %0, i64 %1) #0 !dbg !444 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4786, metadata !DIExpression()), !dbg !4787
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !4788, metadata !DIExpression()), !dbg !4789
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4790, metadata !DIExpression()), !dbg !4791
  %7 = load i32, i32* @getcwd.n_calls, align 4, !dbg !4792
  %8 = add nsw i32 %7, 1, !dbg !4792
  store i32 %8, i32* @getcwd.n_calls, align 4, !dbg !4792
  %9 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !4793
  %10 = icmp ne i32 %9, 0, !dbg !4795
  br i1 %10, label %11, label %20, !dbg !4796

11:                                               ; preds = %2
  %12 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 10), align 8, !dbg !4797
  %13 = load i32, i32* %12, align 4, !dbg !4798
  %14 = load i32, i32* @getcwd.n_calls, align 4, !dbg !4799
  %15 = icmp eq i32 %13, %14, !dbg !4800
  br i1 %15, label %16, label %20, !dbg !4801

16:                                               ; preds = %11
  %17 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !4802
  %18 = add i32 %17, -1, !dbg !4802
  store i32 %18, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !4802
  %19 = call i32* @__errno_location() #20, !dbg !4804
  store i32 34, i32* %19, align 4, !dbg !4805
  store i8* null, i8** %3, align 8, !dbg !4806
  br label %51, !dbg !4806

20:                                               ; preds = %11, %2
  %21 = load i8*, i8** %4, align 8, !dbg !4807
  %22 = icmp ne i8* %21, null, !dbg !4807
  br i1 %22, label %30, label %23, !dbg !4809

23:                                               ; preds = %20
  store i64 1024, i64* %5, align 8, !dbg !4810
  %24 = load i64, i64* %5, align 8, !dbg !4812
  %25 = call noalias i8* @malloc(i64 %24) #15, !dbg !4813
  store i8* %25, i8** %4, align 8, !dbg !4814
  %26 = load i8*, i8** %4, align 8, !dbg !4815
  %27 = icmp ne i8* %26, null, !dbg !4815
  br i1 %27, label %35, label %28, !dbg !4817

28:                                               ; preds = %23
  %29 = call i32* @__errno_location() #20, !dbg !4818
  store i32 12, i32* %29, align 4, !dbg !4820
  store i8* null, i8** %3, align 8, !dbg !4821
  br label %51, !dbg !4821

30:                                               ; preds = %20
  %31 = load i64, i64* %5, align 8, !dbg !4822
  %32 = icmp ne i64 %31, 0, !dbg !4822
  br i1 %32, label %35, label %33, !dbg !4824

33:                                               ; preds = %30
  %34 = call i32* @__errno_location() #20, !dbg !4825
  store i32 22, i32* %34, align 4, !dbg !4827
  store i8* null, i8** %3, align 8, !dbg !4828
  br label %51, !dbg !4828

35:                                               ; preds = %30, %23
  %36 = load i8*, i8** %4, align 8, !dbg !4829
  %37 = call i8* @__concretize_ptr(i8* %36), !dbg !4830
  store i8* %37, i8** %4, align 8, !dbg !4831
  %38 = load i64, i64* %5, align 8, !dbg !4832
  %39 = call i64 @__concretize_size(i64 %38), !dbg !4833
  store i64 %39, i64* %5, align 8, !dbg !4834
  %40 = load i8*, i8** %4, align 8, !dbg !4835
  %41 = load i64, i64* %5, align 8, !dbg !4836
  call void @klee_check_memory_access(i8* %40, i64 %41), !dbg !4837
  %42 = load i8*, i8** %4, align 8, !dbg !4838
  %43 = load i64, i64* %5, align 8, !dbg !4839
  %44 = call i64 (i64, ...) @syscall(i64 79, i8* %42, i64 %43) #15, !dbg !4840
  %45 = trunc i64 %44 to i32, !dbg !4840
  store i32 %45, i32* %6, align 4, !dbg !4841
  %46 = load i32, i32* %6, align 4, !dbg !4842
  %47 = icmp eq i32 %46, -1, !dbg !4844
  br i1 %47, label %48, label %49, !dbg !4845

48:                                               ; preds = %35
  store i8* null, i8** %3, align 8, !dbg !4846
  br label %51, !dbg !4846

49:                                               ; preds = %35
  %50 = load i8*, i8** %4, align 8, !dbg !4847
  store i8* %50, i8** %3, align 8, !dbg !4848
  br label %51, !dbg !4848

51:                                               ; preds = %49, %48, %33, %28, %16
  %52 = load i8*, i8** %3, align 8, !dbg !4849
  ret i8* %52, !dbg !4849
}

; Function Attrs: nounwind readonly willreturn
declare dso_local i32 @strncmp(i8*, i8*, i64) #13

; Function Attrs: nounwind readnone willreturn
declare dso_local i32* @__errno_location() #14

; Function Attrs: noinline nounwind uwtable
define internal i64 @__concretize_size(i64 %0) #0 !dbg !4850 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !4853, metadata !DIExpression()), !dbg !4854
  call void @llvm.dbg.declare(metadata i64* %3, metadata !4855, metadata !DIExpression()), !dbg !4856
  %4 = load i64, i64* %2, align 8, !dbg !4857
  %5 = call i64 @klee_get_valuel(i64 %4), !dbg !4858
  store i64 %5, i64* %3, align 8, !dbg !4856
  %6 = load i64, i64* %3, align 8, !dbg !4859
  %7 = load i64, i64* %2, align 8, !dbg !4860
  %8 = icmp eq i64 %6, %7, !dbg !4861
  %9 = zext i1 %8 to i32, !dbg !4861
  %10 = sext i32 %9 to i64, !dbg !4859
  call void @klee_assume(i64 %10), !dbg !4862
  %11 = load i64, i64* %3, align 8, !dbg !4863
  ret i64 %11, !dbg !4864
}

declare dso_local void @klee_check_memory_access(i8*, i64) #4

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @umask(i32 %0) #0 !dbg !4865 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4868, metadata !DIExpression()), !dbg !4869
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4870, metadata !DIExpression()), !dbg !4871
  %4 = load i32, i32* getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32 }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 1), align 8, !dbg !4872
  store i32 %4, i32* %3, align 4, !dbg !4871
  %5 = load i32, i32* %2, align 4, !dbg !4873
  %6 = and i32 %5, 511, !dbg !4874
  store i32 %6, i32* getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32 }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 1), align 8, !dbg !4875
  %7 = load i32, i32* %3, align 4, !dbg !4876
  ret i32 %7, !dbg !4877
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @__fd_open(i8* %0, i32 %1, i32 %2) #0 !dbg !4878 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.exe_disk_file_t.16*, align 8
  %9 = alloca %struct.exe_file_t.17*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4881, metadata !DIExpression()), !dbg !4882
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4883, metadata !DIExpression()), !dbg !4884
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4885, metadata !DIExpression()), !dbg !4886
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %8, metadata !4887, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %9, metadata !4889, metadata !DIExpression()), !dbg !4898
  call void @llvm.dbg.declare(metadata i32* %10, metadata !4899, metadata !DIExpression()), !dbg !4900
  store i32 0, i32* %10, align 4, !dbg !4901
  br label %12, !dbg !4903

12:                                               ; preds = %23, %3
  %13 = load i32, i32* %10, align 4, !dbg !4904
  %14 = icmp slt i32 %13, 32, !dbg !4906
  br i1 %14, label %15, label %26, !dbg !4907

15:                                               ; preds = %12
  %16 = load i32, i32* %10, align 4, !dbg !4908
  %17 = sext i32 %16 to i64, !dbg !4910
  %18 = getelementptr inbounds [32 x %struct.exe_file_t.17], [32 x %struct.exe_file_t.17]* getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32 }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 0), i64 0, i64 %17, !dbg !4910
  %19 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %18, i32 0, i32 1, !dbg !4911
  %20 = load i32, i32* %19, align 4, !dbg !4911
  %21 = and i32 %20, 1, !dbg !4912
  %22 = icmp ne i32 %21, 0, !dbg !4912
  br i1 %22, label %23, label %26, !dbg !4913

23:                                               ; preds = %15
  %24 = load i32, i32* %10, align 4, !dbg !4914
  %25 = add nsw i32 %24, 1, !dbg !4914
  store i32 %25, i32* %10, align 4, !dbg !4914
  br label %12, !dbg !4915, !llvm.loop !4916

26:                                               ; preds = %15, %12
  %27 = load i32, i32* %10, align 4, !dbg !4918
  %28 = icmp eq i32 %27, 32, !dbg !4920
  br i1 %28, label %29, label %31, !dbg !4921

29:                                               ; preds = %26
  %30 = call i32* @__errno_location() #20, !dbg !4922
  store i32 24, i32* %30, align 4, !dbg !4924
  store i32 -1, i32* %4, align 4, !dbg !4925
  br label %145, !dbg !4925

31:                                               ; preds = %26
  %32 = load i32, i32* %10, align 4, !dbg !4926
  %33 = sext i32 %32 to i64, !dbg !4927
  %34 = getelementptr inbounds [32 x %struct.exe_file_t.17], [32 x %struct.exe_file_t.17]* getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32 }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 0), i64 0, i64 %33, !dbg !4927
  store %struct.exe_file_t.17* %34, %struct.exe_file_t.17** %9, align 8, !dbg !4928
  %35 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %9, align 8, !dbg !4929
  %36 = bitcast %struct.exe_file_t.17* %35 to i8*, !dbg !4930
  %37 = call i8* @memset(i8* %36, i32 0, i64 24), !dbg !4930
  %38 = load i8*, i8** %5, align 8, !dbg !4931
  %39 = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %38), !dbg !4932
  store %struct.exe_disk_file_t.16* %39, %struct.exe_disk_file_t.16** %8, align 8, !dbg !4933
  %40 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %8, align 8, !dbg !4934
  %41 = icmp ne %struct.exe_disk_file_t.16* %40, null, !dbg !4934
  br i1 %41, label %42, label %104, !dbg !4936

42:                                               ; preds = %31
  %43 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %8, align 8, !dbg !4937
  %44 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %9, align 8, !dbg !4939
  %45 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %44, i32 0, i32 3, !dbg !4940
  store %struct.exe_disk_file_t.16* %43, %struct.exe_disk_file_t.16** %45, align 8, !dbg !4941
  %46 = load i32, i32* %6, align 4, !dbg !4942
  %47 = and i32 %46, 64, !dbg !4944
  %48 = icmp ne i32 %47, 0, !dbg !4944
  br i1 %48, label %49, label %55, !dbg !4945

49:                                               ; preds = %42
  %50 = load i32, i32* %6, align 4, !dbg !4946
  %51 = and i32 %50, 128, !dbg !4947
  %52 = icmp ne i32 %51, 0, !dbg !4947
  br i1 %52, label %53, label %55, !dbg !4948

53:                                               ; preds = %49
  %54 = call i32* @__errno_location() #20, !dbg !4949
  store i32 17, i32* %54, align 4, !dbg !4951
  store i32 -1, i32* %4, align 4, !dbg !4952
  br label %145, !dbg !4952

55:                                               ; preds = %49, %42
  %56 = load i32, i32* %6, align 4, !dbg !4953
  %57 = and i32 %56, 512, !dbg !4955
  %58 = icmp ne i32 %57, 0, !dbg !4955
  br i1 %58, label %59, label %65, !dbg !4956

59:                                               ; preds = %55
  %60 = load i32, i32* %6, align 4, !dbg !4957
  %61 = and i32 %60, 0, !dbg !4958
  %62 = icmp ne i32 %61, 0, !dbg !4958
  br i1 %62, label %63, label %65, !dbg !4959

63:                                               ; preds = %59
  call void @klee_warning(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.77, i64 0, i64 0)), !dbg !4960
  %64 = call i32* @__errno_location() #20, !dbg !4962
  store i32 13, i32* %64, align 4, !dbg !4963
  store i32 -1, i32* %4, align 4, !dbg !4964
  br label %145, !dbg !4964

65:                                               ; preds = %59, %55
  %66 = load i32, i32* %6, align 4, !dbg !4965
  %67 = and i32 %66, 128, !dbg !4967
  %68 = icmp ne i32 %67, 0, !dbg !4967
  br i1 %68, label %69, label %75, !dbg !4968

69:                                               ; preds = %65
  %70 = load i32, i32* %6, align 4, !dbg !4969
  %71 = and i32 %70, 64, !dbg !4970
  %72 = icmp ne i32 %71, 0, !dbg !4970
  br i1 %72, label %75, label %73, !dbg !4971

73:                                               ; preds = %69
  call void @klee_warning(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1.78, i64 0, i64 0)), !dbg !4972
  %74 = call i32* @__errno_location() #20, !dbg !4974
  store i32 13, i32* %74, align 4, !dbg !4975
  store i32 -1, i32* %4, align 4, !dbg !4976
  br label %145, !dbg !4976

75:                                               ; preds = %69, %65
  %76 = load i32, i32* %6, align 4, !dbg !4977
  %77 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %8, align 8, !dbg !4979
  %78 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %77, i32 0, i32 2, !dbg !4980
  %79 = load %struct.stat64.15*, %struct.stat64.15** %78, align 8, !dbg !4980
  %80 = call i32 @has_permission(i32 %76, %struct.stat64.15* %79), !dbg !4981
  %81 = icmp ne i32 %80, 0, !dbg !4981
  br i1 %81, label %84, label %82, !dbg !4982

82:                                               ; preds = %75
  %83 = call i32* @__errno_location() #20, !dbg !4983
  store i32 13, i32* %83, align 4, !dbg !4985
  store i32 -1, i32* %4, align 4, !dbg !4986
  br label %145, !dbg !4986

84:                                               ; preds = %75
  %85 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %9, align 8, !dbg !4987
  %86 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %85, i32 0, i32 3, !dbg !4988
  %87 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %86, align 8, !dbg !4988
  %88 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %87, i32 0, i32 2, !dbg !4989
  %89 = load %struct.stat64.15*, %struct.stat64.15** %88, align 8, !dbg !4989
  %90 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %89, i32 0, i32 3, !dbg !4990
  %91 = load i32, i32* %90, align 8, !dbg !4990
  %92 = and i32 %91, -512, !dbg !4991
  %93 = load i32, i32* %7, align 4, !dbg !4992
  %94 = load i32, i32* getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32 }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 1), align 8, !dbg !4993
  %95 = xor i32 %94, -1, !dbg !4994
  %96 = and i32 %93, %95, !dbg !4995
  %97 = or i32 %92, %96, !dbg !4996
  %98 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %9, align 8, !dbg !4997
  %99 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %98, i32 0, i32 3, !dbg !4998
  %100 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %99, align 8, !dbg !4998
  %101 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %100, i32 0, i32 2, !dbg !4999
  %102 = load %struct.stat64.15*, %struct.stat64.15** %101, align 8, !dbg !4999
  %103 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %102, i32 0, i32 3, !dbg !5000
  store i32 %97, i32* %103, align 8, !dbg !5001
  br label %118, !dbg !5002

104:                                              ; preds = %31
  call void @llvm.dbg.declare(metadata i32* %11, metadata !5003, metadata !DIExpression()), !dbg !5005
  %105 = load i8*, i8** %5, align 8, !dbg !5006
  %106 = call i8* @__concretize_string(i8* %105), !dbg !5007
  %107 = load i32, i32* %6, align 4, !dbg !5008
  %108 = load i32, i32* %7, align 4, !dbg !5009
  %109 = call i64 (i64, ...) @syscall(i64 2, i8* %106, i32 %107, i32 %108) #15, !dbg !5010
  %110 = trunc i64 %109 to i32, !dbg !5010
  store i32 %110, i32* %11, align 4, !dbg !5005
  %111 = load i32, i32* %11, align 4, !dbg !5011
  %112 = icmp eq i32 %111, -1, !dbg !5013
  br i1 %112, label %113, label %114, !dbg !5014

113:                                              ; preds = %104
  store i32 -1, i32* %4, align 4, !dbg !5015
  br label %145, !dbg !5015

114:                                              ; preds = %104
  %115 = load i32, i32* %11, align 4, !dbg !5016
  %116 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %9, align 8, !dbg !5017
  %117 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %116, i32 0, i32 0, !dbg !5018
  store i32 %115, i32* %117, align 8, !dbg !5019
  br label %118

118:                                              ; preds = %114, %84
  %119 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %9, align 8, !dbg !5020
  %120 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %119, i32 0, i32 1, !dbg !5021
  store i32 1, i32* %120, align 4, !dbg !5022
  %121 = load i32, i32* %6, align 4, !dbg !5023
  %122 = and i32 %121, 3, !dbg !5025
  %123 = icmp eq i32 %122, 0, !dbg !5026
  br i1 %123, label %124, label %129, !dbg !5027

124:                                              ; preds = %118
  %125 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %9, align 8, !dbg !5028
  %126 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %125, i32 0, i32 1, !dbg !5030
  %127 = load i32, i32* %126, align 4, !dbg !5031
  %128 = or i32 %127, 4, !dbg !5031
  store i32 %128, i32* %126, align 4, !dbg !5031
  br label %143, !dbg !5032

129:                                              ; preds = %118
  %130 = load i32, i32* %6, align 4, !dbg !5033
  %131 = and i32 %130, 3, !dbg !5035
  %132 = icmp eq i32 %131, 1, !dbg !5036
  br i1 %132, label %133, label %138, !dbg !5037

133:                                              ; preds = %129
  %134 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %9, align 8, !dbg !5038
  %135 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %134, i32 0, i32 1, !dbg !5040
  %136 = load i32, i32* %135, align 4, !dbg !5041
  %137 = or i32 %136, 8, !dbg !5041
  store i32 %137, i32* %135, align 4, !dbg !5041
  br label %143, !dbg !5042

138:                                              ; preds = %129
  %139 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %9, align 8, !dbg !5043
  %140 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %139, i32 0, i32 1, !dbg !5045
  %141 = load i32, i32* %140, align 4, !dbg !5046
  %142 = or i32 %141, 12, !dbg !5046
  store i32 %142, i32* %140, align 4, !dbg !5046
  br label %143

143:                                              ; preds = %133, %138, %124
  %144 = load i32, i32* %10, align 4, !dbg !5047
  store i32 %144, i32* %4, align 4, !dbg !5048
  br label %145, !dbg !5048

145:                                              ; preds = %143, %113, %82, %73, %63, %53, %29
  %146 = load i32, i32* %4, align 4, !dbg !5049
  ret i32 %146, !dbg !5049
}

declare dso_local void @klee_warning(i8*) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @has_permission(i32 %0, %struct.stat64.15* %1) #0 !dbg !5050 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.stat64.15*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5053, metadata !DIExpression()), !dbg !5054
  store %struct.stat64.15* %1, %struct.stat64.15** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.stat64.15** %5, metadata !5055, metadata !DIExpression()), !dbg !5056
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5057, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.declare(metadata i32* %7, metadata !5059, metadata !DIExpression()), !dbg !5060
  call void @llvm.dbg.declare(metadata i32* %8, metadata !5061, metadata !DIExpression()), !dbg !5062
  %9 = load %struct.stat64.15*, %struct.stat64.15** %5, align 8, !dbg !5063
  %10 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %9, i32 0, i32 3, !dbg !5064
  %11 = load i32, i32* %10, align 8, !dbg !5064
  store i32 %11, i32* %8, align 4, !dbg !5062
  %12 = load i32, i32* %4, align 4, !dbg !5065
  %13 = and i32 %12, 0, !dbg !5067
  %14 = icmp ne i32 %13, 0, !dbg !5067
  br i1 %14, label %19, label %15, !dbg !5068

15:                                               ; preds = %2
  %16 = load i32, i32* %4, align 4, !dbg !5069
  %17 = and i32 %16, 2, !dbg !5070
  %18 = icmp ne i32 %17, 0, !dbg !5070
  br i1 %18, label %19, label %20, !dbg !5071

19:                                               ; preds = %15, %2
  store i32 1, i32* %7, align 4, !dbg !5072
  br label %21, !dbg !5073

20:                                               ; preds = %15
  store i32 0, i32* %7, align 4, !dbg !5074
  br label %21

21:                                               ; preds = %20, %19
  %22 = load i32, i32* %4, align 4, !dbg !5075
  %23 = and i32 %22, 1, !dbg !5077
  %24 = icmp ne i32 %23, 0, !dbg !5077
  br i1 %24, label %29, label %25, !dbg !5078

25:                                               ; preds = %21
  %26 = load i32, i32* %4, align 4, !dbg !5079
  %27 = and i32 %26, 2, !dbg !5080
  %28 = icmp ne i32 %27, 0, !dbg !5080
  br i1 %28, label %29, label %30, !dbg !5081

29:                                               ; preds = %25, %21
  store i32 1, i32* %6, align 4, !dbg !5082
  br label %31, !dbg !5083

30:                                               ; preds = %25
  store i32 0, i32* %6, align 4, !dbg !5084
  br label %31

31:                                               ; preds = %30, %29
  %32 = load i32, i32* %7, align 4, !dbg !5085
  %33 = icmp ne i32 %32, 0, !dbg !5085
  br i1 %33, label %34, label %45, !dbg !5087

34:                                               ; preds = %31
  %35 = load i32, i32* %8, align 4, !dbg !5088
  %36 = and i32 %35, 256, !dbg !5089
  %37 = load i32, i32* %8, align 4, !dbg !5090
  %38 = and i32 %37, 32, !dbg !5091
  %39 = or i32 %36, %38, !dbg !5092
  %40 = load i32, i32* %8, align 4, !dbg !5093
  %41 = and i32 %40, 4, !dbg !5094
  %42 = or i32 %39, %41, !dbg !5095
  %43 = icmp ne i32 %42, 0, !dbg !5095
  br i1 %43, label %44, label %45, !dbg !5096

44:                                               ; preds = %34
  store i32 0, i32* %3, align 4, !dbg !5097
  br label %60, !dbg !5097

45:                                               ; preds = %34, %31
  %46 = load i32, i32* %6, align 4, !dbg !5098
  %47 = icmp ne i32 %46, 0, !dbg !5098
  br i1 %47, label %48, label %59, !dbg !5100

48:                                               ; preds = %45
  %49 = load i32, i32* %8, align 4, !dbg !5101
  %50 = and i32 %49, 128, !dbg !5102
  %51 = load i32, i32* %8, align 4, !dbg !5103
  %52 = and i32 %51, 16, !dbg !5104
  %53 = or i32 %50, %52, !dbg !5105
  %54 = load i32, i32* %8, align 4, !dbg !5106
  %55 = and i32 %54, 2, !dbg !5107
  %56 = or i32 %53, %55, !dbg !5108
  %57 = icmp ne i32 %56, 0, !dbg !5108
  br i1 %57, label %59, label %58, !dbg !5109

58:                                               ; preds = %48
  store i32 0, i32* %3, align 4, !dbg !5110
  br label %60, !dbg !5110

59:                                               ; preds = %48, %45
  store i32 1, i32* %3, align 4, !dbg !5111
  br label %60, !dbg !5111

60:                                               ; preds = %59, %58, %44
  %61 = load i32, i32* %3, align 4, !dbg !5112
  ret i32 %61, !dbg !5112
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @__fd_openat(i32 %0, i8* %1, i32 %2, i32 %3) #0 !dbg !5113 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.exe_file_t.17*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.exe_file_t.17*, align 8
  %13 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5116, metadata !DIExpression()), !dbg !5117
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !5118, metadata !DIExpression()), !dbg !5119
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !5120, metadata !DIExpression()), !dbg !5121
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !5122, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %10, metadata !5124, metadata !DIExpression()), !dbg !5125
  call void @llvm.dbg.declare(metadata i32* %11, metadata !5126, metadata !DIExpression()), !dbg !5127
  %14 = load i32, i32* %6, align 4, !dbg !5128
  %15 = icmp ne i32 %14, -100, !dbg !5130
  br i1 %15, label %16, label %34, !dbg !5131

16:                                               ; preds = %4
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %12, metadata !5132, metadata !DIExpression()), !dbg !5134
  %17 = load i32, i32* %6, align 4, !dbg !5135
  %18 = call %struct.exe_file_t.17* @__get_file(i32 %17), !dbg !5136
  store %struct.exe_file_t.17* %18, %struct.exe_file_t.17** %12, align 8, !dbg !5134
  %19 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %12, align 8, !dbg !5137
  %20 = icmp ne %struct.exe_file_t.17* %19, null, !dbg !5137
  br i1 %20, label %23, label %21, !dbg !5139

21:                                               ; preds = %16
  %22 = call i32* @__errno_location() #20, !dbg !5140
  store i32 9, i32* %22, align 4, !dbg !5142
  store i32 -1, i32* %5, align 4, !dbg !5143
  br label %112, !dbg !5143

23:                                               ; preds = %16
  %24 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %12, align 8, !dbg !5144
  %25 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %24, i32 0, i32 3, !dbg !5146
  %26 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %25, align 8, !dbg !5146
  %27 = icmp ne %struct.exe_disk_file_t.16* %26, null, !dbg !5144
  br i1 %27, label %28, label %30, !dbg !5147

28:                                               ; preds = %23
  call void @klee_warning(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2.81, i64 0, i64 0)), !dbg !5148
  %29 = call i32* @__errno_location() #20, !dbg !5150
  store i32 2, i32* %29, align 4, !dbg !5151
  store i32 -1, i32* %5, align 4, !dbg !5152
  br label %112, !dbg !5152

30:                                               ; preds = %23
  %31 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %12, align 8, !dbg !5153
  %32 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %31, i32 0, i32 0, !dbg !5154
  %33 = load i32, i32* %32, align 8, !dbg !5154
  store i32 %33, i32* %6, align 4, !dbg !5155
  br label %34, !dbg !5156

34:                                               ; preds = %30, %4
  %35 = load i8*, i8** %7, align 8, !dbg !5157
  %36 = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %35), !dbg !5159
  %37 = icmp ne %struct.exe_disk_file_t.16* %36, null, !dbg !5159
  br i1 %37, label %38, label %43, !dbg !5160

38:                                               ; preds = %34
  %39 = load i8*, i8** %7, align 8, !dbg !5161
  %40 = load i32, i32* %8, align 4, !dbg !5163
  %41 = load i32, i32* %9, align 4, !dbg !5164
  %42 = call i32 @__fd_open(i8* %39, i32 %40, i32 %41), !dbg !5165
  store i32 %42, i32* %5, align 4, !dbg !5166
  br label %112, !dbg !5166

43:                                               ; preds = %34
  store i32 0, i32* %11, align 4, !dbg !5167
  br label %44, !dbg !5169

44:                                               ; preds = %55, %43
  %45 = load i32, i32* %11, align 4, !dbg !5170
  %46 = icmp slt i32 %45, 32, !dbg !5172
  br i1 %46, label %47, label %58, !dbg !5173

47:                                               ; preds = %44
  %48 = load i32, i32* %11, align 4, !dbg !5174
  %49 = sext i32 %48 to i64, !dbg !5176
  %50 = getelementptr inbounds [32 x %struct.exe_file_t.17], [32 x %struct.exe_file_t.17]* getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32 }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 0), i64 0, i64 %49, !dbg !5176
  %51 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %50, i32 0, i32 1, !dbg !5177
  %52 = load i32, i32* %51, align 4, !dbg !5177
  %53 = and i32 %52, 1, !dbg !5178
  %54 = icmp ne i32 %53, 0, !dbg !5178
  br i1 %54, label %55, label %58, !dbg !5179

55:                                               ; preds = %47
  %56 = load i32, i32* %11, align 4, !dbg !5180
  %57 = add nsw i32 %56, 1, !dbg !5180
  store i32 %57, i32* %11, align 4, !dbg !5180
  br label %44, !dbg !5181, !llvm.loop !5182

58:                                               ; preds = %47, %44
  %59 = load i32, i32* %11, align 4, !dbg !5184
  %60 = icmp eq i32 %59, 32, !dbg !5186
  br i1 %60, label %61, label %63, !dbg !5187

61:                                               ; preds = %58
  %62 = call i32* @__errno_location() #20, !dbg !5188
  store i32 24, i32* %62, align 4, !dbg !5190
  store i32 -1, i32* %5, align 4, !dbg !5191
  br label %112, !dbg !5191

63:                                               ; preds = %58
  %64 = load i32, i32* %11, align 4, !dbg !5192
  %65 = sext i32 %64 to i64, !dbg !5193
  %66 = getelementptr inbounds [32 x %struct.exe_file_t.17], [32 x %struct.exe_file_t.17]* getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32 }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 0), i64 0, i64 %65, !dbg !5193
  store %struct.exe_file_t.17* %66, %struct.exe_file_t.17** %10, align 8, !dbg !5194
  %67 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %10, align 8, !dbg !5195
  %68 = bitcast %struct.exe_file_t.17* %67 to i8*, !dbg !5196
  %69 = call i8* @memset(i8* %68, i32 0, i64 24), !dbg !5196
  call void @llvm.dbg.declare(metadata i32* %13, metadata !5197, metadata !DIExpression()), !dbg !5198
  %70 = load i32, i32* %6, align 4, !dbg !5199
  %71 = sext i32 %70 to i64, !dbg !5200
  %72 = load i8*, i8** %7, align 8, !dbg !5201
  %73 = call i8* @__concretize_string(i8* %72), !dbg !5202
  %74 = load i32, i32* %8, align 4, !dbg !5203
  %75 = sext i32 %74 to i64, !dbg !5204
  %76 = load i32, i32* %9, align 4, !dbg !5205
  %77 = call i64 (i64, ...) @syscall(i64 257, i64 %71, i8* %73, i64 %75, i32 %76) #15, !dbg !5206
  %78 = trunc i64 %77 to i32, !dbg !5206
  store i32 %78, i32* %13, align 4, !dbg !5198
  %79 = load i32, i32* %13, align 4, !dbg !5207
  %80 = icmp eq i32 %79, -1, !dbg !5209
  br i1 %80, label %81, label %82, !dbg !5210

81:                                               ; preds = %63
  store i32 -1, i32* %5, align 4, !dbg !5211
  br label %112, !dbg !5211

82:                                               ; preds = %63
  %83 = load i32, i32* %13, align 4, !dbg !5212
  %84 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %10, align 8, !dbg !5213
  %85 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %84, i32 0, i32 0, !dbg !5214
  store i32 %83, i32* %85, align 8, !dbg !5215
  %86 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %10, align 8, !dbg !5216
  %87 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %86, i32 0, i32 1, !dbg !5217
  store i32 1, i32* %87, align 4, !dbg !5218
  %88 = load i32, i32* %8, align 4, !dbg !5219
  %89 = and i32 %88, 3, !dbg !5221
  %90 = icmp eq i32 %89, 0, !dbg !5222
  br i1 %90, label %91, label %96, !dbg !5223

91:                                               ; preds = %82
  %92 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %10, align 8, !dbg !5224
  %93 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %92, i32 0, i32 1, !dbg !5226
  %94 = load i32, i32* %93, align 4, !dbg !5227
  %95 = or i32 %94, 4, !dbg !5227
  store i32 %95, i32* %93, align 4, !dbg !5227
  br label %110, !dbg !5228

96:                                               ; preds = %82
  %97 = load i32, i32* %8, align 4, !dbg !5229
  %98 = and i32 %97, 3, !dbg !5231
  %99 = icmp eq i32 %98, 1, !dbg !5232
  br i1 %99, label %100, label %105, !dbg !5233

100:                                              ; preds = %96
  %101 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %10, align 8, !dbg !5234
  %102 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %101, i32 0, i32 1, !dbg !5236
  %103 = load i32, i32* %102, align 4, !dbg !5237
  %104 = or i32 %103, 8, !dbg !5237
  store i32 %104, i32* %102, align 4, !dbg !5237
  br label %110, !dbg !5238

105:                                              ; preds = %96
  %106 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %10, align 8, !dbg !5239
  %107 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %106, i32 0, i32 1, !dbg !5241
  %108 = load i32, i32* %107, align 4, !dbg !5242
  %109 = or i32 %108, 12, !dbg !5242
  store i32 %109, i32* %107, align 4, !dbg !5242
  br label %110

110:                                              ; preds = %100, %105, %91
  %111 = load i32, i32* %11, align 4, !dbg !5243
  store i32 %111, i32* %5, align 4, !dbg !5244
  br label %112, !dbg !5244

112:                                              ; preds = %110, %81, %61, %38, %28, %21
  %113 = load i32, i32* %5, align 4, !dbg !5245
  ret i32 %113, !dbg !5245
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.exe_file_t.17* @__get_file(i32 %0) #0 !dbg !5246 {
  %2 = alloca %struct.exe_file_t.17*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.exe_file_t.17*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5249, metadata !DIExpression()), !dbg !5250
  %5 = load i32, i32* %3, align 4, !dbg !5251
  %6 = icmp sge i32 %5, 0, !dbg !5253
  %7 = load i32, i32* %3, align 4
  %8 = icmp slt i32 %7, 32
  %or.cond = and i1 %6, %8, !dbg !5254
  br i1 %or.cond, label %9, label %20, !dbg !5254

9:                                                ; preds = %1
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %4, metadata !5255, metadata !DIExpression()), !dbg !5257
  %10 = load i32, i32* %3, align 4, !dbg !5258
  %11 = sext i32 %10 to i64, !dbg !5259
  %12 = getelementptr inbounds [32 x %struct.exe_file_t.17], [32 x %struct.exe_file_t.17]* getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32 }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 0), i64 0, i64 %11, !dbg !5259
  store %struct.exe_file_t.17* %12, %struct.exe_file_t.17** %4, align 8, !dbg !5257
  %13 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %4, align 8, !dbg !5260
  %14 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %13, i32 0, i32 1, !dbg !5262
  %15 = load i32, i32* %14, align 4, !dbg !5262
  %16 = and i32 %15, 1, !dbg !5263
  %17 = icmp ne i32 %16, 0, !dbg !5263
  br i1 %17, label %18, label %20, !dbg !5264

18:                                               ; preds = %9
  %19 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %4, align 8, !dbg !5265
  store %struct.exe_file_t.17* %19, %struct.exe_file_t.17** %2, align 8, !dbg !5266
  br label %21, !dbg !5266

20:                                               ; preds = %9, %1
  store %struct.exe_file_t.17* null, %struct.exe_file_t.17** %2, align 8, !dbg !5267
  br label %21, !dbg !5267

21:                                               ; preds = %20, %18
  %22 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %2, align 8, !dbg !5268
  ret %struct.exe_file_t.17* %22, !dbg !5268
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @utimes(i8* nonnull %0, %struct.timespec.14* %1) #0 !dbg !5269 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca %struct.timespec.14*, align 8
  %6 = alloca %struct.exe_disk_file_t.16*, align 8
  %7 = alloca [2 x %struct.timespec.14], align 16
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5280, metadata !DIExpression()), !dbg !5281
  store %struct.timespec.14* %1, %struct.timespec.14** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec.14** %5, metadata !5282, metadata !DIExpression()), !dbg !5283
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %6, metadata !5284, metadata !DIExpression()), !dbg !5285
  %8 = load i8*, i8** %4, align 8, !dbg !5286
  %9 = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %8), !dbg !5287
  store %struct.exe_disk_file_t.16* %9, %struct.exe_disk_file_t.16** %6, align 8, !dbg !5285
  %10 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %6, align 8, !dbg !5288
  %11 = icmp ne %struct.exe_disk_file_t.16* %10, null, !dbg !5288
  br i1 %11, label %12, label %43, !dbg !5290

12:                                               ; preds = %2
  %13 = load %struct.timespec.14*, %struct.timespec.14** %5, align 8, !dbg !5291
  %14 = icmp ne %struct.timespec.14* %13, null, !dbg !5291
  br i1 %14, label %24, label %15, !dbg !5294

15:                                               ; preds = %12
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec.14]* %7, metadata !5295, metadata !DIExpression()), !dbg !5298
  %16 = getelementptr inbounds [2 x %struct.timespec.14], [2 x %struct.timespec.14]* %7, i64 0, i64 0, !dbg !5299
  %17 = call i32 @gettimeofday(%struct.timespec.14* %16, i8* null) #15, !dbg !5300
  %18 = getelementptr inbounds [2 x %struct.timespec.14], [2 x %struct.timespec.14]* %7, i64 0, i64 1, !dbg !5301
  %19 = getelementptr inbounds [2 x %struct.timespec.14], [2 x %struct.timespec.14]* %7, i64 0, i64 0, !dbg !5302
  %20 = bitcast %struct.timespec.14* %18 to i8*, !dbg !5302
  %21 = bitcast %struct.timespec.14* %19 to i8*, !dbg !5302
  %22 = call i8* @memcpy(i8* %20, i8* %21, i64 16), !dbg !5302
  %23 = getelementptr inbounds [2 x %struct.timespec.14], [2 x %struct.timespec.14]* %7, i64 0, i64 0, !dbg !5303
  store %struct.timespec.14* %23, %struct.timespec.14** %5, align 8, !dbg !5304
  br label %24, !dbg !5305

24:                                               ; preds = %15, %12
  %25 = load %struct.timespec.14*, %struct.timespec.14** %5, align 8, !dbg !5306
  %26 = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %25, i64 0, !dbg !5306
  %27 = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %26, i32 0, i32 0, !dbg !5307
  %28 = load i64, i64* %27, align 8, !dbg !5307
  %29 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %6, align 8, !dbg !5308
  %30 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %29, i32 0, i32 2, !dbg !5309
  %31 = load %struct.stat64.15*, %struct.stat64.15** %30, align 8, !dbg !5309
  %32 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %31, i32 0, i32 11, !dbg !5310
  %33 = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %32, i32 0, i32 0, !dbg !5310
  store i64 %28, i64* %33, align 8, !dbg !5311
  %34 = load %struct.timespec.14*, %struct.timespec.14** %5, align 8, !dbg !5312
  %35 = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %34, i64 1, !dbg !5312
  %36 = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %35, i32 0, i32 0, !dbg !5313
  %37 = load i64, i64* %36, align 8, !dbg !5313
  %38 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %6, align 8, !dbg !5314
  %39 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %38, i32 0, i32 2, !dbg !5315
  %40 = load %struct.stat64.15*, %struct.stat64.15** %39, align 8, !dbg !5315
  %41 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %40, i32 0, i32 12, !dbg !5316
  %42 = getelementptr inbounds %struct.timespec.14, %struct.timespec.14* %41, i32 0, i32 0, !dbg !5316
  store i64 %37, i64* %42, align 8, !dbg !5317
  store i32 0, i32* %3, align 4, !dbg !5318
  br label %49, !dbg !5318

43:                                               ; preds = %2
  %44 = load i8*, i8** %4, align 8, !dbg !5319
  %45 = call i8* @__concretize_string(i8* %44), !dbg !5320
  %46 = load %struct.timespec.14*, %struct.timespec.14** %5, align 8, !dbg !5321
  %47 = call i64 (i64, ...) @syscall(i64 235, i8* %45, %struct.timespec.14* %46) #15, !dbg !5322
  %48 = trunc i64 %47 to i32, !dbg !5322
  store i32 %48, i32* %3, align 4, !dbg !5323
  br label %49, !dbg !5323

49:                                               ; preds = %43, %24
  %50 = load i32, i32* %3, align 4, !dbg !5324
  ret i32 %50, !dbg !5324
}

; Function Attrs: nounwind
declare dso_local i32 @gettimeofday(%struct.timespec.14*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @futimesat(i32 %0, i8* %1, %struct.timespec.14* %2) #0 !dbg !5325 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca %struct.timespec.14*, align 8
  %8 = alloca %struct.exe_file_t.17*, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5328, metadata !DIExpression()), !dbg !5329
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !5330, metadata !DIExpression()), !dbg !5331
  store %struct.timespec.14* %2, %struct.timespec.14** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec.14** %7, metadata !5332, metadata !DIExpression()), !dbg !5333
  %9 = load i32, i32* %5, align 4, !dbg !5334
  %10 = icmp ne i32 %9, -100, !dbg !5336
  br i1 %10, label %11, label %29, !dbg !5337

11:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %8, metadata !5338, metadata !DIExpression()), !dbg !5340
  %12 = load i32, i32* %5, align 4, !dbg !5341
  %13 = call %struct.exe_file_t.17* @__get_file(i32 %12), !dbg !5342
  store %struct.exe_file_t.17* %13, %struct.exe_file_t.17** %8, align 8, !dbg !5340
  %14 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5343
  %15 = icmp ne %struct.exe_file_t.17* %14, null, !dbg !5343
  br i1 %15, label %18, label %16, !dbg !5345

16:                                               ; preds = %11
  %17 = call i32* @__errno_location() #20, !dbg !5346
  store i32 9, i32* %17, align 4, !dbg !5348
  store i32 -1, i32* %4, align 4, !dbg !5349
  br label %50, !dbg !5349

18:                                               ; preds = %11
  %19 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5350
  %20 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %19, i32 0, i32 3, !dbg !5352
  %21 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %20, align 8, !dbg !5352
  %22 = icmp ne %struct.exe_disk_file_t.16* %21, null, !dbg !5350
  br i1 %22, label %23, label %25, !dbg !5353

23:                                               ; preds = %18
  call void @klee_warning(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2.81, i64 0, i64 0)), !dbg !5354
  %24 = call i32* @__errno_location() #20, !dbg !5356
  store i32 2, i32* %24, align 4, !dbg !5357
  store i32 -1, i32* %4, align 4, !dbg !5358
  br label %50, !dbg !5358

25:                                               ; preds = %18
  %26 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5359
  %27 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %26, i32 0, i32 0, !dbg !5360
  %28 = load i32, i32* %27, align 8, !dbg !5360
  store i32 %28, i32* %5, align 4, !dbg !5361
  br label %29, !dbg !5362

29:                                               ; preds = %25, %3
  %30 = load i8*, i8** %6, align 8, !dbg !5363
  %31 = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %30), !dbg !5365
  %32 = icmp ne %struct.exe_disk_file_t.16* %31, null, !dbg !5365
  br i1 %32, label %33, label %37, !dbg !5366

33:                                               ; preds = %29
  %34 = load i8*, i8** %6, align 8, !dbg !5367
  %35 = load %struct.timespec.14*, %struct.timespec.14** %7, align 8, !dbg !5369
  %36 = call i32 @utimes(i8* %34, %struct.timespec.14* %35) #15, !dbg !5370
  store i32 %36, i32* %4, align 4, !dbg !5371
  br label %50, !dbg !5371

37:                                               ; preds = %29
  %38 = load i32, i32* %5, align 4, !dbg !5372
  %39 = sext i32 %38 to i64, !dbg !5373
  %40 = load i8*, i8** %6, align 8, !dbg !5374
  %41 = icmp ne i8* %40, null, !dbg !5374
  br i1 %41, label %42, label %45, !dbg !5374

42:                                               ; preds = %37
  %43 = load i8*, i8** %6, align 8, !dbg !5375
  %44 = call i8* @__concretize_string(i8* %43), !dbg !5376
  br label %45, !dbg !5374

45:                                               ; preds = %37, %42
  %46 = phi i8* [ %44, %42 ], [ null, %37 ], !dbg !5374
  %47 = load %struct.timespec.14*, %struct.timespec.14** %7, align 8, !dbg !5377
  %48 = call i64 (i64, ...) @syscall(i64 261, i64 %39, i8* %46, %struct.timespec.14* %47) #15, !dbg !5378
  %49 = trunc i64 %48 to i32, !dbg !5378
  store i32 %49, i32* %4, align 4, !dbg !5379
  br label %50, !dbg !5379

50:                                               ; preds = %45, %33, %23, %16
  %51 = load i32, i32* %4, align 4, !dbg !5380
  ret i32 %51, !dbg !5380
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @close(i32 %0) #0 !dbg !511 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.exe_file_t.17*, align 8
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5381, metadata !DIExpression()), !dbg !5382
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %4, metadata !5383, metadata !DIExpression()), !dbg !5384
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5385, metadata !DIExpression()), !dbg !5386
  store i32 0, i32* %5, align 4, !dbg !5386
  %6 = load i32, i32* @close.n_calls, align 4, !dbg !5387
  %7 = add nsw i32 %6, 1, !dbg !5387
  store i32 %7, i32* @close.n_calls, align 4, !dbg !5387
  %8 = load i32, i32* %3, align 4, !dbg !5388
  %9 = call %struct.exe_file_t.17* @__get_file(i32 %8), !dbg !5389
  store %struct.exe_file_t.17* %9, %struct.exe_file_t.17** %4, align 8, !dbg !5390
  %10 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %4, align 8, !dbg !5391
  %11 = icmp ne %struct.exe_file_t.17* %10, null, !dbg !5391
  br i1 %11, label %14, label %12, !dbg !5393

12:                                               ; preds = %1
  %13 = call i32* @__errno_location() #20, !dbg !5394
  store i32 9, i32* %13, align 4, !dbg !5396
  store i32 -1, i32* %2, align 4, !dbg !5397
  br label %31, !dbg !5397

14:                                               ; preds = %1
  %15 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !5398
  %16 = icmp ne i32 %15, 0, !dbg !5400
  br i1 %16, label %17, label %26, !dbg !5401

17:                                               ; preds = %14
  %18 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 8), align 8, !dbg !5402
  %19 = load i32, i32* %18, align 4, !dbg !5403
  %20 = load i32, i32* @close.n_calls, align 4, !dbg !5404
  %21 = icmp eq i32 %19, %20, !dbg !5405
  br i1 %21, label %22, label %26, !dbg !5406

22:                                               ; preds = %17
  %23 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !5407
  %24 = add i32 %23, -1, !dbg !5407
  store i32 %24, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !5407
  %25 = call i32* @__errno_location() #20, !dbg !5409
  store i32 5, i32* %25, align 4, !dbg !5410
  store i32 -1, i32* %2, align 4, !dbg !5411
  br label %31, !dbg !5411

26:                                               ; preds = %17, %14
  %27 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %4, align 8, !dbg !5412
  %28 = bitcast %struct.exe_file_t.17* %27 to i8*, !dbg !5413
  %29 = call i8* @memset(i8* %28, i32 0, i64 24), !dbg !5413
  %30 = load i32, i32* %5, align 4, !dbg !5414
  store i32 %30, i32* %2, align 4, !dbg !5415
  br label %31, !dbg !5415

31:                                               ; preds = %26, %22, %12
  %32 = load i32, i32* %2, align 4, !dbg !5416
  ret i32 %32, !dbg !5416
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @read(i32 %0, i8* %1, i64 %2) #0 !dbg !516 {
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.exe_file_t.17*, align 8
  %9 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5417, metadata !DIExpression()), !dbg !5418
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !5419, metadata !DIExpression()), !dbg !5420
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !5421, metadata !DIExpression()), !dbg !5422
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %8, metadata !5423, metadata !DIExpression()), !dbg !5424
  %10 = load i32, i32* @read.n_calls, align 4, !dbg !5425
  %11 = add nsw i32 %10, 1, !dbg !5425
  store i32 %11, i32* @read.n_calls, align 4, !dbg !5425
  %12 = load i64, i64* %7, align 8, !dbg !5426
  %13 = icmp eq i64 %12, 0, !dbg !5428
  br i1 %13, label %14, label %15, !dbg !5429

14:                                               ; preds = %3
  store i64 0, i64* %4, align 8, !dbg !5430
  br label %154, !dbg !5430

15:                                               ; preds = %3
  %16 = load i8*, i8** %6, align 8, !dbg !5431
  %17 = icmp eq i8* %16, null, !dbg !5433
  br i1 %17, label %18, label %20, !dbg !5434

18:                                               ; preds = %15
  %19 = call i32* @__errno_location() #20, !dbg !5435
  store i32 14, i32* %19, align 4, !dbg !5437
  store i64 -1, i64* %4, align 8, !dbg !5438
  br label %154, !dbg !5438

20:                                               ; preds = %15
  %21 = load i32, i32* %5, align 4, !dbg !5439
  %22 = call %struct.exe_file_t.17* @__get_file(i32 %21), !dbg !5440
  store %struct.exe_file_t.17* %22, %struct.exe_file_t.17** %8, align 8, !dbg !5441
  %23 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5442
  %24 = icmp ne %struct.exe_file_t.17* %23, null, !dbg !5442
  br i1 %24, label %27, label %25, !dbg !5444

25:                                               ; preds = %20
  %26 = call i32* @__errno_location() #20, !dbg !5445
  store i32 9, i32* %26, align 4, !dbg !5447
  store i64 -1, i64* %4, align 8, !dbg !5448
  br label %154, !dbg !5448

27:                                               ; preds = %20
  %28 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !5449
  %29 = icmp ne i32 %28, 0, !dbg !5451
  br i1 %29, label %30, label %39, !dbg !5452

30:                                               ; preds = %27
  %31 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 6), align 8, !dbg !5453
  %32 = load i32, i32* %31, align 4, !dbg !5454
  %33 = load i32, i32* @read.n_calls, align 4, !dbg !5455
  %34 = icmp eq i32 %32, %33, !dbg !5456
  br i1 %34, label %35, label %39, !dbg !5457

35:                                               ; preds = %30
  %36 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !5458
  %37 = add i32 %36, -1, !dbg !5458
  store i32 %37, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !5458
  %38 = call i32* @__errno_location() #20, !dbg !5460
  store i32 5, i32* %38, align 4, !dbg !5461
  store i64 -1, i64* %4, align 8, !dbg !5462
  br label %154, !dbg !5462

39:                                               ; preds = %30, %27
  %40 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5463
  %41 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %40, i32 0, i32 3, !dbg !5465
  %42 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %41, align 8, !dbg !5465
  %43 = icmp ne %struct.exe_disk_file_t.16* %42, null, !dbg !5463
  br i1 %43, label %93, label %44, !dbg !5466

44:                                               ; preds = %39
  call void @llvm.dbg.declare(metadata i32* %9, metadata !5467, metadata !DIExpression()), !dbg !5469
  %45 = load i8*, i8** %6, align 8, !dbg !5470
  %46 = call i8* @__concretize_ptr(i8* %45), !dbg !5471
  store i8* %46, i8** %6, align 8, !dbg !5472
  %47 = load i64, i64* %7, align 8, !dbg !5473
  %48 = call i64 @__concretize_size(i64 %47), !dbg !5474
  store i64 %48, i64* %7, align 8, !dbg !5475
  %49 = load i8*, i8** %6, align 8, !dbg !5476
  %50 = load i64, i64* %7, align 8, !dbg !5477
  call void @klee_check_memory_access(i8* %49, i64 %50), !dbg !5478
  %51 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5479
  %52 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %51, i32 0, i32 0, !dbg !5481
  %53 = load i32, i32* %52, align 8, !dbg !5481
  %54 = icmp eq i32 %53, 0, !dbg !5482
  br i1 %54, label %55, label %63, !dbg !5483

55:                                               ; preds = %44
  %56 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5484
  %57 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %56, i32 0, i32 0, !dbg !5485
  %58 = load i32, i32* %57, align 8, !dbg !5485
  %59 = load i8*, i8** %6, align 8, !dbg !5486
  %60 = load i64, i64* %7, align 8, !dbg !5487
  %61 = call i64 (i64, ...) @syscall(i64 0, i32 %58, i8* %59, i64 %60) #15, !dbg !5488
  %62 = trunc i64 %61 to i32, !dbg !5488
  store i32 %62, i32* %9, align 4, !dbg !5489
  br label %74, !dbg !5490

63:                                               ; preds = %44
  %64 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5491
  %65 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %64, i32 0, i32 0, !dbg !5492
  %66 = load i32, i32* %65, align 8, !dbg !5492
  %67 = load i8*, i8** %6, align 8, !dbg !5493
  %68 = load i64, i64* %7, align 8, !dbg !5494
  %69 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5495
  %70 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %69, i32 0, i32 2, !dbg !5496
  %71 = load i64, i64* %70, align 8, !dbg !5496
  %72 = call i64 (i64, ...) @syscall(i64 17, i32 %66, i8* %67, i64 %68, i64 %71) #15, !dbg !5497
  %73 = trunc i64 %72 to i32, !dbg !5497
  store i32 %73, i32* %9, align 4, !dbg !5498
  br label %74

74:                                               ; preds = %63, %55
  %75 = load i32, i32* %9, align 4, !dbg !5499
  %76 = icmp eq i32 %75, -1, !dbg !5501
  br i1 %76, label %77, label %78, !dbg !5502

77:                                               ; preds = %74
  store i64 -1, i64* %4, align 8, !dbg !5503
  br label %154, !dbg !5503

78:                                               ; preds = %74
  %79 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5504
  %80 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %79, i32 0, i32 0, !dbg !5506
  %81 = load i32, i32* %80, align 8, !dbg !5506
  %82 = icmp ne i32 %81, 0, !dbg !5507
  br i1 %82, label %83, label %90, !dbg !5508

83:                                               ; preds = %78
  %84 = load i32, i32* %9, align 4, !dbg !5509
  %85 = sext i32 %84 to i64, !dbg !5509
  %86 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5510
  %87 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %86, i32 0, i32 2, !dbg !5511
  %88 = load i64, i64* %87, align 8, !dbg !5512
  %89 = add nsw i64 %88, %85, !dbg !5512
  store i64 %89, i64* %87, align 8, !dbg !5512
  br label %90, !dbg !5510

90:                                               ; preds = %83, %78
  %91 = load i32, i32* %9, align 4, !dbg !5513
  %92 = sext i32 %91 to i64, !dbg !5513
  store i64 %92, i64* %4, align 8, !dbg !5514
  br label %154, !dbg !5514

93:                                               ; preds = %39
  %94 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5515
  %95 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %94, i32 0, i32 2, !dbg !5515
  %96 = load i64, i64* %95, align 8, !dbg !5515
  %97 = icmp sge i64 %96, 0, !dbg !5515
  br i1 %97, label %99, label %98, !dbg !5519

98:                                               ; preds = %93
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.82, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.83, i64 0, i64 0), i32 393, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__PRETTY_FUNCTION__.read, i64 0, i64 0)) #17, !dbg !5515
  unreachable, !dbg !5515

99:                                               ; preds = %93
  %100 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5520
  %101 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %100, i32 0, i32 3, !dbg !5522
  %102 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %101, align 8, !dbg !5522
  %103 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %102, i32 0, i32 0, !dbg !5523
  %104 = load i32, i32* %103, align 8, !dbg !5523
  %105 = zext i32 %104 to i64, !dbg !5524
  %106 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5525
  %107 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %106, i32 0, i32 2, !dbg !5526
  %108 = load i64, i64* %107, align 8, !dbg !5526
  %109 = icmp slt i64 %105, %108, !dbg !5527
  br i1 %109, label %110, label %111, !dbg !5528

110:                                              ; preds = %99
  store i64 0, i64* %4, align 8, !dbg !5529
  br label %154, !dbg !5529

111:                                              ; preds = %99
  %112 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5530
  %113 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %112, i32 0, i32 2, !dbg !5532
  %114 = load i64, i64* %113, align 8, !dbg !5532
  %115 = load i64, i64* %7, align 8, !dbg !5533
  %116 = add i64 %114, %115, !dbg !5534
  %117 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5535
  %118 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %117, i32 0, i32 3, !dbg !5536
  %119 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %118, align 8, !dbg !5536
  %120 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %119, i32 0, i32 0, !dbg !5537
  %121 = load i32, i32* %120, align 8, !dbg !5537
  %122 = zext i32 %121 to i64, !dbg !5535
  %123 = icmp ugt i64 %116, %122, !dbg !5538
  br i1 %123, label %124, label %135, !dbg !5539

124:                                              ; preds = %111
  %125 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5540
  %126 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %125, i32 0, i32 3, !dbg !5542
  %127 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %126, align 8, !dbg !5542
  %128 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %127, i32 0, i32 0, !dbg !5543
  %129 = load i32, i32* %128, align 8, !dbg !5543
  %130 = zext i32 %129 to i64, !dbg !5540
  %131 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5544
  %132 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %131, i32 0, i32 2, !dbg !5545
  %133 = load i64, i64* %132, align 8, !dbg !5545
  %134 = sub nsw i64 %130, %133, !dbg !5546
  store i64 %134, i64* %7, align 8, !dbg !5547
  br label %135, !dbg !5548

135:                                              ; preds = %124, %111
  %136 = load i8*, i8** %6, align 8, !dbg !5549
  %137 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5550
  %138 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %137, i32 0, i32 3, !dbg !5551
  %139 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %138, align 8, !dbg !5551
  %140 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %139, i32 0, i32 1, !dbg !5552
  %141 = load i8*, i8** %140, align 8, !dbg !5552
  %142 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5553
  %143 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %142, i32 0, i32 2, !dbg !5554
  %144 = load i64, i64* %143, align 8, !dbg !5554
  %145 = getelementptr inbounds i8, i8* %141, i64 %144, !dbg !5555
  %146 = load i64, i64* %7, align 8, !dbg !5556
  %147 = call i8* @memcpy(i8* %136, i8* %145, i64 %146), !dbg !5557
  %148 = load i64, i64* %7, align 8, !dbg !5558
  %149 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5559
  %150 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %149, i32 0, i32 2, !dbg !5560
  %151 = load i64, i64* %150, align 8, !dbg !5561
  %152 = add i64 %151, %148, !dbg !5561
  store i64 %152, i64* %150, align 8, !dbg !5561
  %153 = load i64, i64* %7, align 8, !dbg !5562
  store i64 %153, i64* %4, align 8, !dbg !5563
  br label %154, !dbg !5563

154:                                              ; preds = %135, %110, %90, %77, %35, %25, %18, %14
  %155 = load i64, i64* %4, align 8, !dbg !5564
  ret i64 %155, !dbg !5564
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @write(i32 %0, i8* %1, i64 %2) #0 !dbg !523 {
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.exe_file_t.17*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5565, metadata !DIExpression()), !dbg !5566
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !5567, metadata !DIExpression()), !dbg !5568
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !5569, metadata !DIExpression()), !dbg !5570
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %8, metadata !5571, metadata !DIExpression()), !dbg !5572
  %11 = load i32, i32* @write.n_calls, align 4, !dbg !5573
  %12 = add nsw i32 %11, 1, !dbg !5573
  store i32 %12, i32* @write.n_calls, align 4, !dbg !5573
  %13 = load i32, i32* %5, align 4, !dbg !5574
  %14 = call %struct.exe_file_t.17* @__get_file(i32 %13), !dbg !5575
  store %struct.exe_file_t.17* %14, %struct.exe_file_t.17** %8, align 8, !dbg !5576
  %15 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5577
  %16 = icmp ne %struct.exe_file_t.17* %15, null, !dbg !5577
  br i1 %16, label %19, label %17, !dbg !5579

17:                                               ; preds = %3
  %18 = call i32* @__errno_location() #20, !dbg !5580
  store i32 9, i32* %18, align 4, !dbg !5582
  store i64 -1, i64* %4, align 8, !dbg !5583
  br label %180, !dbg !5583

19:                                               ; preds = %3
  %20 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !5584
  %21 = icmp ne i32 %20, 0, !dbg !5586
  br i1 %21, label %22, label %31, !dbg !5587

22:                                               ; preds = %19
  %23 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 7), align 8, !dbg !5588
  %24 = load i32, i32* %23, align 4, !dbg !5589
  %25 = load i32, i32* @write.n_calls, align 4, !dbg !5590
  %26 = icmp eq i32 %24, %25, !dbg !5591
  br i1 %26, label %27, label %31, !dbg !5592

27:                                               ; preds = %22
  %28 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !5593
  %29 = add i32 %28, -1, !dbg !5593
  store i32 %29, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !5593
  %30 = call i32* @__errno_location() #20, !dbg !5595
  store i32 5, i32* %30, align 4, !dbg !5596
  store i64 -1, i64* %4, align 8, !dbg !5597
  br label %180, !dbg !5597

31:                                               ; preds = %22, %19
  %32 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5598
  %33 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %32, i32 0, i32 3, !dbg !5600
  %34 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %33, align 8, !dbg !5600
  %35 = icmp ne %struct.exe_disk_file_t.16* %34, null, !dbg !5598
  br i1 %35, label %99, label %36, !dbg !5601

36:                                               ; preds = %31
  call void @llvm.dbg.declare(metadata i32* %9, metadata !5602, metadata !DIExpression()), !dbg !5604
  %37 = load i8*, i8** %6, align 8, !dbg !5605
  %38 = call i8* @__concretize_ptr(i8* %37), !dbg !5606
  store i8* %38, i8** %6, align 8, !dbg !5607
  %39 = load i64, i64* %7, align 8, !dbg !5608
  %40 = call i64 @__concretize_size(i64 %39), !dbg !5609
  store i64 %40, i64* %7, align 8, !dbg !5610
  %41 = load i8*, i8** %6, align 8, !dbg !5611
  %42 = load i64, i64* %7, align 8, !dbg !5612
  call void @klee_check_memory_access(i8* %41, i64 %42), !dbg !5613
  %43 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5614
  %44 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %43, i32 0, i32 0, !dbg !5616
  %45 = load i32, i32* %44, align 8, !dbg !5616
  %46 = icmp eq i32 %45, 1, !dbg !5617
  br i1 %46, label %52, label %47, !dbg !5618

47:                                               ; preds = %36
  %48 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5619
  %49 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %48, i32 0, i32 0, !dbg !5620
  %50 = load i32, i32* %49, align 8, !dbg !5620
  %51 = icmp eq i32 %50, 2, !dbg !5621
  br i1 %51, label %52, label %60, !dbg !5622

52:                                               ; preds = %47, %36
  %53 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5623
  %54 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %53, i32 0, i32 0, !dbg !5624
  %55 = load i32, i32* %54, align 8, !dbg !5624
  %56 = load i8*, i8** %6, align 8, !dbg !5625
  %57 = load i64, i64* %7, align 8, !dbg !5626
  %58 = call i64 (i64, ...) @syscall(i64 1, i32 %55, i8* %56, i64 %57) #15, !dbg !5627
  %59 = trunc i64 %58 to i32, !dbg !5627
  store i32 %59, i32* %9, align 4, !dbg !5628
  br label %71, !dbg !5629

60:                                               ; preds = %47
  %61 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5630
  %62 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %61, i32 0, i32 0, !dbg !5631
  %63 = load i32, i32* %62, align 8, !dbg !5631
  %64 = load i8*, i8** %6, align 8, !dbg !5632
  %65 = load i64, i64* %7, align 8, !dbg !5633
  %66 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5634
  %67 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %66, i32 0, i32 2, !dbg !5635
  %68 = load i64, i64* %67, align 8, !dbg !5635
  %69 = call i64 (i64, ...) @syscall(i64 18, i32 %63, i8* %64, i64 %65, i64 %68) #15, !dbg !5636
  %70 = trunc i64 %69 to i32, !dbg !5636
  store i32 %70, i32* %9, align 4, !dbg !5637
  br label %71

71:                                               ; preds = %60, %52
  %72 = load i32, i32* %9, align 4, !dbg !5638
  %73 = icmp eq i32 %72, -1, !dbg !5640
  br i1 %73, label %74, label %75, !dbg !5641

74:                                               ; preds = %71
  store i64 -1, i64* %4, align 8, !dbg !5642
  br label %180, !dbg !5642

75:                                               ; preds = %71
  %76 = load i32, i32* %9, align 4, !dbg !5643
  %77 = icmp sge i32 %76, 0, !dbg !5643
  br i1 %77, label %79, label %78, !dbg !5646

78:                                               ; preds = %75
  call void @__assert_fail(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5.84, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.83, i64 0, i64 0), i32 445, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__PRETTY_FUNCTION__.write, i64 0, i64 0)) #17, !dbg !5643
  unreachable, !dbg !5643

79:                                               ; preds = %75
  %80 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5647
  %81 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %80, i32 0, i32 0, !dbg !5649
  %82 = load i32, i32* %81, align 8, !dbg !5649
  %83 = icmp ne i32 %82, 1, !dbg !5650
  br i1 %83, label %84, label %96, !dbg !5651

84:                                               ; preds = %79
  %85 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5652
  %86 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %85, i32 0, i32 0, !dbg !5653
  %87 = load i32, i32* %86, align 8, !dbg !5653
  %88 = icmp ne i32 %87, 2, !dbg !5654
  br i1 %88, label %89, label %96, !dbg !5655

89:                                               ; preds = %84
  %90 = load i32, i32* %9, align 4, !dbg !5656
  %91 = sext i32 %90 to i64, !dbg !5656
  %92 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5657
  %93 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %92, i32 0, i32 2, !dbg !5658
  %94 = load i64, i64* %93, align 8, !dbg !5659
  %95 = add nsw i64 %94, %91, !dbg !5659
  store i64 %95, i64* %93, align 8, !dbg !5659
  br label %96, !dbg !5657

96:                                               ; preds = %89, %84, %79
  %97 = load i32, i32* %9, align 4, !dbg !5660
  %98 = sext i32 %97 to i64, !dbg !5660
  store i64 %98, i64* %4, align 8, !dbg !5661
  br label %180, !dbg !5661

99:                                               ; preds = %31
  call void @llvm.dbg.declare(metadata i64* %10, metadata !5662, metadata !DIExpression()), !dbg !5664
  store i64 0, i64* %10, align 8, !dbg !5664
  %100 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5665
  %101 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %100, i32 0, i32 2, !dbg !5667
  %102 = load i64, i64* %101, align 8, !dbg !5667
  %103 = load i64, i64* %7, align 8, !dbg !5668
  %104 = add i64 %102, %103, !dbg !5669
  %105 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5670
  %106 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %105, i32 0, i32 3, !dbg !5671
  %107 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %106, align 8, !dbg !5671
  %108 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %107, i32 0, i32 0, !dbg !5672
  %109 = load i32, i32* %108, align 8, !dbg !5672
  %110 = zext i32 %109 to i64, !dbg !5670
  %111 = icmp ule i64 %104, %110, !dbg !5673
  br i1 %111, label %112, label %114, !dbg !5674

112:                                              ; preds = %99
  %113 = load i64, i64* %7, align 8, !dbg !5675
  store i64 %113, i64* %10, align 8, !dbg !5676
  br label %140, !dbg !5677

114:                                              ; preds = %99
  %115 = load i32, i32* getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32 }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 2), align 4, !dbg !5678
  %116 = icmp ne i32 %115, 0, !dbg !5681
  br i1 %116, label %117, label %118, !dbg !5682

117:                                              ; preds = %114
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.85, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.83, i64 0, i64 0), i32 458, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__PRETTY_FUNCTION__.write, i64 0, i64 0)) #17, !dbg !5683
  unreachable, !dbg !5683

118:                                              ; preds = %114
  %119 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5686
  %120 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %119, i32 0, i32 2, !dbg !5689
  %121 = load i64, i64* %120, align 8, !dbg !5689
  %122 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5690
  %123 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %122, i32 0, i32 3, !dbg !5691
  %124 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %123, align 8, !dbg !5691
  %125 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %124, i32 0, i32 0, !dbg !5692
  %126 = load i32, i32* %125, align 8, !dbg !5692
  %127 = zext i32 %126 to i64, !dbg !5693
  %128 = icmp slt i64 %121, %127, !dbg !5694
  br i1 %128, label %129, label %140, !dbg !5695

129:                                              ; preds = %118
  %130 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5696
  %131 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %130, i32 0, i32 3, !dbg !5697
  %132 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %131, align 8, !dbg !5697
  %133 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %132, i32 0, i32 0, !dbg !5698
  %134 = load i32, i32* %133, align 8, !dbg !5698
  %135 = zext i32 %134 to i64, !dbg !5696
  %136 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5699
  %137 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %136, i32 0, i32 2, !dbg !5700
  %138 = load i64, i64* %137, align 8, !dbg !5700
  %139 = sub nsw i64 %135, %138, !dbg !5701
  store i64 %139, i64* %10, align 8, !dbg !5702
  br label %140, !dbg !5703

140:                                              ; preds = %129, %118, %112
  %141 = load i64, i64* %10, align 8, !dbg !5704
  %142 = icmp ne i64 %141, 0, !dbg !5704
  br i1 %142, label %143, label %156, !dbg !5706

143:                                              ; preds = %140
  %144 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5707
  %145 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %144, i32 0, i32 3, !dbg !5708
  %146 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %145, align 8, !dbg !5708
  %147 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %146, i32 0, i32 1, !dbg !5709
  %148 = load i8*, i8** %147, align 8, !dbg !5709
  %149 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5710
  %150 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %149, i32 0, i32 2, !dbg !5711
  %151 = load i64, i64* %150, align 8, !dbg !5711
  %152 = getelementptr inbounds i8, i8* %148, i64 %151, !dbg !5712
  %153 = load i8*, i8** %6, align 8, !dbg !5713
  %154 = load i64, i64* %10, align 8, !dbg !5714
  %155 = call i8* @memcpy(i8* %152, i8* %153, i64 %154), !dbg !5715
  br label %156, !dbg !5715

156:                                              ; preds = %143, %140
  %157 = load i64, i64* %7, align 8, !dbg !5716
  %158 = load i64, i64* %10, align 8, !dbg !5718
  %159 = icmp ne i64 %157, %158, !dbg !5719
  br i1 %159, label %160, label %161, !dbg !5720

160:                                              ; preds = %156
  call void @klee_warning(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.86, i64 0, i64 0)), !dbg !5721
  br label %161, !dbg !5721

161:                                              ; preds = %160, %156
  %162 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5722
  %163 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %162, i32 0, i32 3, !dbg !5724
  %164 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %163, align 8, !dbg !5724
  %165 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 2), align 8, !dbg !5725
  %166 = icmp eq %struct.exe_disk_file_t.16* %164, %165, !dbg !5726
  br i1 %166, label %167, label %173, !dbg !5727

167:                                              ; preds = %161
  %168 = load i64, i64* %10, align 8, !dbg !5728
  %169 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 3), align 8, !dbg !5729
  %170 = zext i32 %169 to i64, !dbg !5729
  %171 = add i64 %170, %168, !dbg !5729
  %172 = trunc i64 %171 to i32, !dbg !5729
  store i32 %172, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 3), align 8, !dbg !5729
  br label %173, !dbg !5730

173:                                              ; preds = %167, %161
  %174 = load i64, i64* %7, align 8, !dbg !5731
  %175 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !5732
  %176 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %175, i32 0, i32 2, !dbg !5733
  %177 = load i64, i64* %176, align 8, !dbg !5734
  %178 = add i64 %177, %174, !dbg !5734
  store i64 %178, i64* %176, align 8, !dbg !5734
  %179 = load i64, i64* %7, align 8, !dbg !5735
  store i64 %179, i64* %4, align 8, !dbg !5736
  br label %180, !dbg !5736

180:                                              ; preds = %173, %96, %74, %27, %17
  %181 = load i64, i64* %4, align 8, !dbg !5737
  ret i64 %181, !dbg !5737
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @__fd_lseek(i32 %0, i64 %1, i32 %2) #0 !dbg !5738 {
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca %struct.exe_file_t.17*, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5741, metadata !DIExpression()), !dbg !5742
  store i64 %1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !5743, metadata !DIExpression()), !dbg !5744
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !5745, metadata !DIExpression()), !dbg !5746
  call void @llvm.dbg.declare(metadata i64* %8, metadata !5747, metadata !DIExpression()), !dbg !5748
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %9, metadata !5749, metadata !DIExpression()), !dbg !5750
  %10 = load i32, i32* %5, align 4, !dbg !5751
  %11 = call %struct.exe_file_t.17* @__get_file(i32 %10), !dbg !5752
  store %struct.exe_file_t.17* %11, %struct.exe_file_t.17** %9, align 8, !dbg !5750
  %12 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %9, align 8, !dbg !5753
  %13 = icmp ne %struct.exe_file_t.17* %12, null, !dbg !5753
  br i1 %13, label %16, label %14, !dbg !5755

14:                                               ; preds = %3
  %15 = call i32* @__errno_location() #20, !dbg !5756
  store i32 9, i32* %15, align 4, !dbg !5758
  store i64 -1, i64* %4, align 8, !dbg !5759
  br label %96, !dbg !5759

16:                                               ; preds = %3
  %17 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %9, align 8, !dbg !5760
  %18 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %17, i32 0, i32 3, !dbg !5762
  %19 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %18, align 8, !dbg !5762
  %20 = icmp ne %struct.exe_disk_file_t.16* %19, null, !dbg !5760
  br i1 %20, label %63, label %21, !dbg !5763

21:                                               ; preds = %16
  %22 = load i32, i32* %7, align 4, !dbg !5764
  %23 = icmp eq i32 %22, 0, !dbg !5767
  br i1 %23, label %24, label %30, !dbg !5768

24:                                               ; preds = %21
  %25 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %9, align 8, !dbg !5769
  %26 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %25, i32 0, i32 0, !dbg !5771
  %27 = load i32, i32* %26, align 8, !dbg !5771
  %28 = load i64, i64* %6, align 8, !dbg !5772
  %29 = call i64 (i64, ...) @syscall(i64 8, i32 %27, i64 %28, i32 0) #15, !dbg !5773
  store i64 %29, i64* %8, align 8, !dbg !5774
  br label %54, !dbg !5775

30:                                               ; preds = %21
  %31 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %9, align 8, !dbg !5776
  %32 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %31, i32 0, i32 0, !dbg !5778
  %33 = load i32, i32* %32, align 8, !dbg !5778
  %34 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %9, align 8, !dbg !5779
  %35 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %34, i32 0, i32 2, !dbg !5780
  %36 = load i64, i64* %35, align 8, !dbg !5780
  %37 = call i64 (i64, ...) @syscall(i64 8, i32 %33, i64 %36, i32 0) #15, !dbg !5781
  store i64 %37, i64* %8, align 8, !dbg !5782
  %38 = load i64, i64* %8, align 8, !dbg !5783
  %39 = icmp ne i64 %38, -1, !dbg !5785
  br i1 %39, label %40, label %54, !dbg !5786

40:                                               ; preds = %30
  %41 = load i64, i64* %8, align 8, !dbg !5787
  %42 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %9, align 8, !dbg !5787
  %43 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %42, i32 0, i32 2, !dbg !5787
  %44 = load i64, i64* %43, align 8, !dbg !5787
  %45 = icmp eq i64 %41, %44, !dbg !5787
  br i1 %45, label %47, label %46, !dbg !5791

46:                                               ; preds = %40
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8.89, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.83, i64 0, i64 0), i32 504, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__PRETTY_FUNCTION__.__fd_lseek, i64 0, i64 0)) #17, !dbg !5787
  unreachable, !dbg !5787

47:                                               ; preds = %40
  %48 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %9, align 8, !dbg !5792
  %49 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %48, i32 0, i32 0, !dbg !5793
  %50 = load i32, i32* %49, align 8, !dbg !5793
  %51 = load i64, i64* %6, align 8, !dbg !5794
  %52 = load i32, i32* %7, align 4, !dbg !5795
  %53 = call i64 (i64, ...) @syscall(i64 8, i32 %50, i64 %51, i32 %52) #15, !dbg !5796
  store i64 %53, i64* %8, align 8, !dbg !5797
  br label %54, !dbg !5798

54:                                               ; preds = %30, %47, %24
  %55 = load i64, i64* %8, align 8, !dbg !5799
  %56 = icmp eq i64 %55, -1, !dbg !5801
  br i1 %56, label %57, label %58, !dbg !5802

57:                                               ; preds = %54
  store i64 -1, i64* %4, align 8, !dbg !5803
  br label %96, !dbg !5803

58:                                               ; preds = %54
  %59 = load i64, i64* %8, align 8, !dbg !5804
  %60 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %9, align 8, !dbg !5805
  %61 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %60, i32 0, i32 2, !dbg !5806
  store i64 %59, i64* %61, align 8, !dbg !5807
  %62 = load i64, i64* %8, align 8, !dbg !5808
  store i64 %62, i64* %4, align 8, !dbg !5809
  br label %96, !dbg !5809

63:                                               ; preds = %16
  %64 = load i32, i32* %7, align 4, !dbg !5810
  switch i32 %64, label %82 [
    i32 0, label %65
    i32 1, label %67
    i32 2, label %73
  ], !dbg !5811

65:                                               ; preds = %63
  %66 = load i64, i64* %6, align 8, !dbg !5812
  store i64 %66, i64* %8, align 8, !dbg !5814
  br label %84, !dbg !5815

67:                                               ; preds = %63
  %68 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %9, align 8, !dbg !5816
  %69 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %68, i32 0, i32 2, !dbg !5817
  %70 = load i64, i64* %69, align 8, !dbg !5817
  %71 = load i64, i64* %6, align 8, !dbg !5818
  %72 = add nsw i64 %70, %71, !dbg !5819
  store i64 %72, i64* %8, align 8, !dbg !5820
  br label %84, !dbg !5821

73:                                               ; preds = %63
  %74 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %9, align 8, !dbg !5822
  %75 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %74, i32 0, i32 3, !dbg !5823
  %76 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %75, align 8, !dbg !5823
  %77 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %76, i32 0, i32 0, !dbg !5824
  %78 = load i32, i32* %77, align 8, !dbg !5824
  %79 = zext i32 %78 to i64, !dbg !5822
  %80 = load i64, i64* %6, align 8, !dbg !5825
  %81 = add nsw i64 %79, %80, !dbg !5826
  store i64 %81, i64* %8, align 8, !dbg !5827
  br label %84, !dbg !5828

82:                                               ; preds = %63
  %83 = call i32* @__errno_location() #20, !dbg !5829
  store i32 22, i32* %83, align 4, !dbg !5831
  store i64 -1, i64* %4, align 8, !dbg !5832
  br label %96, !dbg !5832

84:                                               ; preds = %73, %67, %65
  %85 = load i64, i64* %8, align 8, !dbg !5833
  %86 = icmp slt i64 %85, 0, !dbg !5835
  br i1 %86, label %87, label %89, !dbg !5836

87:                                               ; preds = %84
  %88 = call i32* @__errno_location() #20, !dbg !5837
  store i32 22, i32* %88, align 4, !dbg !5839
  store i64 -1, i64* %4, align 8, !dbg !5840
  br label %96, !dbg !5840

89:                                               ; preds = %84
  %90 = load i64, i64* %8, align 8, !dbg !5841
  %91 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %9, align 8, !dbg !5842
  %92 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %91, i32 0, i32 2, !dbg !5843
  store i64 %90, i64* %92, align 8, !dbg !5844
  %93 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %9, align 8, !dbg !5845
  %94 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %93, i32 0, i32 2, !dbg !5846
  %95 = load i64, i64* %94, align 8, !dbg !5846
  store i64 %95, i64* %4, align 8, !dbg !5847
  br label %96, !dbg !5847

96:                                               ; preds = %89, %87, %82, %58, %57, %14
  %97 = load i64, i64* %4, align 8, !dbg !5848
  ret i64 %97, !dbg !5848
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @__fd_stat(i8* %0, %struct.stat64.15* %1) #0 !dbg !5849 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca %struct.stat64.15*, align 8
  %6 = alloca %struct.exe_disk_file_t.16*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5852, metadata !DIExpression()), !dbg !5853
  store %struct.stat64.15* %1, %struct.stat64.15** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.stat64.15** %5, metadata !5854, metadata !DIExpression()), !dbg !5855
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %6, metadata !5856, metadata !DIExpression()), !dbg !5857
  %7 = load i8*, i8** %4, align 8, !dbg !5858
  %8 = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %7), !dbg !5859
  store %struct.exe_disk_file_t.16* %8, %struct.exe_disk_file_t.16** %6, align 8, !dbg !5857
  %9 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %6, align 8, !dbg !5860
  %10 = icmp ne %struct.exe_disk_file_t.16* %9, null, !dbg !5860
  br i1 %10, label %11, label %19, !dbg !5862

11:                                               ; preds = %2
  %12 = load %struct.stat64.15*, %struct.stat64.15** %5, align 8, !dbg !5863
  %13 = bitcast %struct.stat64.15* %12 to i8*, !dbg !5865
  %14 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %6, align 8, !dbg !5866
  %15 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %14, i32 0, i32 2, !dbg !5867
  %16 = load %struct.stat64.15*, %struct.stat64.15** %15, align 8, !dbg !5867
  %17 = bitcast %struct.stat64.15* %16 to i8*, !dbg !5865
  %18 = call i8* @memcpy(i8* %13, i8* %17, i64 144), !dbg !5865
  store i32 0, i32* %3, align 4, !dbg !5868
  br label %25, !dbg !5868

19:                                               ; preds = %2
  %20 = load i8*, i8** %4, align 8, !dbg !5869
  %21 = call i8* @__concretize_string(i8* %20), !dbg !5871
  %22 = load %struct.stat64.15*, %struct.stat64.15** %5, align 8, !dbg !5872
  %23 = call i64 (i64, ...) @syscall(i64 4, i8* %21, %struct.stat64.15* %22) #15, !dbg !5873
  %24 = trunc i64 %23 to i32, !dbg !5873
  store i32 %24, i32* %3, align 4, !dbg !5874
  br label %25, !dbg !5874

25:                                               ; preds = %19, %11
  %26 = load i32, i32* %3, align 4, !dbg !5875
  ret i32 %26, !dbg !5875
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @fstatat(i32 %0, i8* nonnull %1, %struct.stat64.15* nonnull %2, i32 %3) #0 !dbg !5876 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca %struct.stat64.15*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.exe_file_t.17*, align 8
  %11 = alloca %struct.exe_disk_file_t.16*, align 8
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5879, metadata !DIExpression()), !dbg !5880
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !5881, metadata !DIExpression()), !dbg !5882
  store %struct.stat64.15* %2, %struct.stat64.15** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.stat64.15** %8, metadata !5883, metadata !DIExpression()), !dbg !5884
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !5885, metadata !DIExpression()), !dbg !5886
  %12 = load i32, i32* %6, align 4, !dbg !5887
  %13 = icmp ne i32 %12, -100, !dbg !5889
  br i1 %13, label %14, label %32, !dbg !5890

14:                                               ; preds = %4
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %10, metadata !5891, metadata !DIExpression()), !dbg !5893
  %15 = load i32, i32* %6, align 4, !dbg !5894
  %16 = call %struct.exe_file_t.17* @__get_file(i32 %15), !dbg !5895
  store %struct.exe_file_t.17* %16, %struct.exe_file_t.17** %10, align 8, !dbg !5893
  %17 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %10, align 8, !dbg !5896
  %18 = icmp ne %struct.exe_file_t.17* %17, null, !dbg !5896
  br i1 %18, label %21, label %19, !dbg !5898

19:                                               ; preds = %14
  %20 = call i32* @__errno_location() #20, !dbg !5899
  store i32 9, i32* %20, align 4, !dbg !5901
  store i32 -1, i32* %5, align 4, !dbg !5902
  br label %59, !dbg !5902

21:                                               ; preds = %14
  %22 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %10, align 8, !dbg !5903
  %23 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %22, i32 0, i32 3, !dbg !5905
  %24 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %23, align 8, !dbg !5905
  %25 = icmp ne %struct.exe_disk_file_t.16* %24, null, !dbg !5903
  br i1 %25, label %26, label %28, !dbg !5906

26:                                               ; preds = %21
  call void @klee_warning(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2.81, i64 0, i64 0)), !dbg !5907
  %27 = call i32* @__errno_location() #20, !dbg !5909
  store i32 2, i32* %27, align 4, !dbg !5910
  store i32 -1, i32* %5, align 4, !dbg !5911
  br label %59, !dbg !5911

28:                                               ; preds = %21
  %29 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %10, align 8, !dbg !5912
  %30 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %29, i32 0, i32 0, !dbg !5913
  %31 = load i32, i32* %30, align 8, !dbg !5913
  store i32 %31, i32* %6, align 4, !dbg !5914
  br label %32, !dbg !5915

32:                                               ; preds = %28, %4
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %11, metadata !5916, metadata !DIExpression()), !dbg !5917
  %33 = load i8*, i8** %7, align 8, !dbg !5918
  %34 = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %33), !dbg !5919
  store %struct.exe_disk_file_t.16* %34, %struct.exe_disk_file_t.16** %11, align 8, !dbg !5917
  %35 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %11, align 8, !dbg !5920
  %36 = icmp ne %struct.exe_disk_file_t.16* %35, null, !dbg !5920
  br i1 %36, label %37, label %45, !dbg !5922

37:                                               ; preds = %32
  %38 = load %struct.stat64.15*, %struct.stat64.15** %8, align 8, !dbg !5923
  %39 = bitcast %struct.stat64.15* %38 to i8*, !dbg !5925
  %40 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %11, align 8, !dbg !5926
  %41 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %40, i32 0, i32 2, !dbg !5927
  %42 = load %struct.stat64.15*, %struct.stat64.15** %41, align 8, !dbg !5927
  %43 = bitcast %struct.stat64.15* %42 to i8*, !dbg !5925
  %44 = call i8* @memcpy(i8* %39, i8* %43, i64 144), !dbg !5925
  store i32 0, i32* %5, align 4, !dbg !5928
  br label %59, !dbg !5928

45:                                               ; preds = %32
  %46 = load i8*, i8** %7, align 8, !dbg !5929
  %47 = icmp ne i8* %46, null, !dbg !5929
  br i1 %47, label %49, label %48, !dbg !5932

48:                                               ; preds = %45
  call void @__assert_fail(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9.92, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.83, i64 0, i64 0), i32 574, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__.fstatat, i64 0, i64 0)) #17, !dbg !5929
  unreachable, !dbg !5929

49:                                               ; preds = %45
  %50 = load i32, i32* %6, align 4, !dbg !5933
  %51 = sext i32 %50 to i64, !dbg !5934
  %52 = load i8*, i8** %7, align 8, !dbg !5935
  %53 = call i8* @__concretize_string(i8* %52), !dbg !5935
  %54 = load %struct.stat64.15*, %struct.stat64.15** %8, align 8, !dbg !5936
  %55 = load i32, i32* %9, align 4, !dbg !5937
  %56 = sext i32 %55 to i64, !dbg !5938
  %57 = call i64 (i64, ...) @syscall(i64 262, i64 %51, i8* %53, %struct.stat64.15* %54, i64 %56) #15, !dbg !5939
  %58 = trunc i64 %57 to i32, !dbg !5939
  store i32 %58, i32* %5, align 4, !dbg !5940
  br label %59, !dbg !5940

59:                                               ; preds = %49, %37, %26, %19
  %60 = load i32, i32* %5, align 4, !dbg !5941
  ret i32 %60, !dbg !5941
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @__fd_lstat(i8* %0, %struct.stat64.15* %1) #0 !dbg !5942 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca %struct.stat64.15*, align 8
  %6 = alloca %struct.exe_disk_file_t.16*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5943, metadata !DIExpression()), !dbg !5944
  store %struct.stat64.15* %1, %struct.stat64.15** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.stat64.15** %5, metadata !5945, metadata !DIExpression()), !dbg !5946
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %6, metadata !5947, metadata !DIExpression()), !dbg !5948
  %7 = load i8*, i8** %4, align 8, !dbg !5949
  %8 = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %7), !dbg !5950
  store %struct.exe_disk_file_t.16* %8, %struct.exe_disk_file_t.16** %6, align 8, !dbg !5948
  %9 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %6, align 8, !dbg !5951
  %10 = icmp ne %struct.exe_disk_file_t.16* %9, null, !dbg !5951
  br i1 %10, label %11, label %19, !dbg !5953

11:                                               ; preds = %2
  %12 = load %struct.stat64.15*, %struct.stat64.15** %5, align 8, !dbg !5954
  %13 = bitcast %struct.stat64.15* %12 to i8*, !dbg !5956
  %14 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %6, align 8, !dbg !5957
  %15 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %14, i32 0, i32 2, !dbg !5958
  %16 = load %struct.stat64.15*, %struct.stat64.15** %15, align 8, !dbg !5958
  %17 = bitcast %struct.stat64.15* %16 to i8*, !dbg !5956
  %18 = call i8* @memcpy(i8* %13, i8* %17, i64 144), !dbg !5956
  store i32 0, i32* %3, align 4, !dbg !5959
  br label %25, !dbg !5959

19:                                               ; preds = %2
  %20 = load i8*, i8** %4, align 8, !dbg !5960
  %21 = call i8* @__concretize_string(i8* %20), !dbg !5962
  %22 = load %struct.stat64.15*, %struct.stat64.15** %5, align 8, !dbg !5963
  %23 = call i64 (i64, ...) @syscall(i64 6, i8* %21, %struct.stat64.15* %22) #15, !dbg !5964
  %24 = trunc i64 %23 to i32, !dbg !5964
  store i32 %24, i32* %3, align 4, !dbg !5965
  br label %25, !dbg !5965

25:                                               ; preds = %19, %11
  %26 = load i32, i32* %3, align 4, !dbg !5966
  ret i32 %26, !dbg !5966
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @chdir(i8* nonnull %0) #0 !dbg !5967 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca %struct.exe_disk_file_t.16*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !5970, metadata !DIExpression()), !dbg !5971
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %4, metadata !5972, metadata !DIExpression()), !dbg !5973
  %5 = load i8*, i8** %3, align 8, !dbg !5974
  %6 = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %5), !dbg !5975
  store %struct.exe_disk_file_t.16* %6, %struct.exe_disk_file_t.16** %4, align 8, !dbg !5973
  %7 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %4, align 8, !dbg !5976
  %8 = icmp ne %struct.exe_disk_file_t.16* %7, null, !dbg !5976
  br i1 %8, label %9, label %11, !dbg !5978

9:                                                ; preds = %1
  call void @klee_warning(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10.95, i64 0, i64 0)), !dbg !5979
  %10 = call i32* @__errno_location() #20, !dbg !5981
  store i32 2, i32* %10, align 4, !dbg !5982
  store i32 -1, i32* %2, align 4, !dbg !5983
  br label %16, !dbg !5983

11:                                               ; preds = %1
  %12 = load i8*, i8** %3, align 8, !dbg !5984
  %13 = call i8* @__concretize_string(i8* %12), !dbg !5985
  %14 = call i64 (i64, ...) @syscall(i64 80, i8* %13) #15, !dbg !5986
  %15 = trunc i64 %14 to i32, !dbg !5986
  store i32 %15, i32* %2, align 4, !dbg !5987
  br label %16, !dbg !5987

16:                                               ; preds = %11, %9
  %17 = load i32, i32* %2, align 4, !dbg !5988
  ret i32 %17, !dbg !5988
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @fchdir(i32 %0) #0 !dbg !5989 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.exe_file_t.17*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5990, metadata !DIExpression()), !dbg !5991
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %4, metadata !5992, metadata !DIExpression()), !dbg !5993
  %5 = load i32, i32* %3, align 4, !dbg !5994
  %6 = call %struct.exe_file_t.17* @__get_file(i32 %5), !dbg !5995
  store %struct.exe_file_t.17* %6, %struct.exe_file_t.17** %4, align 8, !dbg !5993
  %7 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %4, align 8, !dbg !5996
  %8 = icmp ne %struct.exe_file_t.17* %7, null, !dbg !5996
  br i1 %8, label %11, label %9, !dbg !5998

9:                                                ; preds = %1
  %10 = call i32* @__errno_location() #20, !dbg !5999
  store i32 9, i32* %10, align 4, !dbg !6001
  store i32 -1, i32* %2, align 4, !dbg !6002
  br label %24, !dbg !6002

11:                                               ; preds = %1
  %12 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %4, align 8, !dbg !6003
  %13 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %12, i32 0, i32 3, !dbg !6005
  %14 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %13, align 8, !dbg !6005
  %15 = icmp ne %struct.exe_disk_file_t.16* %14, null, !dbg !6003
  br i1 %15, label %16, label %18, !dbg !6006

16:                                               ; preds = %11
  call void @klee_warning(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10.95, i64 0, i64 0)), !dbg !6007
  %17 = call i32* @__errno_location() #20, !dbg !6009
  store i32 2, i32* %17, align 4, !dbg !6010
  store i32 -1, i32* %2, align 4, !dbg !6011
  br label %24, !dbg !6011

18:                                               ; preds = %11
  %19 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %4, align 8, !dbg !6012
  %20 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %19, i32 0, i32 0, !dbg !6013
  %21 = load i32, i32* %20, align 8, !dbg !6013
  %22 = call i64 (i64, ...) @syscall(i64 81, i32 %21) #15, !dbg !6014
  %23 = trunc i64 %22 to i32, !dbg !6014
  store i32 %23, i32* %2, align 4, !dbg !6015
  br label %24, !dbg !6015

24:                                               ; preds = %18, %16, %9
  %25 = load i32, i32* %2, align 4, !dbg !6016
  ret i32 %25, !dbg !6016
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @chmod(i8* nonnull %0, i32 %1) #0 !dbg !530 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.exe_disk_file_t.16*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !6017, metadata !DIExpression()), !dbg !6018
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6019, metadata !DIExpression()), !dbg !6020
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %6, metadata !6021, metadata !DIExpression()), !dbg !6022
  %7 = load i8*, i8** %4, align 8, !dbg !6023
  %8 = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %7), !dbg !6024
  store %struct.exe_disk_file_t.16* %8, %struct.exe_disk_file_t.16** %6, align 8, !dbg !6022
  %9 = load i32, i32* @chmod.n_calls, align 4, !dbg !6025
  %10 = add nsw i32 %9, 1, !dbg !6025
  store i32 %10, i32* @chmod.n_calls, align 4, !dbg !6025
  %11 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !6026
  %12 = icmp ne i32 %11, 0, !dbg !6028
  br i1 %12, label %13, label %22, !dbg !6029

13:                                               ; preds = %2
  %14 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 11), align 8, !dbg !6030
  %15 = load i32, i32* %14, align 4, !dbg !6031
  %16 = load i32, i32* @chmod.n_calls, align 4, !dbg !6032
  %17 = icmp eq i32 %15, %16, !dbg !6033
  br i1 %17, label %18, label %22, !dbg !6034

18:                                               ; preds = %13
  %19 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !6035
  %20 = add i32 %19, -1, !dbg !6035
  store i32 %20, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !6035
  %21 = call i32* @__errno_location() #20, !dbg !6037
  store i32 5, i32* %21, align 4, !dbg !6038
  store i32 -1, i32* %3, align 4, !dbg !6039
  br label %35, !dbg !6039

22:                                               ; preds = %13, %2
  %23 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %6, align 8, !dbg !6040
  %24 = icmp ne %struct.exe_disk_file_t.16* %23, null, !dbg !6040
  br i1 %24, label %25, label %29, !dbg !6042

25:                                               ; preds = %22
  %26 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %6, align 8, !dbg !6043
  %27 = load i32, i32* %5, align 4, !dbg !6045
  %28 = call i32 @__df_chmod(%struct.exe_disk_file_t.16* %26, i32 %27), !dbg !6046
  store i32 %28, i32* %3, align 4, !dbg !6047
  br label %35, !dbg !6047

29:                                               ; preds = %22
  %30 = load i8*, i8** %4, align 8, !dbg !6048
  %31 = call i8* @__concretize_string(i8* %30), !dbg !6049
  %32 = load i32, i32* %5, align 4, !dbg !6050
  %33 = call i64 (i64, ...) @syscall(i64 90, i8* %31, i32 %32) #15, !dbg !6051
  %34 = trunc i64 %33 to i32, !dbg !6051
  store i32 %34, i32* %3, align 4, !dbg !6052
  br label %35, !dbg !6052

35:                                               ; preds = %29, %25, %18
  %36 = load i32, i32* %3, align 4, !dbg !6053
  ret i32 %36, !dbg !6053
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @__df_chmod(%struct.exe_disk_file_t.16* %0, i32 %1) #0 !dbg !6054 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.exe_disk_file_t.16*, align 8
  %5 = alloca i32, align 4
  store %struct.exe_disk_file_t.16* %0, %struct.exe_disk_file_t.16** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %4, metadata !6057, metadata !DIExpression()), !dbg !6058
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6059, metadata !DIExpression()), !dbg !6060
  %6 = call i32 @geteuid() #15, !dbg !6061
  %7 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %4, align 8, !dbg !6063
  %8 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %7, i32 0, i32 2, !dbg !6064
  %9 = load %struct.stat64.15*, %struct.stat64.15** %8, align 8, !dbg !6064
  %10 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %9, i32 0, i32 4, !dbg !6065
  %11 = load i32, i32* %10, align 4, !dbg !6065
  %12 = icmp eq i32 %6, %11, !dbg !6066
  br i1 %12, label %13, label %38, !dbg !6067

13:                                               ; preds = %2
  %14 = call i32 @getgid() #15, !dbg !6068
  %15 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %4, align 8, !dbg !6071
  %16 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %15, i32 0, i32 2, !dbg !6072
  %17 = load %struct.stat64.15*, %struct.stat64.15** %16, align 8, !dbg !6072
  %18 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %17, i32 0, i32 5, !dbg !6073
  %19 = load i32, i32* %18, align 8, !dbg !6073
  %20 = icmp ne i32 %14, %19, !dbg !6074
  br i1 %20, label %21, label %24, !dbg !6075

21:                                               ; preds = %13
  %22 = load i32, i32* %5, align 4, !dbg !6076
  %23 = and i32 %22, -1025, !dbg !6076
  store i32 %23, i32* %5, align 4, !dbg !6076
  br label %24, !dbg !6077

24:                                               ; preds = %21, %13
  %25 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %4, align 8, !dbg !6078
  %26 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %25, i32 0, i32 2, !dbg !6079
  %27 = load %struct.stat64.15*, %struct.stat64.15** %26, align 8, !dbg !6079
  %28 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %27, i32 0, i32 3, !dbg !6080
  %29 = load i32, i32* %28, align 8, !dbg !6080
  %30 = and i32 %29, -4096, !dbg !6081
  %31 = load i32, i32* %5, align 4, !dbg !6082
  %32 = and i32 %31, 4095, !dbg !6083
  %33 = or i32 %30, %32, !dbg !6084
  %34 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %4, align 8, !dbg !6085
  %35 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %34, i32 0, i32 2, !dbg !6086
  %36 = load %struct.stat64.15*, %struct.stat64.15** %35, align 8, !dbg !6086
  %37 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %36, i32 0, i32 3, !dbg !6087
  store i32 %33, i32* %37, align 8, !dbg !6088
  store i32 0, i32* %3, align 4, !dbg !6089
  br label %40, !dbg !6089

38:                                               ; preds = %2
  %39 = call i32* @__errno_location() #20, !dbg !6090
  store i32 1, i32* %39, align 4, !dbg !6092
  store i32 -1, i32* %3, align 4, !dbg !6093
  br label %40, !dbg !6093

40:                                               ; preds = %38, %24
  %41 = load i32, i32* %3, align 4, !dbg !6094
  ret i32 %41, !dbg !6094
}

; Function Attrs: nounwind
declare dso_local i32 @geteuid() #3

; Function Attrs: nounwind
declare dso_local i32 @getgid() #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @fchmod(i32 %0, i32 %1) #0 !dbg !537 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.exe_file_t.17*, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6095, metadata !DIExpression()), !dbg !6096
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6097, metadata !DIExpression()), !dbg !6098
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %6, metadata !6099, metadata !DIExpression()), !dbg !6100
  %7 = load i32, i32* %4, align 4, !dbg !6101
  %8 = call %struct.exe_file_t.17* @__get_file(i32 %7), !dbg !6102
  store %struct.exe_file_t.17* %8, %struct.exe_file_t.17** %6, align 8, !dbg !6100
  %9 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !6103
  %10 = icmp ne %struct.exe_file_t.17* %9, null, !dbg !6103
  br i1 %10, label %13, label %11, !dbg !6105

11:                                               ; preds = %2
  %12 = call i32* @__errno_location() #20, !dbg !6106
  store i32 9, i32* %12, align 4, !dbg !6108
  store i32 -1, i32* %3, align 4, !dbg !6109
  br label %45, !dbg !6109

13:                                               ; preds = %2
  %14 = load i32, i32* @fchmod.n_calls, align 4, !dbg !6110
  %15 = add nsw i32 %14, 1, !dbg !6110
  store i32 %15, i32* @fchmod.n_calls, align 4, !dbg !6110
  %16 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !6111
  %17 = icmp ne i32 %16, 0, !dbg !6113
  br i1 %17, label %18, label %27, !dbg !6114

18:                                               ; preds = %13
  %19 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 12), align 8, !dbg !6115
  %20 = load i32, i32* %19, align 4, !dbg !6116
  %21 = load i32, i32* @fchmod.n_calls, align 4, !dbg !6117
  %22 = icmp eq i32 %20, %21, !dbg !6118
  br i1 %22, label %23, label %27, !dbg !6119

23:                                               ; preds = %18
  %24 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !6120
  %25 = add i32 %24, -1, !dbg !6120
  store i32 %25, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !6120
  %26 = call i32* @__errno_location() #20, !dbg !6122
  store i32 5, i32* %26, align 4, !dbg !6123
  store i32 -1, i32* %3, align 4, !dbg !6124
  br label %45, !dbg !6124

27:                                               ; preds = %18, %13
  %28 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !6125
  %29 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %28, i32 0, i32 3, !dbg !6127
  %30 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %29, align 8, !dbg !6127
  %31 = icmp ne %struct.exe_disk_file_t.16* %30, null, !dbg !6125
  br i1 %31, label %32, label %38, !dbg !6128

32:                                               ; preds = %27
  %33 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !6129
  %34 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %33, i32 0, i32 3, !dbg !6131
  %35 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %34, align 8, !dbg !6131
  %36 = load i32, i32* %5, align 4, !dbg !6132
  %37 = call i32 @__df_chmod(%struct.exe_disk_file_t.16* %35, i32 %36), !dbg !6133
  store i32 %37, i32* %3, align 4, !dbg !6134
  br label %45, !dbg !6134

38:                                               ; preds = %27
  %39 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !6135
  %40 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %39, i32 0, i32 0, !dbg !6136
  %41 = load i32, i32* %40, align 8, !dbg !6136
  %42 = load i32, i32* %5, align 4, !dbg !6137
  %43 = call i64 (i64, ...) @syscall(i64 91, i32 %41, i32 %42) #15, !dbg !6138
  %44 = trunc i64 %43 to i32, !dbg !6138
  store i32 %44, i32* %3, align 4, !dbg !6139
  br label %45, !dbg !6139

45:                                               ; preds = %38, %32, %23, %11
  %46 = load i32, i32* %3, align 4, !dbg !6140
  ret i32 %46, !dbg !6140
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @chown(i8* nonnull %0, i32 %1, i32 %2) #0 !dbg !6141 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.exe_disk_file_t.16*, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6146, metadata !DIExpression()), !dbg !6147
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6148, metadata !DIExpression()), !dbg !6149
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !6150, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %8, metadata !6152, metadata !DIExpression()), !dbg !6153
  %9 = load i8*, i8** %5, align 8, !dbg !6154
  %10 = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %9), !dbg !6155
  store %struct.exe_disk_file_t.16* %10, %struct.exe_disk_file_t.16** %8, align 8, !dbg !6153
  %11 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %8, align 8, !dbg !6156
  %12 = icmp ne %struct.exe_disk_file_t.16* %11, null, !dbg !6156
  br i1 %12, label %13, label %18, !dbg !6158

13:                                               ; preds = %3
  %14 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %8, align 8, !dbg !6159
  %15 = load i32, i32* %6, align 4, !dbg !6161
  %16 = load i32, i32* %7, align 4, !dbg !6162
  %17 = call i32 @__df_chown(%struct.exe_disk_file_t.16* %14, i32 %15, i32 %16), !dbg !6163
  store i32 %17, i32* %4, align 4, !dbg !6164
  br label %25, !dbg !6164

18:                                               ; preds = %3
  %19 = load i8*, i8** %5, align 8, !dbg !6165
  %20 = call i8* @__concretize_string(i8* %19), !dbg !6166
  %21 = load i32, i32* %6, align 4, !dbg !6167
  %22 = load i32, i32* %7, align 4, !dbg !6168
  %23 = call i64 (i64, ...) @syscall(i64 92, i8* %20, i32 %21, i32 %22) #15, !dbg !6169
  %24 = trunc i64 %23 to i32, !dbg !6169
  store i32 %24, i32* %4, align 4, !dbg !6170
  br label %25, !dbg !6170

25:                                               ; preds = %18, %13
  %26 = load i32, i32* %4, align 4, !dbg !6171
  ret i32 %26, !dbg !6171
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @__df_chown(%struct.exe_disk_file_t.16* %0, i32 %1, i32 %2) #0 !dbg !6172 {
  %4 = alloca %struct.exe_disk_file_t.16*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.exe_disk_file_t.16* %0, %struct.exe_disk_file_t.16** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %4, metadata !6175, metadata !DIExpression()), !dbg !6176
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6177, metadata !DIExpression()), !dbg !6178
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6179, metadata !DIExpression()), !dbg !6180
  call void @klee_warning(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26.96, i64 0, i64 0)), !dbg !6181
  %7 = call i32* @__errno_location() #20, !dbg !6182
  store i32 1, i32* %7, align 4, !dbg !6183
  ret i32 -1, !dbg !6184
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @fchown(i32 %0, i32 %1, i32 %2) #0 !dbg !6185 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.exe_file_t.17*, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6188, metadata !DIExpression()), !dbg !6189
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6190, metadata !DIExpression()), !dbg !6191
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !6192, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %8, metadata !6194, metadata !DIExpression()), !dbg !6195
  %9 = load i32, i32* %5, align 4, !dbg !6196
  %10 = call %struct.exe_file_t.17* @__get_file(i32 %9), !dbg !6197
  store %struct.exe_file_t.17* %10, %struct.exe_file_t.17** %8, align 8, !dbg !6195
  %11 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !6198
  %12 = icmp ne %struct.exe_file_t.17* %11, null, !dbg !6198
  br i1 %12, label %15, label %13, !dbg !6200

13:                                               ; preds = %3
  %14 = call i32* @__errno_location() #20, !dbg !6201
  store i32 9, i32* %14, align 4, !dbg !6203
  store i32 -1, i32* %4, align 4, !dbg !6204
  br label %33, !dbg !6204

15:                                               ; preds = %3
  %16 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !6205
  %17 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %16, i32 0, i32 3, !dbg !6207
  %18 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %17, align 8, !dbg !6207
  %19 = icmp ne %struct.exe_disk_file_t.16* %18, null, !dbg !6205
  br i1 %19, label %20, label %27, !dbg !6208

20:                                               ; preds = %15
  %21 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !6209
  %22 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %21, i32 0, i32 3, !dbg !6211
  %23 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %22, align 8, !dbg !6211
  %24 = load i32, i32* %6, align 4, !dbg !6212
  %25 = load i32, i32* %7, align 4, !dbg !6213
  %26 = call i32 @__df_chown(%struct.exe_disk_file_t.16* %23, i32 %24, i32 %25), !dbg !6214
  store i32 %26, i32* %4, align 4, !dbg !6215
  br label %33, !dbg !6215

27:                                               ; preds = %15
  %28 = load i32, i32* %5, align 4, !dbg !6216
  %29 = load i32, i32* %6, align 4, !dbg !6217
  %30 = load i32, i32* %7, align 4, !dbg !6218
  %31 = call i64 (i64, ...) @syscall(i64 93, i32 %28, i32 %29, i32 %30) #15, !dbg !6219
  %32 = trunc i64 %31 to i32, !dbg !6219
  store i32 %32, i32* %4, align 4, !dbg !6220
  br label %33, !dbg !6220

33:                                               ; preds = %27, %20, %13
  %34 = load i32, i32* %4, align 4, !dbg !6221
  ret i32 %34, !dbg !6221
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @lchown(i8* nonnull %0, i32 %1, i32 %2) #0 !dbg !6222 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.exe_disk_file_t.16*, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6223, metadata !DIExpression()), !dbg !6224
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6225, metadata !DIExpression()), !dbg !6226
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !6227, metadata !DIExpression()), !dbg !6228
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %8, metadata !6229, metadata !DIExpression()), !dbg !6230
  %9 = load i8*, i8** %5, align 8, !dbg !6231
  %10 = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %9), !dbg !6232
  store %struct.exe_disk_file_t.16* %10, %struct.exe_disk_file_t.16** %8, align 8, !dbg !6230
  %11 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %8, align 8, !dbg !6233
  %12 = icmp ne %struct.exe_disk_file_t.16* %11, null, !dbg !6233
  br i1 %12, label %13, label %18, !dbg !6235

13:                                               ; preds = %3
  %14 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %8, align 8, !dbg !6236
  %15 = load i32, i32* %6, align 4, !dbg !6238
  %16 = load i32, i32* %7, align 4, !dbg !6239
  %17 = call i32 @__df_chown(%struct.exe_disk_file_t.16* %14, i32 %15, i32 %16), !dbg !6240
  store i32 %17, i32* %4, align 4, !dbg !6241
  br label %25, !dbg !6241

18:                                               ; preds = %3
  %19 = load i8*, i8** %5, align 8, !dbg !6242
  %20 = call i8* @__concretize_string(i8* %19), !dbg !6243
  %21 = load i32, i32* %6, align 4, !dbg !6244
  %22 = load i32, i32* %7, align 4, !dbg !6245
  %23 = call i64 (i64, ...) @syscall(i64 92, i8* %20, i32 %21, i32 %22) #15, !dbg !6246
  %24 = trunc i64 %23 to i32, !dbg !6246
  store i32 %24, i32* %4, align 4, !dbg !6247
  br label %25, !dbg !6247

25:                                               ; preds = %18, %13
  %26 = load i32, i32* %4, align 4, !dbg !6248
  ret i32 %26, !dbg !6248
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @__fd_fstat(i32 %0, %struct.stat64.15* %1) #0 !dbg !6249 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.stat64.15*, align 8
  %6 = alloca %struct.exe_file_t.17*, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6250, metadata !DIExpression()), !dbg !6251
  store %struct.stat64.15* %1, %struct.stat64.15** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.stat64.15** %5, metadata !6252, metadata !DIExpression()), !dbg !6253
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %6, metadata !6254, metadata !DIExpression()), !dbg !6255
  %7 = load i32, i32* %4, align 4, !dbg !6256
  %8 = call %struct.exe_file_t.17* @__get_file(i32 %7), !dbg !6257
  store %struct.exe_file_t.17* %8, %struct.exe_file_t.17** %6, align 8, !dbg !6255
  %9 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !6258
  %10 = icmp ne %struct.exe_file_t.17* %9, null, !dbg !6258
  br i1 %10, label %13, label %11, !dbg !6260

11:                                               ; preds = %2
  %12 = call i32* @__errno_location() #20, !dbg !6261
  store i32 9, i32* %12, align 4, !dbg !6263
  store i32 -1, i32* %3, align 4, !dbg !6264
  br label %35, !dbg !6264

13:                                               ; preds = %2
  %14 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !6265
  %15 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %14, i32 0, i32 3, !dbg !6267
  %16 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %15, align 8, !dbg !6267
  %17 = icmp ne %struct.exe_disk_file_t.16* %16, null, !dbg !6265
  br i1 %17, label %25, label %18, !dbg !6268

18:                                               ; preds = %13
  %19 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !6269
  %20 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %19, i32 0, i32 0, !dbg !6271
  %21 = load i32, i32* %20, align 8, !dbg !6271
  %22 = load %struct.stat64.15*, %struct.stat64.15** %5, align 8, !dbg !6272
  %23 = call i64 (i64, ...) @syscall(i64 5, i32 %21, %struct.stat64.15* %22) #15, !dbg !6273
  %24 = trunc i64 %23 to i32, !dbg !6273
  store i32 %24, i32* %3, align 4, !dbg !6274
  br label %35, !dbg !6274

25:                                               ; preds = %13
  %26 = load %struct.stat64.15*, %struct.stat64.15** %5, align 8, !dbg !6275
  %27 = bitcast %struct.stat64.15* %26 to i8*, !dbg !6276
  %28 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !6277
  %29 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %28, i32 0, i32 3, !dbg !6278
  %30 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %29, align 8, !dbg !6278
  %31 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %30, i32 0, i32 2, !dbg !6279
  %32 = load %struct.stat64.15*, %struct.stat64.15** %31, align 8, !dbg !6279
  %33 = bitcast %struct.stat64.15* %32 to i8*, !dbg !6276
  %34 = call i8* @memcpy(i8* %27, i8* %33, i64 144), !dbg !6276
  store i32 0, i32* %3, align 4, !dbg !6280
  br label %35, !dbg !6280

35:                                               ; preds = %25, %18, %11
  %36 = load i32, i32* %3, align 4, !dbg !6281
  ret i32 %36, !dbg !6281
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @__fd_ftruncate(i32 %0, i64 %1) #0 !dbg !542 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca %struct.exe_file_t.17*, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6282, metadata !DIExpression()), !dbg !6283
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !6284, metadata !DIExpression()), !dbg !6285
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %6, metadata !6286, metadata !DIExpression()), !dbg !6287
  %7 = load i32, i32* %4, align 4, !dbg !6288
  %8 = call %struct.exe_file_t.17* @__get_file(i32 %7), !dbg !6289
  store %struct.exe_file_t.17* %8, %struct.exe_file_t.17** %6, align 8, !dbg !6287
  %9 = load i32, i32* @__fd_ftruncate.n_calls, align 4, !dbg !6290
  %10 = add nsw i32 %9, 1, !dbg !6290
  store i32 %10, i32* @__fd_ftruncate.n_calls, align 4, !dbg !6290
  %11 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !6291
  %12 = icmp ne %struct.exe_file_t.17* %11, null, !dbg !6291
  br i1 %12, label %15, label %13, !dbg !6293

13:                                               ; preds = %2
  %14 = call i32* @__errno_location() #20, !dbg !6294
  store i32 9, i32* %14, align 4, !dbg !6296
  store i32 -1, i32* %3, align 4, !dbg !6297
  br label %41, !dbg !6297

15:                                               ; preds = %2
  %16 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !6298
  %17 = icmp ne i32 %16, 0, !dbg !6300
  br i1 %17, label %18, label %27, !dbg !6301

18:                                               ; preds = %15
  %19 = load i32*, i32** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 9), align 8, !dbg !6302
  %20 = load i32, i32* %19, align 4, !dbg !6303
  %21 = load i32, i32* @__fd_ftruncate.n_calls, align 4, !dbg !6304
  %22 = icmp eq i32 %20, %21, !dbg !6305
  br i1 %22, label %23, label %27, !dbg !6306

23:                                               ; preds = %18
  %24 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !6307
  %25 = add i32 %24, -1, !dbg !6307
  store i32 %25, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 5), align 8, !dbg !6307
  %26 = call i32* @__errno_location() #20, !dbg !6309
  store i32 5, i32* %26, align 4, !dbg !6310
  store i32 -1, i32* %3, align 4, !dbg !6311
  br label %41, !dbg !6311

27:                                               ; preds = %18, %15
  %28 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !6312
  %29 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %28, i32 0, i32 3, !dbg !6314
  %30 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %29, align 8, !dbg !6314
  %31 = icmp ne %struct.exe_disk_file_t.16* %30, null, !dbg !6312
  br i1 %31, label %32, label %34, !dbg !6315

32:                                               ; preds = %27
  call void @klee_warning(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11.101, i64 0, i64 0)), !dbg !6316
  %33 = call i32* @__errno_location() #20, !dbg !6318
  store i32 5, i32* %33, align 4, !dbg !6319
  store i32 -1, i32* %3, align 4, !dbg !6320
  br label %41, !dbg !6320

34:                                               ; preds = %27
  %35 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !6321
  %36 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %35, i32 0, i32 0, !dbg !6322
  %37 = load i32, i32* %36, align 8, !dbg !6322
  %38 = load i64, i64* %5, align 8, !dbg !6323
  %39 = call i64 (i64, ...) @syscall(i64 77, i32 %37, i64 %38) #15, !dbg !6324
  %40 = trunc i64 %39 to i32, !dbg !6324
  store i32 %40, i32* %3, align 4, !dbg !6325
  br label %41, !dbg !6325

41:                                               ; preds = %34, %32, %23, %13
  %42 = load i32, i32* %3, align 4, !dbg !6326
  ret i32 %42, !dbg !6326
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @__fd_getdents(i32 %0, %struct.dirent64.12* %1, i32 %2) #0 !dbg !6327 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.dirent64.12*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.exe_file_t.17*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca %struct.exe_disk_file_t.16*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %struct.dirent64.12*, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6330, metadata !DIExpression()), !dbg !6331
  store %struct.dirent64.12* %1, %struct.dirent64.12** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.dirent64.12** %6, metadata !6332, metadata !DIExpression()), !dbg !6333
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !6334, metadata !DIExpression()), !dbg !6335
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %8, metadata !6336, metadata !DIExpression()), !dbg !6337
  %18 = load i32, i32* %5, align 4, !dbg !6338
  %19 = call %struct.exe_file_t.17* @__get_file(i32 %18), !dbg !6339
  store %struct.exe_file_t.17* %19, %struct.exe_file_t.17** %8, align 8, !dbg !6337
  %20 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !6340
  %21 = icmp ne %struct.exe_file_t.17* %20, null, !dbg !6340
  br i1 %21, label %24, label %22, !dbg !6342

22:                                               ; preds = %3
  %23 = call i32* @__errno_location() #20, !dbg !6343
  store i32 9, i32* %23, align 4, !dbg !6345
  store i32 -1, i32* %4, align 4, !dbg !6346
  br label %207, !dbg !6346

24:                                               ; preds = %3
  %25 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !6347
  %26 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %25, i32 0, i32 3, !dbg !6349
  %27 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %26, align 8, !dbg !6349
  %28 = icmp ne %struct.exe_disk_file_t.16* %27, null, !dbg !6347
  br i1 %28, label %29, label %31, !dbg !6350

29:                                               ; preds = %24
  call void @klee_warning(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12.104, i64 0, i64 0)), !dbg !6351
  %30 = call i32* @__errno_location() #20, !dbg !6353
  store i32 22, i32* %30, align 4, !dbg !6354
  store i32 -1, i32* %4, align 4, !dbg !6355
  br label %207, !dbg !6355

31:                                               ; preds = %24
  %32 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !6356
  %33 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %32, i32 0, i32 2, !dbg !6359
  %34 = load i64, i64* %33, align 8, !dbg !6359
  %35 = icmp ult i64 %34, 4096, !dbg !6360
  br i1 %35, label %36, label %138, !dbg !6361

36:                                               ; preds = %31
  call void @llvm.dbg.declare(metadata i64* %9, metadata !6362, metadata !DIExpression()), !dbg !6364
  call void @llvm.dbg.declare(metadata i64* %10, metadata !6365, metadata !DIExpression()), !dbg !6366
  call void @llvm.dbg.declare(metadata i64* %11, metadata !6367, metadata !DIExpression()), !dbg !6368
  store i64 0, i64* %11, align 8, !dbg !6368
  %37 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !6369
  %38 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %37, i32 0, i32 2, !dbg !6370
  %39 = load i64, i64* %38, align 8, !dbg !6370
  %40 = udiv i64 %39, 280, !dbg !6371
  store i64 %40, i64* %9, align 8, !dbg !6372
  %41 = load i64, i64* %9, align 8, !dbg !6373
  %42 = mul i64 %41, 280, !dbg !6375
  %43 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !6376
  %44 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %43, i32 0, i32 2, !dbg !6377
  %45 = load i64, i64* %44, align 8, !dbg !6377
  %46 = icmp ne i64 %42, %45, !dbg !6378
  br i1 %46, label %52, label %47, !dbg !6379

47:                                               ; preds = %36
  %48 = load i64, i64* %9, align 8, !dbg !6380
  %49 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 0), align 8, !dbg !6381
  %50 = zext i32 %49 to i64, !dbg !6382
  %51 = icmp sgt i64 %48, %50, !dbg !6383
  br i1 %51, label %52, label %54, !dbg !6384

52:                                               ; preds = %47, %36
  %53 = call i32* @__errno_location() #20, !dbg !6385
  store i32 22, i32* %53, align 4, !dbg !6387
  store i32 -1, i32* %4, align 4, !dbg !6388
  br label %207, !dbg !6388

54:                                               ; preds = %47, %59
  %55 = load i64, i64* %9, align 8, !dbg !6389
  %56 = load i32, i32* getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 0), align 8, !dbg !6392
  %57 = zext i32 %56 to i64, !dbg !6393
  %58 = icmp slt i64 %55, %57, !dbg !6394
  br i1 %58, label %59, label %106, !dbg !6395

59:                                               ; preds = %54
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %12, metadata !6396, metadata !DIExpression()), !dbg !6398
  %60 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** getelementptr inbounds (%struct.exe_file_system_t.18, %struct.exe_file_system_t.18* @__exe_fs, i32 0, i32 4), align 8, !dbg !6399
  %61 = load i64, i64* %9, align 8, !dbg !6400
  %62 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %60, i64 %61, !dbg !6401
  store %struct.exe_disk_file_t.16* %62, %struct.exe_disk_file_t.16** %12, align 8, !dbg !6398
  %63 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %12, align 8, !dbg !6402
  %64 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %63, i32 0, i32 2, !dbg !6403
  %65 = load %struct.stat64.15*, %struct.stat64.15** %64, align 8, !dbg !6403
  %66 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %65, i32 0, i32 1, !dbg !6404
  %67 = load i64, i64* %66, align 8, !dbg !6404
  %68 = load %struct.dirent64.12*, %struct.dirent64.12** %6, align 8, !dbg !6405
  %69 = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %68, i32 0, i32 0, !dbg !6406
  store i64 %67, i64* %69, align 8, !dbg !6407
  %70 = load %struct.dirent64.12*, %struct.dirent64.12** %6, align 8, !dbg !6408
  %71 = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %70, i32 0, i32 2, !dbg !6409
  store i16 280, i16* %71, align 8, !dbg !6410
  %72 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %12, align 8, !dbg !6411
  %73 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %72, i32 0, i32 2, !dbg !6411
  %74 = load %struct.stat64.15*, %struct.stat64.15** %73, align 8, !dbg !6411
  %75 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %74, i32 0, i32 3, !dbg !6411
  %76 = load i32, i32* %75, align 8, !dbg !6411
  %77 = and i32 %76, 61440, !dbg !6411
  %78 = lshr i32 %77, 12, !dbg !6411
  %79 = trunc i32 %78 to i8, !dbg !6411
  %80 = load %struct.dirent64.12*, %struct.dirent64.12** %6, align 8, !dbg !6412
  %81 = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %80, i32 0, i32 3, !dbg !6413
  store i8 %79, i8* %81, align 2, !dbg !6414
  %82 = load i64, i64* %9, align 8, !dbg !6415
  %83 = add nsw i64 65, %82, !dbg !6416
  %84 = trunc i64 %83 to i8, !dbg !6417
  %85 = load %struct.dirent64.12*, %struct.dirent64.12** %6, align 8, !dbg !6418
  %86 = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %85, i32 0, i32 4, !dbg !6419
  %87 = getelementptr inbounds [256 x i8], [256 x i8]* %86, i64 0, i64 0, !dbg !6418
  store i8 %84, i8* %87, align 1, !dbg !6420
  %88 = load %struct.dirent64.12*, %struct.dirent64.12** %6, align 8, !dbg !6421
  %89 = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %88, i32 0, i32 4, !dbg !6422
  %90 = getelementptr inbounds [256 x i8], [256 x i8]* %89, i64 0, i64 1, !dbg !6421
  store i8 0, i8* %90, align 1, !dbg !6423
  %91 = load i64, i64* %9, align 8, !dbg !6424
  %92 = add nsw i64 %91, 1, !dbg !6425
  %93 = mul i64 %92, 280, !dbg !6426
  %94 = load %struct.dirent64.12*, %struct.dirent64.12** %6, align 8, !dbg !6427
  %95 = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %94, i32 0, i32 1, !dbg !6428
  store i64 %93, i64* %95, align 8, !dbg !6429
  %96 = load %struct.dirent64.12*, %struct.dirent64.12** %6, align 8, !dbg !6430
  %97 = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %96, i32 0, i32 2, !dbg !6431
  %98 = load i16, i16* %97, align 8, !dbg !6431
  %99 = zext i16 %98 to i64, !dbg !6430
  %100 = load i64, i64* %11, align 8, !dbg !6432
  %101 = add nsw i64 %100, %99, !dbg !6432
  store i64 %101, i64* %11, align 8, !dbg !6432
  %102 = load %struct.dirent64.12*, %struct.dirent64.12** %6, align 8, !dbg !6433
  %103 = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %102, i32 1, !dbg !6433
  store %struct.dirent64.12* %103, %struct.dirent64.12** %6, align 8, !dbg !6433
  %104 = load i64, i64* %9, align 8, !dbg !6434
  %105 = add nsw i64 %104, 1, !dbg !6434
  store i64 %105, i64* %9, align 8, !dbg !6434
  br label %54, !dbg !6435, !llvm.loop !6436

106:                                              ; preds = %54
  %107 = load i32, i32* %7, align 4, !dbg !6438
  %108 = icmp uge i32 %107, 4096, !dbg !6439
  %109 = load i32, i32* %7, align 4, !dbg !6438
  %110 = select i1 %108, i32 4096, i32 %109, !dbg !6438
  %111 = zext i32 %110 to i64, !dbg !6438
  store i64 %111, i64* %10, align 8, !dbg !6440
  %112 = load %struct.dirent64.12*, %struct.dirent64.12** %6, align 8, !dbg !6441
  %113 = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %112, i32 0, i32 0, !dbg !6442
  store i64 0, i64* %113, align 8, !dbg !6443
  %114 = load i64, i64* %10, align 8, !dbg !6444
  %115 = load i64, i64* %11, align 8, !dbg !6445
  %116 = sub nsw i64 %114, %115, !dbg !6446
  %117 = trunc i64 %116 to i16, !dbg !6444
  %118 = load %struct.dirent64.12*, %struct.dirent64.12** %6, align 8, !dbg !6447
  %119 = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %118, i32 0, i32 2, !dbg !6448
  store i16 %117, i16* %119, align 8, !dbg !6449
  %120 = load %struct.dirent64.12*, %struct.dirent64.12** %6, align 8, !dbg !6450
  %121 = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %120, i32 0, i32 3, !dbg !6451
  store i8 0, i8* %121, align 2, !dbg !6452
  %122 = load %struct.dirent64.12*, %struct.dirent64.12** %6, align 8, !dbg !6453
  %123 = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %122, i32 0, i32 4, !dbg !6454
  %124 = getelementptr inbounds [256 x i8], [256 x i8]* %123, i64 0, i64 0, !dbg !6453
  store i8 0, i8* %124, align 1, !dbg !6455
  %125 = load %struct.dirent64.12*, %struct.dirent64.12** %6, align 8, !dbg !6456
  %126 = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %125, i32 0, i32 1, !dbg !6457
  store i64 4096, i64* %126, align 8, !dbg !6458
  %127 = load %struct.dirent64.12*, %struct.dirent64.12** %6, align 8, !dbg !6459
  %128 = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %127, i32 0, i32 2, !dbg !6460
  %129 = load i16, i16* %128, align 8, !dbg !6460
  %130 = zext i16 %129 to i64, !dbg !6459
  %131 = load i64, i64* %11, align 8, !dbg !6461
  %132 = add nsw i64 %131, %130, !dbg !6461
  store i64 %132, i64* %11, align 8, !dbg !6461
  %133 = load i64, i64* %10, align 8, !dbg !6462
  %134 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !6463
  %135 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %134, i32 0, i32 2, !dbg !6464
  store i64 %133, i64* %135, align 8, !dbg !6465
  %136 = load i64, i64* %11, align 8, !dbg !6466
  %137 = trunc i64 %136 to i32, !dbg !6466
  store i32 %137, i32* %4, align 4, !dbg !6467
  br label %207, !dbg !6467

138:                                              ; preds = %31
  call void @llvm.dbg.declare(metadata i64* %13, metadata !6468, metadata !DIExpression()), !dbg !6470
  %139 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !6471
  %140 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %139, i32 0, i32 2, !dbg !6472
  %141 = load i64, i64* %140, align 8, !dbg !6472
  %142 = sub nsw i64 %141, 4096, !dbg !6473
  store i64 %142, i64* %13, align 8, !dbg !6470
  %143 = load %struct.dirent64.12*, %struct.dirent64.12** %6, align 8, !dbg !6474
  %144 = bitcast %struct.dirent64.12* %143 to i8*, !dbg !6475
  %145 = load i32, i32* %7, align 4, !dbg !6476
  %146 = zext i32 %145 to i64, !dbg !6476
  %147 = call i8* @memset(i8* %144, i32 0, i64 %146), !dbg !6475
  call void @llvm.dbg.declare(metadata i64* %14, metadata !6477, metadata !DIExpression()), !dbg !6478
  %148 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !6479
  %149 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %148, i32 0, i32 0, !dbg !6480
  %150 = load i32, i32* %149, align 8, !dbg !6480
  %151 = load i64, i64* %13, align 8, !dbg !6481
  %152 = call i64 (i64, ...) @syscall(i64 8, i32 %150, i64 %151, i32 0) #15, !dbg !6482
  store i64 %152, i64* %14, align 8, !dbg !6478
  %153 = load i64, i64* %14, align 8, !dbg !6483
  %154 = load i64, i64* %14, align 8, !dbg !6484
  %155 = icmp ne i64 %154, -1, !dbg !6484
  br i1 %155, label %157, label %156, !dbg !6487

156:                                              ; preds = %138
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.105, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.83, i64 0, i64 0), i32 844, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__.__fd_getdents, i64 0, i64 0)) #17, !dbg !6484
  unreachable, !dbg !6484

157:                                              ; preds = %138
  call void @llvm.dbg.declare(metadata i32* %15, metadata !6488, metadata !DIExpression()), !dbg !6489
  %158 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !6490
  %159 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %158, i32 0, i32 0, !dbg !6491
  %160 = load i32, i32* %159, align 8, !dbg !6491
  %161 = load %struct.dirent64.12*, %struct.dirent64.12** %6, align 8, !dbg !6492
  %162 = load i32, i32* %7, align 4, !dbg !6493
  %163 = call i64 (i64, ...) @syscall(i64 217, i32 %160, %struct.dirent64.12* %161, i32 %162) #15, !dbg !6494
  %164 = trunc i64 %163 to i32, !dbg !6494
  store i32 %164, i32* %15, align 4, !dbg !6489
  %165 = load i32, i32* %15, align 4, !dbg !6495
  %166 = icmp sgt i32 %165, -1, !dbg !6497
  br i1 %166, label %167, label %205, !dbg !6498

167:                                              ; preds = %157
  call void @llvm.dbg.declare(metadata i32* %16, metadata !6499, metadata !DIExpression()), !dbg !6501
  store i32 0, i32* %16, align 4, !dbg !6501
  %168 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !6502
  %169 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %168, i32 0, i32 0, !dbg !6503
  %170 = load i32, i32* %169, align 8, !dbg !6503
  %171 = call i64 (i64, ...) @syscall(i64 8, i32 %170, i32 0, i32 1) #15, !dbg !6504
  %172 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !6505
  %173 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %172, i32 0, i32 2, !dbg !6506
  store i64 %171, i64* %173, align 8, !dbg !6507
  %174 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !6508
  %175 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %174, i32 0, i32 2, !dbg !6508
  %176 = load i64, i64* %175, align 8, !dbg !6508
  %177 = icmp ne i64 %176, -1, !dbg !6508
  br i1 %177, label %179, label %178, !dbg !6511

178:                                              ; preds = %167
  call void @__assert_fail(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.106, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.83, i64 0, i64 0), i32 849, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__.__fd_getdents, i64 0, i64 0)) #17, !dbg !6508
  unreachable, !dbg !6508

179:                                              ; preds = %167
  %180 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %8, align 8, !dbg !6512
  %181 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %180, i32 0, i32 2, !dbg !6513
  %182 = load i64, i64* %181, align 8, !dbg !6514
  %183 = add nsw i64 %182, 4096, !dbg !6514
  store i64 %183, i64* %181, align 8, !dbg !6514
  br label %184, !dbg !6515

184:                                              ; preds = %188, %179
  %185 = load i32, i32* %16, align 4, !dbg !6516
  %186 = load i32, i32* %15, align 4, !dbg !6517
  %187 = icmp slt i32 %185, %186, !dbg !6518
  br i1 %187, label %188, label %205, !dbg !6515

188:                                              ; preds = %184
  call void @llvm.dbg.declare(metadata %struct.dirent64.12** %17, metadata !6519, metadata !DIExpression()), !dbg !6521
  %189 = load %struct.dirent64.12*, %struct.dirent64.12** %6, align 8, !dbg !6522
  %190 = bitcast %struct.dirent64.12* %189 to i8*, !dbg !6523
  %191 = load i32, i32* %16, align 4, !dbg !6524
  %192 = sext i32 %191 to i64, !dbg !6525
  %193 = getelementptr inbounds i8, i8* %190, i64 %192, !dbg !6525
  %194 = bitcast i8* %193 to %struct.dirent64.12*, !dbg !6526
  store %struct.dirent64.12* %194, %struct.dirent64.12** %17, align 8, !dbg !6521
  %195 = load %struct.dirent64.12*, %struct.dirent64.12** %17, align 8, !dbg !6527
  %196 = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %195, i32 0, i32 1, !dbg !6528
  %197 = load i64, i64* %196, align 8, !dbg !6529
  %198 = add nsw i64 %197, 4096, !dbg !6529
  store i64 %198, i64* %196, align 8, !dbg !6529
  %199 = load %struct.dirent64.12*, %struct.dirent64.12** %17, align 8, !dbg !6530
  %200 = getelementptr inbounds %struct.dirent64.12, %struct.dirent64.12* %199, i32 0, i32 2, !dbg !6531
  %201 = load i16, i16* %200, align 8, !dbg !6531
  %202 = zext i16 %201 to i32, !dbg !6530
  %203 = load i32, i32* %16, align 4, !dbg !6532
  %204 = add nsw i32 %203, %202, !dbg !6532
  store i32 %204, i32* %16, align 4, !dbg !6532
  br label %184, !dbg !6515, !llvm.loop !6533

205:                                              ; preds = %184, %157
  %206 = load i32, i32* %15, align 4, !dbg !6535
  store i32 %206, i32* %4, align 4, !dbg !6536
  br label %207, !dbg !6536

207:                                              ; preds = %205, %106, %52, %29, %22
  %208 = load i32, i32* %4, align 4, !dbg !6537
  ret i32 %208, !dbg !6537
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ioctl(i32 %0, i64 %1, ...) #0 !dbg !6538 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca %struct.exe_file_t.17*, align 8
  %7 = alloca [1 x %struct.__va_list_tag.13], align 16
  %8 = alloca i8*, align 8
  %9 = alloca %struct.stat64.15*, align 8
  %10 = alloca %struct.termios*, align 8
  %11 = alloca %struct.winsize*, align 8
  %12 = alloca i32*, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6541, metadata !DIExpression()), !dbg !6542
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !6543, metadata !DIExpression()), !dbg !6544
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %6, metadata !6545, metadata !DIExpression()), !dbg !6546
  %13 = load i32, i32* %4, align 4, !dbg !6547
  %14 = call %struct.exe_file_t.17* @__get_file(i32 %13), !dbg !6548
  store %struct.exe_file_t.17* %14, %struct.exe_file_t.17** %6, align 8, !dbg !6546
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag.13]* %7, metadata !6549, metadata !DIExpression()), !dbg !6560
  call void @llvm.dbg.declare(metadata i8** %8, metadata !6561, metadata !DIExpression()), !dbg !6562
  %15 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !6563
  %16 = icmp ne %struct.exe_file_t.17* %15, null, !dbg !6563
  br i1 %16, label %19, label %17, !dbg !6565

17:                                               ; preds = %2
  %18 = call i32* @__errno_location() #20, !dbg !6566
  store i32 9, i32* %18, align 4, !dbg !6568
  store i32 -1, i32* %3, align 4, !dbg !6569
  br label %230, !dbg !6569

19:                                               ; preds = %2
  %20 = getelementptr inbounds [1 x %struct.__va_list_tag.13], [1 x %struct.__va_list_tag.13]* %7, i64 0, i64 0, !dbg !6570
  %21 = bitcast %struct.__va_list_tag.13* %20 to i8*, !dbg !6570
  call void @llvm.va_start(i8* %21), !dbg !6570
  %22 = getelementptr inbounds [1 x %struct.__va_list_tag.13], [1 x %struct.__va_list_tag.13]* %7, i64 0, i64 0, !dbg !6571
  %23 = getelementptr inbounds %struct.__va_list_tag.13, %struct.__va_list_tag.13* %22, i32 0, i32 0, !dbg !6571
  %24 = load i32, i32* %23, align 16, !dbg !6571
  %25 = icmp ule i32 %24, 40, !dbg !6571
  br i1 %25, label %26, label %32, !dbg !6571

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.__va_list_tag.13, %struct.__va_list_tag.13* %22, i32 0, i32 3, !dbg !6571
  %28 = load i8*, i8** %27, align 16, !dbg !6571
  %29 = getelementptr i8, i8* %28, i32 %24, !dbg !6571
  %30 = bitcast i8* %29 to i8**, !dbg !6571
  %31 = add i32 %24, 8, !dbg !6571
  store i32 %31, i32* %23, align 16, !dbg !6571
  br label %37, !dbg !6571

32:                                               ; preds = %19
  %33 = getelementptr inbounds %struct.__va_list_tag.13, %struct.__va_list_tag.13* %22, i32 0, i32 2, !dbg !6571
  %34 = load i8*, i8** %33, align 8, !dbg !6571
  %35 = bitcast i8* %34 to i8**, !dbg !6571
  %36 = getelementptr i8, i8* %34, i32 8, !dbg !6571
  store i8* %36, i8** %33, align 8, !dbg !6571
  br label %37, !dbg !6571

37:                                               ; preds = %32, %26
  %38 = phi i8** [ %30, %26 ], [ %35, %32 ], !dbg !6571
  %39 = load i8*, i8** %38, align 8, !dbg !6571
  store i8* %39, i8** %8, align 8, !dbg !6572
  %40 = getelementptr inbounds [1 x %struct.__va_list_tag.13], [1 x %struct.__va_list_tag.13]* %7, i64 0, i64 0, !dbg !6573
  %41 = bitcast %struct.__va_list_tag.13* %40 to i8*, !dbg !6573
  call void @llvm.va_end(i8* %41), !dbg !6573
  %42 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !6574
  %43 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %42, i32 0, i32 3, !dbg !6576
  %44 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %43, align 8, !dbg !6576
  %45 = icmp ne %struct.exe_disk_file_t.16* %44, null, !dbg !6574
  br i1 %45, label %46, label %222, !dbg !6577

46:                                               ; preds = %37
  call void @llvm.dbg.declare(metadata %struct.stat64.15** %9, metadata !6578, metadata !DIExpression()), !dbg !6580
  %47 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !6581
  %48 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %47, i32 0, i32 3, !dbg !6582
  %49 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %48, align 8, !dbg !6582
  %50 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %49, i32 0, i32 2, !dbg !6583
  %51 = load %struct.stat64.15*, %struct.stat64.15** %50, align 8, !dbg !6583
  %52 = bitcast %struct.stat64.15* %51 to %struct.stat64.15*, !dbg !6584
  store %struct.stat64.15* %52, %struct.stat64.15** %9, align 8, !dbg !6580
  %53 = load i64, i64* %5, align 8, !dbg !6585
  switch i64 %53, label %220 [
    i64 21505, label %54
    i64 21506, label %132
    i64 21507, label %141
    i64 21508, label %147
    i64 21523, label %156
    i64 21524, label %171
    i64 21531, label %181
    i64 2150657282, label %218
  ], !dbg !6586

54:                                               ; preds = %46
  call void @llvm.dbg.declare(metadata %struct.termios** %10, metadata !6587, metadata !DIExpression()), !dbg !6607
  %55 = load i8*, i8** %8, align 8, !dbg !6608
  %56 = bitcast i8* %55 to %struct.termios*, !dbg !6608
  store %struct.termios* %56, %struct.termios** %10, align 8, !dbg !6607
  call void @klee_warning_once(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.15.107, i64 0, i64 0)), !dbg !6609
  %57 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !6610
  %58 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %57, i32 0, i32 3, !dbg !6610
  %59 = load i32, i32* %58, align 8, !dbg !6610
  %60 = and i32 %59, 61440, !dbg !6610
  %61 = icmp eq i32 %60, 8192, !dbg !6610
  br i1 %61, label %62, label %130, !dbg !6612

62:                                               ; preds = %54
  %63 = load %struct.termios*, %struct.termios** %10, align 8, !dbg !6613
  %64 = getelementptr inbounds %struct.termios, %struct.termios* %63, i32 0, i32 0, !dbg !6615
  store i32 27906, i32* %64, align 4, !dbg !6616
  %65 = load %struct.termios*, %struct.termios** %10, align 8, !dbg !6617
  %66 = getelementptr inbounds %struct.termios, %struct.termios* %65, i32 0, i32 1, !dbg !6618
  store i32 5, i32* %66, align 4, !dbg !6619
  %67 = load %struct.termios*, %struct.termios** %10, align 8, !dbg !6620
  %68 = getelementptr inbounds %struct.termios, %struct.termios* %67, i32 0, i32 2, !dbg !6621
  store i32 1215, i32* %68, align 4, !dbg !6622
  %69 = load %struct.termios*, %struct.termios** %10, align 8, !dbg !6623
  %70 = getelementptr inbounds %struct.termios, %struct.termios* %69, i32 0, i32 3, !dbg !6624
  store i32 35287, i32* %70, align 4, !dbg !6625
  %71 = load %struct.termios*, %struct.termios** %10, align 8, !dbg !6626
  %72 = getelementptr inbounds %struct.termios, %struct.termios* %71, i32 0, i32 4, !dbg !6627
  store i8 0, i8* %72, align 4, !dbg !6628
  %73 = load %struct.termios*, %struct.termios** %10, align 8, !dbg !6629
  %74 = getelementptr inbounds %struct.termios, %struct.termios* %73, i32 0, i32 5, !dbg !6630
  %75 = getelementptr inbounds [32 x i8], [32 x i8]* %74, i64 0, i64 0, !dbg !6629
  store i8 3, i8* %75, align 1, !dbg !6631
  %76 = load %struct.termios*, %struct.termios** %10, align 8, !dbg !6632
  %77 = getelementptr inbounds %struct.termios, %struct.termios* %76, i32 0, i32 5, !dbg !6633
  %78 = getelementptr inbounds [32 x i8], [32 x i8]* %77, i64 0, i64 1, !dbg !6632
  store i8 28, i8* %78, align 1, !dbg !6634
  %79 = load %struct.termios*, %struct.termios** %10, align 8, !dbg !6635
  %80 = getelementptr inbounds %struct.termios, %struct.termios* %79, i32 0, i32 5, !dbg !6636
  %81 = getelementptr inbounds [32 x i8], [32 x i8]* %80, i64 0, i64 2, !dbg !6635
  store i8 127, i8* %81, align 1, !dbg !6637
  %82 = load %struct.termios*, %struct.termios** %10, align 8, !dbg !6638
  %83 = getelementptr inbounds %struct.termios, %struct.termios* %82, i32 0, i32 5, !dbg !6639
  %84 = getelementptr inbounds [32 x i8], [32 x i8]* %83, i64 0, i64 3, !dbg !6638
  store i8 21, i8* %84, align 1, !dbg !6640
  %85 = load %struct.termios*, %struct.termios** %10, align 8, !dbg !6641
  %86 = getelementptr inbounds %struct.termios, %struct.termios* %85, i32 0, i32 5, !dbg !6642
  %87 = getelementptr inbounds [32 x i8], [32 x i8]* %86, i64 0, i64 4, !dbg !6641
  store i8 4, i8* %87, align 1, !dbg !6643
  %88 = load %struct.termios*, %struct.termios** %10, align 8, !dbg !6644
  %89 = getelementptr inbounds %struct.termios, %struct.termios* %88, i32 0, i32 5, !dbg !6645
  %90 = getelementptr inbounds [32 x i8], [32 x i8]* %89, i64 0, i64 5, !dbg !6644
  store i8 0, i8* %90, align 1, !dbg !6646
  %91 = load %struct.termios*, %struct.termios** %10, align 8, !dbg !6647
  %92 = getelementptr inbounds %struct.termios, %struct.termios* %91, i32 0, i32 5, !dbg !6648
  %93 = getelementptr inbounds [32 x i8], [32 x i8]* %92, i64 0, i64 6, !dbg !6647
  store i8 1, i8* %93, align 1, !dbg !6649
  %94 = load %struct.termios*, %struct.termios** %10, align 8, !dbg !6650
  %95 = getelementptr inbounds %struct.termios, %struct.termios* %94, i32 0, i32 5, !dbg !6651
  %96 = getelementptr inbounds [32 x i8], [32 x i8]* %95, i64 0, i64 7, !dbg !6650
  store i8 -1, i8* %96, align 1, !dbg !6652
  %97 = load %struct.termios*, %struct.termios** %10, align 8, !dbg !6653
  %98 = getelementptr inbounds %struct.termios, %struct.termios* %97, i32 0, i32 5, !dbg !6654
  %99 = getelementptr inbounds [32 x i8], [32 x i8]* %98, i64 0, i64 8, !dbg !6653
  store i8 17, i8* %99, align 1, !dbg !6655
  %100 = load %struct.termios*, %struct.termios** %10, align 8, !dbg !6656
  %101 = getelementptr inbounds %struct.termios, %struct.termios* %100, i32 0, i32 5, !dbg !6657
  %102 = getelementptr inbounds [32 x i8], [32 x i8]* %101, i64 0, i64 9, !dbg !6656
  store i8 19, i8* %102, align 1, !dbg !6658
  %103 = load %struct.termios*, %struct.termios** %10, align 8, !dbg !6659
  %104 = getelementptr inbounds %struct.termios, %struct.termios* %103, i32 0, i32 5, !dbg !6660
  %105 = getelementptr inbounds [32 x i8], [32 x i8]* %104, i64 0, i64 10, !dbg !6659
  store i8 26, i8* %105, align 1, !dbg !6661
  %106 = load %struct.termios*, %struct.termios** %10, align 8, !dbg !6662
  %107 = getelementptr inbounds %struct.termios, %struct.termios* %106, i32 0, i32 5, !dbg !6663
  %108 = getelementptr inbounds [32 x i8], [32 x i8]* %107, i64 0, i64 11, !dbg !6662
  store i8 -1, i8* %108, align 1, !dbg !6664
  %109 = load %struct.termios*, %struct.termios** %10, align 8, !dbg !6665
  %110 = getelementptr inbounds %struct.termios, %struct.termios* %109, i32 0, i32 5, !dbg !6666
  %111 = getelementptr inbounds [32 x i8], [32 x i8]* %110, i64 0, i64 12, !dbg !6665
  store i8 18, i8* %111, align 1, !dbg !6667
  %112 = load %struct.termios*, %struct.termios** %10, align 8, !dbg !6668
  %113 = getelementptr inbounds %struct.termios, %struct.termios* %112, i32 0, i32 5, !dbg !6669
  %114 = getelementptr inbounds [32 x i8], [32 x i8]* %113, i64 0, i64 13, !dbg !6668
  store i8 15, i8* %114, align 1, !dbg !6670
  %115 = load %struct.termios*, %struct.termios** %10, align 8, !dbg !6671
  %116 = getelementptr inbounds %struct.termios, %struct.termios* %115, i32 0, i32 5, !dbg !6672
  %117 = getelementptr inbounds [32 x i8], [32 x i8]* %116, i64 0, i64 14, !dbg !6671
  store i8 23, i8* %117, align 1, !dbg !6673
  %118 = load %struct.termios*, %struct.termios** %10, align 8, !dbg !6674
  %119 = getelementptr inbounds %struct.termios, %struct.termios* %118, i32 0, i32 5, !dbg !6675
  %120 = getelementptr inbounds [32 x i8], [32 x i8]* %119, i64 0, i64 15, !dbg !6674
  store i8 22, i8* %120, align 1, !dbg !6676
  %121 = load %struct.termios*, %struct.termios** %10, align 8, !dbg !6677
  %122 = getelementptr inbounds %struct.termios, %struct.termios* %121, i32 0, i32 5, !dbg !6678
  %123 = getelementptr inbounds [32 x i8], [32 x i8]* %122, i64 0, i64 16, !dbg !6677
  store i8 -1, i8* %123, align 1, !dbg !6679
  %124 = load %struct.termios*, %struct.termios** %10, align 8, !dbg !6680
  %125 = getelementptr inbounds %struct.termios, %struct.termios* %124, i32 0, i32 5, !dbg !6681
  %126 = getelementptr inbounds [32 x i8], [32 x i8]* %125, i64 0, i64 17, !dbg !6680
  store i8 0, i8* %126, align 1, !dbg !6682
  %127 = load %struct.termios*, %struct.termios** %10, align 8, !dbg !6683
  %128 = getelementptr inbounds %struct.termios, %struct.termios* %127, i32 0, i32 5, !dbg !6684
  %129 = getelementptr inbounds [32 x i8], [32 x i8]* %128, i64 0, i64 18, !dbg !6683
  store i8 0, i8* %129, align 1, !dbg !6685
  store i32 0, i32* %3, align 4, !dbg !6686
  br label %230, !dbg !6686

130:                                              ; preds = %54
  %131 = call i32* @__errno_location() #20, !dbg !6687
  store i32 25, i32* %131, align 4, !dbg !6689
  store i32 -1, i32* %3, align 4, !dbg !6690
  br label %230, !dbg !6690

132:                                              ; preds = %46
  call void @klee_warning_once(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.16.108, i64 0, i64 0)), !dbg !6691
  %133 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !6693
  %134 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %133, i32 0, i32 3, !dbg !6693
  %135 = load i32, i32* %134, align 8, !dbg !6693
  %136 = and i32 %135, 61440, !dbg !6693
  %137 = icmp eq i32 %136, 8192, !dbg !6693
  br i1 %137, label %138, label %139, !dbg !6695

138:                                              ; preds = %132
  store i32 0, i32* %3, align 4, !dbg !6696
  br label %230, !dbg !6696

139:                                              ; preds = %132
  %140 = call i32* @__errno_location() #20, !dbg !6698
  store i32 25, i32* %140, align 4, !dbg !6700
  store i32 -1, i32* %3, align 4, !dbg !6701
  br label %230, !dbg !6701

141:                                              ; preds = %46
  call void @klee_warning_once(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.17.109, i64 0, i64 0)), !dbg !6702
  %142 = load i32, i32* %4, align 4, !dbg !6704
  %143 = icmp eq i32 %142, 0, !dbg !6706
  br i1 %143, label %144, label %145, !dbg !6707

144:                                              ; preds = %141
  store i32 0, i32* %3, align 4, !dbg !6708
  br label %230, !dbg !6708

145:                                              ; preds = %141
  %146 = call i32* @__errno_location() #20, !dbg !6710
  store i32 25, i32* %146, align 4, !dbg !6712
  store i32 -1, i32* %3, align 4, !dbg !6713
  br label %230, !dbg !6713

147:                                              ; preds = %46
  call void @klee_warning_once(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.18.110, i64 0, i64 0)), !dbg !6714
  %148 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !6716
  %149 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %148, i32 0, i32 3, !dbg !6716
  %150 = load i32, i32* %149, align 8, !dbg !6716
  %151 = and i32 %150, 61440, !dbg !6716
  %152 = icmp eq i32 %151, 8192, !dbg !6716
  br i1 %152, label %153, label %154, !dbg !6718

153:                                              ; preds = %147
  store i32 0, i32* %3, align 4, !dbg !6719
  br label %230, !dbg !6719

154:                                              ; preds = %147
  %155 = call i32* @__errno_location() #20, !dbg !6721
  store i32 25, i32* %155, align 4, !dbg !6723
  store i32 -1, i32* %3, align 4, !dbg !6724
  br label %230, !dbg !6724

156:                                              ; preds = %46
  call void @llvm.dbg.declare(metadata %struct.winsize** %11, metadata !6725, metadata !DIExpression()), !dbg !6735
  %157 = load i8*, i8** %8, align 8, !dbg !6736
  %158 = bitcast i8* %157 to %struct.winsize*, !dbg !6736
  store %struct.winsize* %158, %struct.winsize** %11, align 8, !dbg !6735
  %159 = load %struct.winsize*, %struct.winsize** %11, align 8, !dbg !6737
  %160 = getelementptr inbounds %struct.winsize, %struct.winsize* %159, i32 0, i32 0, !dbg !6738
  store i16 24, i16* %160, align 2, !dbg !6739
  %161 = load %struct.winsize*, %struct.winsize** %11, align 8, !dbg !6740
  %162 = getelementptr inbounds %struct.winsize, %struct.winsize* %161, i32 0, i32 1, !dbg !6741
  store i16 80, i16* %162, align 2, !dbg !6742
  call void @klee_warning_once(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.19.111, i64 0, i64 0)), !dbg !6743
  %163 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !6744
  %164 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %163, i32 0, i32 3, !dbg !6744
  %165 = load i32, i32* %164, align 8, !dbg !6744
  %166 = and i32 %165, 61440, !dbg !6744
  %167 = icmp eq i32 %166, 8192, !dbg !6744
  br i1 %167, label %168, label %169, !dbg !6746

168:                                              ; preds = %156
  store i32 0, i32* %3, align 4, !dbg !6747
  br label %230, !dbg !6747

169:                                              ; preds = %156
  %170 = call i32* @__errno_location() #20, !dbg !6749
  store i32 25, i32* %170, align 4, !dbg !6751
  store i32 -1, i32* %3, align 4, !dbg !6752
  br label %230, !dbg !6752

171:                                              ; preds = %46
  call void @klee_warning_once(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.20.112, i64 0, i64 0)), !dbg !6753
  %172 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !6755
  %173 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %172, i32 0, i32 3, !dbg !6755
  %174 = load i32, i32* %173, align 8, !dbg !6755
  %175 = and i32 %174, 61440, !dbg !6755
  %176 = icmp eq i32 %175, 8192, !dbg !6755
  br i1 %176, label %177, label %179, !dbg !6757

177:                                              ; preds = %171
  %178 = call i32* @__errno_location() #20, !dbg !6758
  store i32 22, i32* %178, align 4, !dbg !6760
  store i32 -1, i32* %3, align 4, !dbg !6761
  br label %230, !dbg !6761

179:                                              ; preds = %171
  %180 = call i32* @__errno_location() #20, !dbg !6762
  store i32 25, i32* %180, align 4, !dbg !6764
  store i32 -1, i32* %3, align 4, !dbg !6765
  br label %230, !dbg !6765

181:                                              ; preds = %46
  call void @llvm.dbg.declare(metadata i32** %12, metadata !6766, metadata !DIExpression()), !dbg !6768
  %182 = load i8*, i8** %8, align 8, !dbg !6769
  %183 = bitcast i8* %182 to i32*, !dbg !6769
  store i32* %183, i32** %12, align 8, !dbg !6768
  call void @klee_warning_once(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.21.113, i64 0, i64 0)), !dbg !6770
  %184 = load %struct.stat64.15*, %struct.stat64.15** %9, align 8, !dbg !6771
  %185 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %184, i32 0, i32 3, !dbg !6771
  %186 = load i32, i32* %185, align 8, !dbg !6771
  %187 = and i32 %186, 61440, !dbg !6771
  %188 = icmp eq i32 %187, 8192, !dbg !6771
  br i1 %188, label %189, label %216, !dbg !6773

189:                                              ; preds = %181
  %190 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !6774
  %191 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %190, i32 0, i32 2, !dbg !6777
  %192 = load i64, i64* %191, align 8, !dbg !6777
  %193 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !6778
  %194 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %193, i32 0, i32 3, !dbg !6779
  %195 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %194, align 8, !dbg !6779
  %196 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %195, i32 0, i32 0, !dbg !6780
  %197 = load i32, i32* %196, align 8, !dbg !6780
  %198 = zext i32 %197 to i64, !dbg !6781
  %199 = icmp slt i64 %192, %198, !dbg !6782
  br i1 %199, label %200, label %213, !dbg !6783

200:                                              ; preds = %189
  %201 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !6784
  %202 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %201, i32 0, i32 3, !dbg !6786
  %203 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %202, align 8, !dbg !6786
  %204 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %203, i32 0, i32 0, !dbg !6787
  %205 = load i32, i32* %204, align 8, !dbg !6787
  %206 = zext i32 %205 to i64, !dbg !6784
  %207 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !6788
  %208 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %207, i32 0, i32 2, !dbg !6789
  %209 = load i64, i64* %208, align 8, !dbg !6789
  %210 = sub nsw i64 %206, %209, !dbg !6790
  %211 = trunc i64 %210 to i32, !dbg !6784
  %212 = load i32*, i32** %12, align 8, !dbg !6791
  store i32 %211, i32* %212, align 4, !dbg !6792
  br label %215, !dbg !6793

213:                                              ; preds = %189
  %214 = load i32*, i32** %12, align 8, !dbg !6794
  store i32 0, i32* %214, align 4, !dbg !6796
  br label %215

215:                                              ; preds = %213, %200
  store i32 0, i32* %3, align 4, !dbg !6797
  br label %230, !dbg !6797

216:                                              ; preds = %181
  %217 = call i32* @__errno_location() #20, !dbg !6798
  store i32 25, i32* %217, align 4, !dbg !6800
  store i32 -1, i32* %3, align 4, !dbg !6801
  br label %230, !dbg !6801

218:                                              ; preds = %46
  call void @klee_warning(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.22.114, i64 0, i64 0)), !dbg !6802
  %219 = call i32* @__errno_location() #20, !dbg !6804
  store i32 22, i32* %219, align 4, !dbg !6805
  store i32 -1, i32* %3, align 4, !dbg !6806
  br label %230, !dbg !6806

220:                                              ; preds = %46
  call void @klee_warning(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12.104, i64 0, i64 0)), !dbg !6807
  %221 = call i32* @__errno_location() #20, !dbg !6808
  store i32 22, i32* %221, align 4, !dbg !6809
  store i32 -1, i32* %3, align 4, !dbg !6810
  br label %230, !dbg !6810

222:                                              ; preds = %37
  %223 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !6811
  %224 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %223, i32 0, i32 0, !dbg !6812
  %225 = load i32, i32* %224, align 8, !dbg !6812
  %226 = load i64, i64* %5, align 8, !dbg !6813
  %227 = load i8*, i8** %8, align 8, !dbg !6814
  %228 = call i64 (i64, ...) @syscall(i64 16, i32 %225, i64 %226, i8* %227) #15, !dbg !6815
  %229 = trunc i64 %228 to i32, !dbg !6815
  store i32 %229, i32* %3, align 4, !dbg !6816
  br label %230, !dbg !6816

230:                                              ; preds = %222, %220, %218, %216, %215, %179, %177, %169, %168, %154, %153, %145, %144, %139, %138, %130, %62, %17
  %231 = load i32, i32* %3, align 4, !dbg !6817
  ret i32 %231, !dbg !6817
}

declare dso_local void @klee_warning_once(i8*) #4

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @fcntl(i32 %0, i32 %1, ...) #0 !dbg !6818 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.exe_file_t.17*, align 8
  %7 = alloca [1 x %struct.__va_list_tag.13], align 16
  %8 = alloca i32, align 4
  %9 = alloca %struct.flock*, align 8
  %10 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6821, metadata !DIExpression()), !dbg !6822
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6823, metadata !DIExpression()), !dbg !6824
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %6, metadata !6825, metadata !DIExpression()), !dbg !6826
  %11 = load i32, i32* %4, align 4, !dbg !6827
  %12 = call %struct.exe_file_t.17* @__get_file(i32 %11), !dbg !6828
  store %struct.exe_file_t.17* %12, %struct.exe_file_t.17** %6, align 8, !dbg !6826
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag.13]* %7, metadata !6829, metadata !DIExpression()), !dbg !6830
  call void @llvm.dbg.declare(metadata i32* %8, metadata !6831, metadata !DIExpression()), !dbg !6832
  call void @llvm.dbg.declare(metadata %struct.flock** %9, metadata !6833, metadata !DIExpression()), !dbg !6844
  %13 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !6845
  %14 = icmp ne %struct.exe_file_t.17* %13, null, !dbg !6845
  br i1 %14, label %17, label %15, !dbg !6847

15:                                               ; preds = %2
  %16 = call i32* @__errno_location() #20, !dbg !6848
  store i32 9, i32* %16, align 4, !dbg !6850
  store i32 -1, i32* %3, align 4, !dbg !6851
  br label %131, !dbg !6851

17:                                               ; preds = %2
  %18 = load i32, i32* %5, align 4, !dbg !6852
  %19 = icmp eq i32 %18, 1, !dbg !6854
  %20 = load i32, i32* %5, align 4
  %21 = icmp eq i32 %20, 3
  %or.cond = or i1 %19, %21, !dbg !6855
  %22 = load i32, i32* %5, align 4
  %23 = icmp eq i32 %22, 9
  %or.cond3 = or i1 %or.cond, %23, !dbg !6855
  %24 = load i32, i32* %5, align 4
  %25 = icmp eq i32 %24, 11
  %or.cond5 = or i1 %or.cond3, %25, !dbg !6855
  %26 = load i32, i32* %5, align 4
  %27 = icmp eq i32 %26, 1025
  %or.cond7 = or i1 %or.cond5, %27, !dbg !6855
  %28 = load i32, i32* %5, align 4
  %29 = icmp eq i32 %28, 1026
  %or.cond9 = or i1 %or.cond7, %29, !dbg !6855
  br i1 %or.cond9, label %30, label %31, !dbg !6855

30:                                               ; preds = %17
  store i32 0, i32* %8, align 4, !dbg !6856
  br label %84, !dbg !6858

31:                                               ; preds = %17
  %32 = load i32, i32* %5, align 4, !dbg !6859
  %33 = icmp eq i32 %32, 5, !dbg !6861
  %34 = load i32, i32* %5, align 4
  %35 = icmp eq i32 %34, 6
  %or.cond11 = or i1 %33, %35, !dbg !6862
  %36 = load i32, i32* %5, align 4
  %37 = icmp eq i32 %36, 7
  %or.cond13 = or i1 %or.cond11, %37, !dbg !6862
  br i1 %or.cond13, label %38, label %61, !dbg !6862

38:                                               ; preds = %31
  %39 = getelementptr inbounds [1 x %struct.__va_list_tag.13], [1 x %struct.__va_list_tag.13]* %7, i64 0, i64 0, !dbg !6863
  %40 = bitcast %struct.__va_list_tag.13* %39 to i8*, !dbg !6863
  call void @llvm.va_start(i8* %40), !dbg !6863
  %41 = getelementptr inbounds [1 x %struct.__va_list_tag.13], [1 x %struct.__va_list_tag.13]* %7, i64 0, i64 0, !dbg !6865
  %42 = getelementptr inbounds %struct.__va_list_tag.13, %struct.__va_list_tag.13* %41, i32 0, i32 0, !dbg !6865
  %43 = load i32, i32* %42, align 16, !dbg !6865
  %44 = icmp ule i32 %43, 40, !dbg !6865
  br i1 %44, label %45, label %51, !dbg !6865

45:                                               ; preds = %38
  %46 = getelementptr inbounds %struct.__va_list_tag.13, %struct.__va_list_tag.13* %41, i32 0, i32 3, !dbg !6865
  %47 = load i8*, i8** %46, align 16, !dbg !6865
  %48 = getelementptr i8, i8* %47, i32 %43, !dbg !6865
  %49 = bitcast i8* %48 to %struct.flock**, !dbg !6865
  %50 = add i32 %43, 8, !dbg !6865
  store i32 %50, i32* %42, align 16, !dbg !6865
  br label %56, !dbg !6865

51:                                               ; preds = %38
  %52 = getelementptr inbounds %struct.__va_list_tag.13, %struct.__va_list_tag.13* %41, i32 0, i32 2, !dbg !6865
  %53 = load i8*, i8** %52, align 8, !dbg !6865
  %54 = bitcast i8* %53 to %struct.flock**, !dbg !6865
  %55 = getelementptr i8, i8* %53, i32 8, !dbg !6865
  store i8* %55, i8** %52, align 8, !dbg !6865
  br label %56, !dbg !6865

56:                                               ; preds = %51, %45
  %57 = phi %struct.flock** [ %49, %45 ], [ %54, %51 ], !dbg !6865
  %58 = load %struct.flock*, %struct.flock** %57, align 8, !dbg !6865
  store %struct.flock* %58, %struct.flock** %9, align 8, !dbg !6866
  %59 = getelementptr inbounds [1 x %struct.__va_list_tag.13], [1 x %struct.__va_list_tag.13]* %7, i64 0, i64 0, !dbg !6867
  %60 = bitcast %struct.__va_list_tag.13* %59 to i8*, !dbg !6867
  call void @llvm.va_end(i8* %60), !dbg !6867
  br label %84, !dbg !6868

61:                                               ; preds = %31
  %62 = getelementptr inbounds [1 x %struct.__va_list_tag.13], [1 x %struct.__va_list_tag.13]* %7, i64 0, i64 0, !dbg !6869
  %63 = bitcast %struct.__va_list_tag.13* %62 to i8*, !dbg !6869
  call void @llvm.va_start(i8* %63), !dbg !6869
  %64 = getelementptr inbounds [1 x %struct.__va_list_tag.13], [1 x %struct.__va_list_tag.13]* %7, i64 0, i64 0, !dbg !6871
  %65 = getelementptr inbounds %struct.__va_list_tag.13, %struct.__va_list_tag.13* %64, i32 0, i32 0, !dbg !6871
  %66 = load i32, i32* %65, align 16, !dbg !6871
  %67 = icmp ule i32 %66, 40, !dbg !6871
  br i1 %67, label %68, label %74, !dbg !6871

68:                                               ; preds = %61
  %69 = getelementptr inbounds %struct.__va_list_tag.13, %struct.__va_list_tag.13* %64, i32 0, i32 3, !dbg !6871
  %70 = load i8*, i8** %69, align 16, !dbg !6871
  %71 = getelementptr i8, i8* %70, i32 %66, !dbg !6871
  %72 = bitcast i8* %71 to i32*, !dbg !6871
  %73 = add i32 %66, 8, !dbg !6871
  store i32 %73, i32* %65, align 16, !dbg !6871
  br label %79, !dbg !6871

74:                                               ; preds = %61
  %75 = getelementptr inbounds %struct.__va_list_tag.13, %struct.__va_list_tag.13* %64, i32 0, i32 2, !dbg !6871
  %76 = load i8*, i8** %75, align 8, !dbg !6871
  %77 = bitcast i8* %76 to i32*, !dbg !6871
  %78 = getelementptr i8, i8* %76, i32 8, !dbg !6871
  store i8* %78, i8** %75, align 8, !dbg !6871
  br label %79, !dbg !6871

79:                                               ; preds = %74, %68
  %80 = phi i32* [ %72, %68 ], [ %77, %74 ], !dbg !6871
  %81 = load i32, i32* %80, align 4, !dbg !6871
  store i32 %81, i32* %8, align 4, !dbg !6872
  %82 = getelementptr inbounds [1 x %struct.__va_list_tag.13], [1 x %struct.__va_list_tag.13]* %7, i64 0, i64 0, !dbg !6873
  %83 = bitcast %struct.__va_list_tag.13* %82 to i8*, !dbg !6873
  call void @llvm.va_end(i8* %83), !dbg !6873
  br label %84

84:                                               ; preds = %56, %79, %30
  %85 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !6874
  %86 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %85, i32 0, i32 3, !dbg !6876
  %87 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %86, align 8, !dbg !6876
  %88 = icmp ne %struct.exe_disk_file_t.16* %87, null, !dbg !6874
  br i1 %88, label %89, label %123, !dbg !6877

89:                                               ; preds = %84
  %90 = load i32, i32* %5, align 4, !dbg !6878
  switch i32 %90, label %121 [
    i32 1, label %91
    i32 2, label %102
    i32 3, label %116
    i32 5, label %117
    i32 6, label %120
  ], !dbg !6880

91:                                               ; preds = %89
  call void @llvm.dbg.declare(metadata i32* %10, metadata !6881, metadata !DIExpression()), !dbg !6884
  store i32 0, i32* %10, align 4, !dbg !6884
  %92 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !6885
  %93 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %92, i32 0, i32 1, !dbg !6887
  %94 = load i32, i32* %93, align 4, !dbg !6887
  %95 = and i32 %94, 2, !dbg !6888
  %96 = icmp ne i32 %95, 0, !dbg !6888
  br i1 %96, label %97, label %100, !dbg !6889

97:                                               ; preds = %91
  %98 = load i32, i32* %10, align 4, !dbg !6890
  %99 = or i32 %98, 1, !dbg !6890
  store i32 %99, i32* %10, align 4, !dbg !6890
  br label %100, !dbg !6891

100:                                              ; preds = %97, %91
  %101 = load i32, i32* %10, align 4, !dbg !6892
  store i32 %101, i32* %3, align 4, !dbg !6893
  br label %131, !dbg !6893

102:                                              ; preds = %89
  %103 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !6894
  %104 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %103, i32 0, i32 1, !dbg !6896
  %105 = load i32, i32* %104, align 4, !dbg !6897
  %106 = and i32 %105, -3, !dbg !6897
  store i32 %106, i32* %104, align 4, !dbg !6897
  %107 = load i32, i32* %8, align 4, !dbg !6898
  %108 = and i32 %107, 1, !dbg !6900
  %109 = icmp ne i32 %108, 0, !dbg !6900
  br i1 %109, label %110, label %115, !dbg !6901

110:                                              ; preds = %102
  %111 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !6902
  %112 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %111, i32 0, i32 1, !dbg !6903
  %113 = load i32, i32* %112, align 4, !dbg !6904
  %114 = or i32 %113, 2, !dbg !6904
  store i32 %114, i32* %112, align 4, !dbg !6904
  br label %115, !dbg !6902

115:                                              ; preds = %110, %102
  store i32 0, i32* %3, align 4, !dbg !6905
  br label %131, !dbg !6905

116:                                              ; preds = %89
  store i32 0, i32* %3, align 4, !dbg !6906
  br label %131, !dbg !6906

117:                                              ; preds = %89
  %118 = load %struct.flock*, %struct.flock** %9, align 8, !dbg !6908
  %119 = getelementptr inbounds %struct.flock, %struct.flock* %118, i32 0, i32 0, !dbg !6910
  store i16 2, i16* %119, align 8, !dbg !6911
  store i32 0, i32* %3, align 4, !dbg !6912
  br label %131, !dbg !6912

120:                                              ; preds = %89
  store i32 0, i32* %3, align 4, !dbg !6913
  br label %131, !dbg !6913

121:                                              ; preds = %89
  call void @klee_warning(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12.104, i64 0, i64 0)), !dbg !6915
  %122 = call i32* @__errno_location() #20, !dbg !6916
  store i32 22, i32* %122, align 4, !dbg !6917
  store i32 -1, i32* %3, align 4, !dbg !6918
  br label %131, !dbg !6918

123:                                              ; preds = %84
  %124 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !6919
  %125 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %124, i32 0, i32 0, !dbg !6920
  %126 = load i32, i32* %125, align 8, !dbg !6920
  %127 = load i32, i32* %5, align 4, !dbg !6921
  %128 = load i32, i32* %8, align 4, !dbg !6922
  %129 = call i64 (i64, ...) @syscall(i64 72, i32 %126, i32 %127, i32 %128) #15, !dbg !6923
  %130 = trunc i64 %129 to i32, !dbg !6923
  store i32 %130, i32* %3, align 4, !dbg !6924
  br label %131, !dbg !6924

131:                                              ; preds = %123, %121, %120, %117, %116, %115, %100, %15
  %132 = load i32, i32* %3, align 4, !dbg !6925
  ret i32 %132, !dbg !6925
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @__fd_statfs(i8* %0, %struct.statfs.11* %1) #0 !dbg !6926 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca %struct.statfs.11*, align 8
  %6 = alloca %struct.exe_disk_file_t.16*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !6950, metadata !DIExpression()), !dbg !6951
  store %struct.statfs.11* %1, %struct.statfs.11** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.statfs.11** %5, metadata !6952, metadata !DIExpression()), !dbg !6953
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %6, metadata !6954, metadata !DIExpression()), !dbg !6955
  %7 = load i8*, i8** %4, align 8, !dbg !6956
  %8 = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %7), !dbg !6957
  store %struct.exe_disk_file_t.16* %8, %struct.exe_disk_file_t.16** %6, align 8, !dbg !6955
  %9 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %6, align 8, !dbg !6958
  %10 = icmp ne %struct.exe_disk_file_t.16* %9, null, !dbg !6958
  br i1 %10, label %11, label %13, !dbg !6960

11:                                               ; preds = %2
  call void @klee_warning(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10.95, i64 0, i64 0)), !dbg !6961
  %12 = call i32* @__errno_location() #20, !dbg !6963
  store i32 2, i32* %12, align 4, !dbg !6964
  store i32 -1, i32* %3, align 4, !dbg !6965
  br label %19, !dbg !6965

13:                                               ; preds = %2
  %14 = load i8*, i8** %4, align 8, !dbg !6966
  %15 = call i8* @__concretize_string(i8* %14), !dbg !6967
  %16 = load %struct.statfs.11*, %struct.statfs.11** %5, align 8, !dbg !6968
  %17 = call i64 (i64, ...) @syscall(i64 137, i8* %15, %struct.statfs.11* %16) #15, !dbg !6969
  %18 = trunc i64 %17 to i32, !dbg !6969
  store i32 %18, i32* %3, align 4, !dbg !6970
  br label %19, !dbg !6970

19:                                               ; preds = %13, %11
  %20 = load i32, i32* %3, align 4, !dbg !6971
  ret i32 %20, !dbg !6971
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @fstatfs(i32 %0, %struct.statfs.11* nonnull %1) #0 !dbg !6972 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.statfs.11*, align 8
  %6 = alloca %struct.exe_file_t.17*, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6975, metadata !DIExpression()), !dbg !6976
  store %struct.statfs.11* %1, %struct.statfs.11** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.statfs.11** %5, metadata !6977, metadata !DIExpression()), !dbg !6978
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %6, metadata !6979, metadata !DIExpression()), !dbg !6980
  %7 = load i32, i32* %4, align 4, !dbg !6981
  %8 = call %struct.exe_file_t.17* @__get_file(i32 %7), !dbg !6982
  store %struct.exe_file_t.17* %8, %struct.exe_file_t.17** %6, align 8, !dbg !6980
  %9 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !6983
  %10 = icmp ne %struct.exe_file_t.17* %9, null, !dbg !6983
  br i1 %10, label %13, label %11, !dbg !6985

11:                                               ; preds = %2
  %12 = call i32* @__errno_location() #20, !dbg !6986
  store i32 9, i32* %12, align 4, !dbg !6988
  store i32 -1, i32* %3, align 4, !dbg !6989
  br label %27, !dbg !6989

13:                                               ; preds = %2
  %14 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !6990
  %15 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %14, i32 0, i32 3, !dbg !6992
  %16 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %15, align 8, !dbg !6992
  %17 = icmp ne %struct.exe_disk_file_t.16* %16, null, !dbg !6990
  br i1 %17, label %18, label %20, !dbg !6993

18:                                               ; preds = %13
  call void @klee_warning(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.23.117, i64 0, i64 0)), !dbg !6994
  %19 = call i32* @__errno_location() #20, !dbg !6996
  store i32 9, i32* %19, align 4, !dbg !6997
  store i32 -1, i32* %3, align 4, !dbg !6998
  br label %27, !dbg !6998

20:                                               ; preds = %13
  %21 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !6999
  %22 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %21, i32 0, i32 0, !dbg !7000
  %23 = load i32, i32* %22, align 8, !dbg !7000
  %24 = load %struct.statfs.11*, %struct.statfs.11** %5, align 8, !dbg !7001
  %25 = call i64 (i64, ...) @syscall(i64 138, i32 %23, %struct.statfs.11* %24) #15, !dbg !7002
  %26 = trunc i64 %25 to i32, !dbg !7002
  store i32 %26, i32* %3, align 4, !dbg !7003
  br label %27, !dbg !7003

27:                                               ; preds = %20, %18, %11
  %28 = load i32, i32* %3, align 4, !dbg !7004
  ret i32 %28, !dbg !7004
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @fsync(i32 %0) #0 !dbg !7005 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.exe_file_t.17*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7006, metadata !DIExpression()), !dbg !7007
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %4, metadata !7008, metadata !DIExpression()), !dbg !7009
  %5 = load i32, i32* %3, align 4, !dbg !7010
  %6 = call %struct.exe_file_t.17* @__get_file(i32 %5), !dbg !7011
  store %struct.exe_file_t.17* %6, %struct.exe_file_t.17** %4, align 8, !dbg !7009
  %7 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %4, align 8, !dbg !7012
  %8 = icmp ne %struct.exe_file_t.17* %7, null, !dbg !7012
  br i1 %8, label %11, label %9, !dbg !7014

9:                                                ; preds = %1
  %10 = call i32* @__errno_location() #20, !dbg !7015
  store i32 9, i32* %10, align 4, !dbg !7017
  store i32 -1, i32* %2, align 4, !dbg !7018
  br label %23, !dbg !7018

11:                                               ; preds = %1
  %12 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %4, align 8, !dbg !7019
  %13 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %12, i32 0, i32 3, !dbg !7021
  %14 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %13, align 8, !dbg !7021
  %15 = icmp ne %struct.exe_disk_file_t.16* %14, null, !dbg !7019
  br i1 %15, label %16, label %17, !dbg !7022

16:                                               ; preds = %11
  store i32 0, i32* %2, align 4, !dbg !7023
  br label %23, !dbg !7023

17:                                               ; preds = %11
  %18 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %4, align 8, !dbg !7025
  %19 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %18, i32 0, i32 0, !dbg !7026
  %20 = load i32, i32* %19, align 8, !dbg !7026
  %21 = call i64 (i64, ...) @syscall(i64 74, i32 %20) #15, !dbg !7027
  %22 = trunc i64 %21 to i32, !dbg !7027
  store i32 %22, i32* %2, align 4, !dbg !7028
  br label %23, !dbg !7028

23:                                               ; preds = %17, %16, %9
  %24 = load i32, i32* %2, align 4, !dbg !7029
  ret i32 %24, !dbg !7029
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @dup2(i32 %0, i32 %1) #0 !dbg !7030 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.exe_file_t.17*, align 8
  %7 = alloca %struct.exe_file_t.17*, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7033, metadata !DIExpression()), !dbg !7034
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7035, metadata !DIExpression()), !dbg !7036
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %6, metadata !7037, metadata !DIExpression()), !dbg !7038
  %8 = load i32, i32* %4, align 4, !dbg !7039
  %9 = call %struct.exe_file_t.17* @__get_file(i32 %8), !dbg !7040
  store %struct.exe_file_t.17* %9, %struct.exe_file_t.17** %6, align 8, !dbg !7038
  %10 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !7041
  %11 = icmp ne %struct.exe_file_t.17* %10, null, !dbg !7041
  %12 = load i32, i32* %5, align 4
  %13 = icmp sge i32 %12, 0
  %or.cond = and i1 %11, %13, !dbg !7043
  %14 = load i32, i32* %5, align 4
  %15 = icmp slt i32 %14, 32
  %or.cond3 = and i1 %or.cond, %15, !dbg !7043
  br i1 %or.cond3, label %18, label %16, !dbg !7043

16:                                               ; preds = %2
  %17 = call i32* @__errno_location() #20, !dbg !7044
  store i32 9, i32* %17, align 4, !dbg !7046
  store i32 -1, i32* %3, align 4, !dbg !7047
  br label %41, !dbg !7047

18:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %7, metadata !7048, metadata !DIExpression()), !dbg !7050
  %19 = load i32, i32* %5, align 4, !dbg !7051
  %20 = sext i32 %19 to i64, !dbg !7052
  %21 = getelementptr inbounds [32 x %struct.exe_file_t.17], [32 x %struct.exe_file_t.17]* getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32 }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 0), i64 0, i64 %20, !dbg !7052
  store %struct.exe_file_t.17* %21, %struct.exe_file_t.17** %7, align 8, !dbg !7050
  %22 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %7, align 8, !dbg !7053
  %23 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %22, i32 0, i32 1, !dbg !7055
  %24 = load i32, i32* %23, align 4, !dbg !7055
  %25 = and i32 %24, 1, !dbg !7056
  %26 = icmp ne i32 %25, 0, !dbg !7056
  br i1 %26, label %27, label %30, !dbg !7057

27:                                               ; preds = %18
  %28 = load i32, i32* %5, align 4, !dbg !7058
  %29 = call i32 @close(i32 %28), !dbg !7059
  br label %30, !dbg !7059

30:                                               ; preds = %27, %18
  %31 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %7, align 8, !dbg !7060
  %32 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %6, align 8, !dbg !7061
  %33 = bitcast %struct.exe_file_t.17* %31 to i8*, !dbg !7062
  %34 = bitcast %struct.exe_file_t.17* %32 to i8*, !dbg !7062
  %35 = call i8* @memcpy(i8* %33, i8* %34, i64 24), !dbg !7062
  %36 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %7, align 8, !dbg !7063
  %37 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %36, i32 0, i32 1, !dbg !7064
  %38 = load i32, i32* %37, align 4, !dbg !7065
  %39 = and i32 %38, -3, !dbg !7065
  store i32 %39, i32* %37, align 4, !dbg !7065
  %40 = load i32, i32* %5, align 4, !dbg !7066
  store i32 %40, i32* %3, align 4, !dbg !7067
  br label %41, !dbg !7067

41:                                               ; preds = %30, %16
  %42 = load i32, i32* %3, align 4, !dbg !7068
  ret i32 %42, !dbg !7068
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @dup(i32 %0) #0 !dbg !7069 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.exe_file_t.17*, align 8
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7070, metadata !DIExpression()), !dbg !7071
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %4, metadata !7072, metadata !DIExpression()), !dbg !7073
  %6 = load i32, i32* %3, align 4, !dbg !7074
  %7 = call %struct.exe_file_t.17* @__get_file(i32 %6), !dbg !7075
  store %struct.exe_file_t.17* %7, %struct.exe_file_t.17** %4, align 8, !dbg !7073
  %8 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %4, align 8, !dbg !7076
  %9 = icmp ne %struct.exe_file_t.17* %8, null, !dbg !7076
  br i1 %9, label %12, label %10, !dbg !7078

10:                                               ; preds = %1
  %11 = call i32* @__errno_location() #20, !dbg !7079
  store i32 9, i32* %11, align 4, !dbg !7081
  store i32 -1, i32* %2, align 4, !dbg !7082
  br label %36, !dbg !7082

12:                                               ; preds = %1
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7083, metadata !DIExpression()), !dbg !7085
  store i32 0, i32* %5, align 4, !dbg !7086
  br label %13, !dbg !7088

13:                                               ; preds = %24, %12
  %14 = load i32, i32* %5, align 4, !dbg !7089
  %15 = icmp slt i32 %14, 32, !dbg !7091
  br i1 %15, label %16, label %27, !dbg !7092

16:                                               ; preds = %13
  %17 = load i32, i32* %5, align 4, !dbg !7093
  %18 = sext i32 %17 to i64, !dbg !7095
  %19 = getelementptr inbounds [32 x %struct.exe_file_t.17], [32 x %struct.exe_file_t.17]* getelementptr inbounds (%struct.exe_sym_env_t.19, %struct.exe_sym_env_t.19* bitcast ({ <{ %struct.exe_file_t.17, %struct.exe_file_t.17, %struct.exe_file_t.17, [29 x %struct.exe_file_t.17] }>, i32, i32 }* @__exe_env to %struct.exe_sym_env_t.19*), i32 0, i32 0), i64 0, i64 %18, !dbg !7095
  %20 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %19, i32 0, i32 1, !dbg !7096
  %21 = load i32, i32* %20, align 4, !dbg !7096
  %22 = and i32 %21, 1, !dbg !7097
  %23 = icmp ne i32 %22, 0, !dbg !7097
  br i1 %23, label %24, label %27, !dbg !7098

24:                                               ; preds = %16
  %25 = load i32, i32* %5, align 4, !dbg !7099
  %26 = add nsw i32 %25, 1, !dbg !7099
  store i32 %26, i32* %5, align 4, !dbg !7099
  br label %13, !dbg !7100, !llvm.loop !7101

27:                                               ; preds = %16, %13
  %28 = load i32, i32* %5, align 4, !dbg !7103
  %29 = icmp eq i32 %28, 32, !dbg !7105
  br i1 %29, label %30, label %32, !dbg !7106

30:                                               ; preds = %27
  %31 = call i32* @__errno_location() #20, !dbg !7107
  store i32 24, i32* %31, align 4, !dbg !7109
  store i32 -1, i32* %2, align 4, !dbg !7110
  br label %36, !dbg !7110

32:                                               ; preds = %27
  %33 = load i32, i32* %3, align 4, !dbg !7111
  %34 = load i32, i32* %5, align 4, !dbg !7113
  %35 = call i32 @dup2(i32 %33, i32 %34) #15, !dbg !7114
  store i32 %35, i32* %2, align 4, !dbg !7115
  br label %36, !dbg !7115

36:                                               ; preds = %32, %30, %10
  %37 = load i32, i32* %2, align 4, !dbg !7116
  ret i32 %37, !dbg !7116
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @rmdir(i8* nonnull %0) #0 !dbg !7117 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca %struct.exe_disk_file_t.16*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7118, metadata !DIExpression()), !dbg !7119
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %4, metadata !7120, metadata !DIExpression()), !dbg !7121
  %5 = load i8*, i8** %3, align 8, !dbg !7122
  %6 = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %5), !dbg !7123
  store %struct.exe_disk_file_t.16* %6, %struct.exe_disk_file_t.16** %4, align 8, !dbg !7121
  %7 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %4, align 8, !dbg !7124
  %8 = icmp ne %struct.exe_disk_file_t.16* %7, null, !dbg !7124
  br i1 %8, label %9, label %24, !dbg !7126

9:                                                ; preds = %1
  %10 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %4, align 8, !dbg !7127
  %11 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %10, i32 0, i32 2, !dbg !7127
  %12 = load %struct.stat64.15*, %struct.stat64.15** %11, align 8, !dbg !7127
  %13 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %12, i32 0, i32 3, !dbg !7127
  %14 = load i32, i32* %13, align 8, !dbg !7127
  %15 = and i32 %14, 61440, !dbg !7127
  %16 = icmp eq i32 %15, 16384, !dbg !7127
  br i1 %16, label %17, label %22, !dbg !7130

17:                                               ; preds = %9
  %18 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %4, align 8, !dbg !7131
  %19 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %18, i32 0, i32 2, !dbg !7133
  %20 = load %struct.stat64.15*, %struct.stat64.15** %19, align 8, !dbg !7133
  %21 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %20, i32 0, i32 1, !dbg !7134
  store i64 0, i64* %21, align 8, !dbg !7135
  store i32 0, i32* %2, align 4, !dbg !7136
  br label %26, !dbg !7136

22:                                               ; preds = %9
  %23 = call i32* @__errno_location() #20, !dbg !7137
  store i32 20, i32* %23, align 4, !dbg !7139
  store i32 -1, i32* %2, align 4, !dbg !7140
  br label %26, !dbg !7140

24:                                               ; preds = %1
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24.118, i64 0, i64 0)), !dbg !7141
  %25 = call i32* @__errno_location() #20, !dbg !7142
  store i32 1, i32* %25, align 4, !dbg !7143
  store i32 -1, i32* %2, align 4, !dbg !7144
  br label %26, !dbg !7144

26:                                               ; preds = %24, %22, %17
  %27 = load i32, i32* %2, align 4, !dbg !7145
  ret i32 %27, !dbg !7145
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @unlink(i8* nonnull %0) #0 !dbg !7146 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca %struct.exe_disk_file_t.16*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7147, metadata !DIExpression()), !dbg !7148
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %4, metadata !7149, metadata !DIExpression()), !dbg !7150
  %5 = load i8*, i8** %3, align 8, !dbg !7151
  %6 = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %5), !dbg !7152
  store %struct.exe_disk_file_t.16* %6, %struct.exe_disk_file_t.16** %4, align 8, !dbg !7150
  %7 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %4, align 8, !dbg !7153
  %8 = icmp ne %struct.exe_disk_file_t.16* %7, null, !dbg !7153
  br i1 %8, label %9, label %34, !dbg !7155

9:                                                ; preds = %1
  %10 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %4, align 8, !dbg !7156
  %11 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %10, i32 0, i32 2, !dbg !7156
  %12 = load %struct.stat64.15*, %struct.stat64.15** %11, align 8, !dbg !7156
  %13 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %12, i32 0, i32 3, !dbg !7156
  %14 = load i32, i32* %13, align 8, !dbg !7156
  %15 = and i32 %14, 61440, !dbg !7156
  %16 = icmp eq i32 %15, 32768, !dbg !7156
  br i1 %16, label %17, label %22, !dbg !7159

17:                                               ; preds = %9
  %18 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %4, align 8, !dbg !7160
  %19 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %18, i32 0, i32 2, !dbg !7162
  %20 = load %struct.stat64.15*, %struct.stat64.15** %19, align 8, !dbg !7162
  %21 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %20, i32 0, i32 1, !dbg !7163
  store i64 0, i64* %21, align 8, !dbg !7164
  store i32 0, i32* %2, align 4, !dbg !7165
  br label %36, !dbg !7165

22:                                               ; preds = %9
  %23 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %4, align 8, !dbg !7166
  %24 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %23, i32 0, i32 2, !dbg !7166
  %25 = load %struct.stat64.15*, %struct.stat64.15** %24, align 8, !dbg !7166
  %26 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %25, i32 0, i32 3, !dbg !7166
  %27 = load i32, i32* %26, align 8, !dbg !7166
  %28 = and i32 %27, 61440, !dbg !7166
  %29 = icmp eq i32 %28, 16384, !dbg !7166
  br i1 %29, label %30, label %32, !dbg !7168

30:                                               ; preds = %22
  %31 = call i32* @__errno_location() #20, !dbg !7169
  store i32 21, i32* %31, align 4, !dbg !7171
  store i32 -1, i32* %2, align 4, !dbg !7172
  br label %36, !dbg !7172

32:                                               ; preds = %22
  %33 = call i32* @__errno_location() #20, !dbg !7173
  store i32 1, i32* %33, align 4, !dbg !7175
  store i32 -1, i32* %2, align 4, !dbg !7176
  br label %36, !dbg !7176

34:                                               ; preds = %1
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24.118, i64 0, i64 0)), !dbg !7177
  %35 = call i32* @__errno_location() #20, !dbg !7178
  store i32 1, i32* %35, align 4, !dbg !7179
  store i32 -1, i32* %2, align 4, !dbg !7180
  br label %36, !dbg !7180

36:                                               ; preds = %34, %32, %30, %17
  %37 = load i32, i32* %2, align 4, !dbg !7181
  ret i32 %37, !dbg !7181
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @unlinkat(i32 %0, i8* nonnull %1, i32 %2) #0 !dbg !7182 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.exe_disk_file_t.16*, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7185, metadata !DIExpression()), !dbg !7186
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !7187, metadata !DIExpression()), !dbg !7188
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7189, metadata !DIExpression()), !dbg !7190
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %8, metadata !7191, metadata !DIExpression()), !dbg !7192
  %9 = load i8*, i8** %6, align 8, !dbg !7193
  %10 = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %9), !dbg !7194
  store %struct.exe_disk_file_t.16* %10, %struct.exe_disk_file_t.16** %8, align 8, !dbg !7192
  %11 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %8, align 8, !dbg !7195
  %12 = icmp ne %struct.exe_disk_file_t.16* %11, null, !dbg !7195
  br i1 %12, label %13, label %38, !dbg !7197

13:                                               ; preds = %3
  %14 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %8, align 8, !dbg !7198
  %15 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %14, i32 0, i32 2, !dbg !7198
  %16 = load %struct.stat64.15*, %struct.stat64.15** %15, align 8, !dbg !7198
  %17 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %16, i32 0, i32 3, !dbg !7198
  %18 = load i32, i32* %17, align 8, !dbg !7198
  %19 = and i32 %18, 61440, !dbg !7198
  %20 = icmp eq i32 %19, 32768, !dbg !7198
  br i1 %20, label %21, label %26, !dbg !7201

21:                                               ; preds = %13
  %22 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %8, align 8, !dbg !7202
  %23 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %22, i32 0, i32 2, !dbg !7204
  %24 = load %struct.stat64.15*, %struct.stat64.15** %23, align 8, !dbg !7204
  %25 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %24, i32 0, i32 1, !dbg !7205
  store i64 0, i64* %25, align 8, !dbg !7206
  store i32 0, i32* %4, align 4, !dbg !7207
  br label %40, !dbg !7207

26:                                               ; preds = %13
  %27 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %8, align 8, !dbg !7208
  %28 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %27, i32 0, i32 2, !dbg !7208
  %29 = load %struct.stat64.15*, %struct.stat64.15** %28, align 8, !dbg !7208
  %30 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %29, i32 0, i32 3, !dbg !7208
  %31 = load i32, i32* %30, align 8, !dbg !7208
  %32 = and i32 %31, 61440, !dbg !7208
  %33 = icmp eq i32 %32, 16384, !dbg !7208
  br i1 %33, label %34, label %36, !dbg !7210

34:                                               ; preds = %26
  %35 = call i32* @__errno_location() #20, !dbg !7211
  store i32 21, i32* %35, align 4, !dbg !7213
  store i32 -1, i32* %4, align 4, !dbg !7214
  br label %40, !dbg !7214

36:                                               ; preds = %26
  %37 = call i32* @__errno_location() #20, !dbg !7215
  store i32 1, i32* %37, align 4, !dbg !7217
  store i32 -1, i32* %4, align 4, !dbg !7218
  br label %40, !dbg !7218

38:                                               ; preds = %3
  call void @klee_warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24.118, i64 0, i64 0)), !dbg !7219
  %39 = call i32* @__errno_location() #20, !dbg !7220
  store i32 1, i32* %39, align 4, !dbg !7221
  store i32 -1, i32* %4, align 4, !dbg !7222
  br label %40, !dbg !7222

40:                                               ; preds = %38, %36, %34, %21
  %41 = load i32, i32* %4, align 4, !dbg !7223
  ret i32 %41, !dbg !7223
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @readlink(i8* nonnull %0, i8* nonnull %1, i64 %2) #0 !dbg !7224 {
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.exe_disk_file_t.16*, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7227, metadata !DIExpression()), !dbg !7228
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !7229, metadata !DIExpression()), !dbg !7230
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !7231, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.declare(metadata %struct.exe_disk_file_t.16** %8, metadata !7233, metadata !DIExpression()), !dbg !7234
  %9 = load i8*, i8** %5, align 8, !dbg !7235
  %10 = call %struct.exe_disk_file_t.16* @__get_sym_file(i8* %9), !dbg !7236
  store %struct.exe_disk_file_t.16* %10, %struct.exe_disk_file_t.16** %8, align 8, !dbg !7234
  %11 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %8, align 8, !dbg !7237
  %12 = icmp ne %struct.exe_disk_file_t.16* %11, null, !dbg !7237
  br i1 %12, label %13, label %57, !dbg !7239

13:                                               ; preds = %3
  %14 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %8, align 8, !dbg !7240
  %15 = getelementptr inbounds %struct.exe_disk_file_t.16, %struct.exe_disk_file_t.16* %14, i32 0, i32 2, !dbg !7240
  %16 = load %struct.stat64.15*, %struct.stat64.15** %15, align 8, !dbg !7240
  %17 = getelementptr inbounds %struct.stat64.15, %struct.stat64.15* %16, i32 0, i32 3, !dbg !7240
  %18 = load i32, i32* %17, align 8, !dbg !7240
  %19 = and i32 %18, 61440, !dbg !7240
  %20 = icmp eq i32 %19, 40960, !dbg !7240
  br i1 %20, label %21, label %55, !dbg !7243

21:                                               ; preds = %13
  %22 = load i8*, i8** %5, align 8, !dbg !7244
  %23 = getelementptr inbounds i8, i8* %22, i64 0, !dbg !7244
  %24 = load i8, i8* %23, align 1, !dbg !7244
  %25 = load i8*, i8** %6, align 8, !dbg !7246
  %26 = getelementptr inbounds i8, i8* %25, i64 0, !dbg !7246
  store i8 %24, i8* %26, align 1, !dbg !7247
  %27 = load i64, i64* %7, align 8, !dbg !7248
  %28 = icmp ugt i64 %27, 1, !dbg !7250
  br i1 %28, label %29, label %32, !dbg !7251

29:                                               ; preds = %21
  %30 = load i8*, i8** %6, align 8, !dbg !7252
  %31 = getelementptr inbounds i8, i8* %30, i64 1, !dbg !7252
  store i8 46, i8* %31, align 1, !dbg !7253
  br label %32, !dbg !7252

32:                                               ; preds = %29, %21
  %33 = load i64, i64* %7, align 8, !dbg !7254
  %34 = icmp ugt i64 %33, 2, !dbg !7256
  br i1 %34, label %35, label %38, !dbg !7257

35:                                               ; preds = %32
  %36 = load i8*, i8** %6, align 8, !dbg !7258
  %37 = getelementptr inbounds i8, i8* %36, i64 2, !dbg !7258
  store i8 108, i8* %37, align 1, !dbg !7259
  br label %38, !dbg !7258

38:                                               ; preds = %35, %32
  %39 = load i64, i64* %7, align 8, !dbg !7260
  %40 = icmp ugt i64 %39, 3, !dbg !7262
  br i1 %40, label %41, label %44, !dbg !7263

41:                                               ; preds = %38
  %42 = load i8*, i8** %6, align 8, !dbg !7264
  %43 = getelementptr inbounds i8, i8* %42, i64 3, !dbg !7264
  store i8 110, i8* %43, align 1, !dbg !7265
  br label %44, !dbg !7264

44:                                               ; preds = %41, %38
  %45 = load i64, i64* %7, align 8, !dbg !7266
  %46 = icmp ugt i64 %45, 4, !dbg !7268
  br i1 %46, label %47, label %50, !dbg !7269

47:                                               ; preds = %44
  %48 = load i8*, i8** %6, align 8, !dbg !7270
  %49 = getelementptr inbounds i8, i8* %48, i64 4, !dbg !7270
  store i8 107, i8* %49, align 1, !dbg !7271
  br label %50, !dbg !7270

50:                                               ; preds = %47, %44
  %51 = load i64, i64* %7, align 8, !dbg !7272
  %52 = icmp ugt i64 %51, 5, !dbg !7273
  %53 = load i64, i64* %7, align 8, !dbg !7274
  %54 = select i1 %52, i64 5, i64 %53, !dbg !7274
  store i64 %54, i64* %4, align 8, !dbg !7275
  br label %62, !dbg !7275

55:                                               ; preds = %13
  %56 = call i32* @__errno_location() #20, !dbg !7276
  store i32 22, i32* %56, align 4, !dbg !7278
  store i64 -1, i64* %4, align 8, !dbg !7279
  br label %62, !dbg !7279

57:                                               ; preds = %3
  %58 = load i8*, i8** %5, align 8, !dbg !7280
  %59 = load i8*, i8** %6, align 8, !dbg !7281
  %60 = load i64, i64* %7, align 8, !dbg !7282
  %61 = call i64 (i64, ...) @syscall(i64 89, i8* %58, i8* %59, i64 %60) #15, !dbg !7283
  store i64 %61, i64* %4, align 8, !dbg !7284
  br label %62, !dbg !7284

62:                                               ; preds = %57, %55, %50
  %63 = load i64, i64* %4, align 8, !dbg !7285
  ret i64 %63, !dbg !7285
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @select(i32 %0, %struct.fd_set* %1, %struct.fd_set* %2, %struct.fd_set* %3, %struct.timespec.14* %4) #0 !dbg !7286 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.fd_set*, align 8
  %9 = alloca %struct.fd_set*, align 8
  %10 = alloca %struct.fd_set*, align 8
  %11 = alloca %struct.timespec.14*, align 8
  %12 = alloca %struct.fd_set, align 8
  %13 = alloca %struct.fd_set, align 8
  %14 = alloca %struct.fd_set, align 8
  %15 = alloca %struct.fd_set, align 8
  %16 = alloca %struct.fd_set, align 8
  %17 = alloca %struct.fd_set, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %struct.exe_file_t.17*, align 8
  %22 = alloca %struct.timespec.14, align 8
  %23 = alloca i32, align 4
  %24 = alloca %struct.exe_file_t.17*, align 8
  store i32 %0, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7300, metadata !DIExpression()), !dbg !7301
  store %struct.fd_set* %1, %struct.fd_set** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.fd_set** %8, metadata !7302, metadata !DIExpression()), !dbg !7303
  store %struct.fd_set* %2, %struct.fd_set** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.fd_set** %9, metadata !7304, metadata !DIExpression()), !dbg !7305
  store %struct.fd_set* %3, %struct.fd_set** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.fd_set** %10, metadata !7306, metadata !DIExpression()), !dbg !7307
  store %struct.timespec.14* %4, %struct.timespec.14** %11, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec.14** %11, metadata !7308, metadata !DIExpression()), !dbg !7309
  call void @llvm.dbg.declare(metadata %struct.fd_set* %12, metadata !7310, metadata !DIExpression()), !dbg !7311
  call void @llvm.dbg.declare(metadata %struct.fd_set* %13, metadata !7312, metadata !DIExpression()), !dbg !7313
  call void @llvm.dbg.declare(metadata %struct.fd_set* %14, metadata !7314, metadata !DIExpression()), !dbg !7315
  call void @llvm.dbg.declare(metadata %struct.fd_set* %15, metadata !7316, metadata !DIExpression()), !dbg !7317
  call void @llvm.dbg.declare(metadata %struct.fd_set* %16, metadata !7318, metadata !DIExpression()), !dbg !7319
  call void @llvm.dbg.declare(metadata %struct.fd_set* %17, metadata !7320, metadata !DIExpression()), !dbg !7321
  call void @llvm.dbg.declare(metadata i32* %18, metadata !7322, metadata !DIExpression()), !dbg !7323
  call void @llvm.dbg.declare(metadata i32* %19, metadata !7324, metadata !DIExpression()), !dbg !7325
  store i32 0, i32* %19, align 4, !dbg !7325
  call void @llvm.dbg.declare(metadata i32* %20, metadata !7326, metadata !DIExpression()), !dbg !7327
  store i32 0, i32* %20, align 4, !dbg !7327
  %25 = load %struct.fd_set*, %struct.fd_set** %8, align 8, !dbg !7328
  %26 = icmp ne %struct.fd_set* %25, null, !dbg !7328
  br i1 %26, label %27, label %35, !dbg !7330

27:                                               ; preds = %5
  %28 = load %struct.fd_set*, %struct.fd_set** %8, align 8, !dbg !7331
  %29 = bitcast %struct.fd_set* %12 to i8*, !dbg !7333
  %30 = bitcast %struct.fd_set* %28 to i8*, !dbg !7333
  %31 = call i8* @memcpy(i8* %29, i8* %30, i64 128), !dbg !7333
  %32 = load %struct.fd_set*, %struct.fd_set** %8, align 8, !dbg !7334
  %33 = bitcast %struct.fd_set* %32 to i8*, !dbg !7334
  %34 = call i8* @memset(i8* %33, i32 0, i64 128), !dbg !7334
  br label %38, !dbg !7335

35:                                               ; preds = %5
  %36 = bitcast %struct.fd_set* %12 to i8*, !dbg !7336
  %37 = call i8* @memset(i8* %36, i32 0, i64 128), !dbg !7336
  br label %38

38:                                               ; preds = %35, %27
  %39 = load %struct.fd_set*, %struct.fd_set** %9, align 8, !dbg !7338
  %40 = icmp ne %struct.fd_set* %39, null, !dbg !7338
  br i1 %40, label %41, label %49, !dbg !7340

41:                                               ; preds = %38
  %42 = load %struct.fd_set*, %struct.fd_set** %9, align 8, !dbg !7341
  %43 = bitcast %struct.fd_set* %13 to i8*, !dbg !7343
  %44 = bitcast %struct.fd_set* %42 to i8*, !dbg !7343
  %45 = call i8* @memcpy(i8* %43, i8* %44, i64 128), !dbg !7343
  %46 = load %struct.fd_set*, %struct.fd_set** %9, align 8, !dbg !7344
  %47 = bitcast %struct.fd_set* %46 to i8*, !dbg !7344
  %48 = call i8* @memset(i8* %47, i32 0, i64 128), !dbg !7344
  br label %52, !dbg !7345

49:                                               ; preds = %38
  %50 = bitcast %struct.fd_set* %13 to i8*, !dbg !7346
  %51 = call i8* @memset(i8* %50, i32 0, i64 128), !dbg !7346
  br label %52

52:                                               ; preds = %49, %41
  %53 = load %struct.fd_set*, %struct.fd_set** %10, align 8, !dbg !7348
  %54 = icmp ne %struct.fd_set* %53, null, !dbg !7348
  br i1 %54, label %55, label %63, !dbg !7350

55:                                               ; preds = %52
  %56 = load %struct.fd_set*, %struct.fd_set** %10, align 8, !dbg !7351
  %57 = bitcast %struct.fd_set* %14 to i8*, !dbg !7353
  %58 = bitcast %struct.fd_set* %56 to i8*, !dbg !7353
  %59 = call i8* @memcpy(i8* %57, i8* %58, i64 128), !dbg !7353
  %60 = load %struct.fd_set*, %struct.fd_set** %10, align 8, !dbg !7354
  %61 = bitcast %struct.fd_set* %60 to i8*, !dbg !7354
  %62 = call i8* @memset(i8* %61, i32 0, i64 128), !dbg !7354
  br label %66, !dbg !7355

63:                                               ; preds = %52
  %64 = bitcast %struct.fd_set* %14 to i8*, !dbg !7356
  %65 = call i8* @memset(i8* %64, i32 0, i64 128), !dbg !7356
  br label %66

66:                                               ; preds = %63, %55
  %67 = bitcast %struct.fd_set* %15 to i8*, !dbg !7358
  %68 = call i8* @memset(i8* %67, i32 0, i64 128), !dbg !7358
  %69 = bitcast %struct.fd_set* %16 to i8*, !dbg !7359
  %70 = call i8* @memset(i8* %69, i32 0, i64 128), !dbg !7359
  %71 = bitcast %struct.fd_set* %17 to i8*, !dbg !7360
  %72 = call i8* @memset(i8* %71, i32 0, i64 128), !dbg !7360
  store i32 0, i32* %18, align 4, !dbg !7361
  br label %73, !dbg !7363

73:                                               ; preds = %307, %66
  %74 = load i32, i32* %18, align 4, !dbg !7364
  %75 = load i32, i32* %7, align 4, !dbg !7366
  %76 = icmp slt i32 %74, %75, !dbg !7367
  br i1 %76, label %77, label %310, !dbg !7368

77:                                               ; preds = %73
  %78 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %12, i32 0, i32 0, !dbg !7369
  %79 = load i32, i32* %18, align 4, !dbg !7369
  %80 = sdiv i32 %79, 64, !dbg !7369
  %81 = sext i32 %80 to i64, !dbg !7369
  %82 = getelementptr inbounds [16 x i64], [16 x i64]* %78, i64 0, i64 %81, !dbg !7369
  %83 = load i64, i64* %82, align 8, !dbg !7369
  %84 = load i32, i32* %18, align 4, !dbg !7369
  %85 = srem i32 %84, 64, !dbg !7369
  %int_cast_to_i64 = zext i32 %85 to i64, !dbg !7369
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i64), !dbg !7369
  %86 = shl i32 1, %85, !dbg !7369, !klee.check.shift !7372
  %87 = sext i32 %86 to i64, !dbg !7369
  %88 = and i64 %83, %87, !dbg !7369
  %89 = icmp ne i64 %88, 0, !dbg !7369
  br i1 %89, label %116, label %90, !dbg !7373

90:                                               ; preds = %77
  %91 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %13, i32 0, i32 0, !dbg !7374
  %92 = load i32, i32* %18, align 4, !dbg !7374
  %93 = sdiv i32 %92, 64, !dbg !7374
  %94 = sext i32 %93 to i64, !dbg !7374
  %95 = getelementptr inbounds [16 x i64], [16 x i64]* %91, i64 0, i64 %94, !dbg !7374
  %96 = load i64, i64* %95, align 8, !dbg !7374
  %97 = load i32, i32* %18, align 4, !dbg !7374
  %98 = srem i32 %97, 64, !dbg !7374
  %int_cast_to_i641 = zext i32 %98 to i64, !dbg !7374
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i641), !dbg !7374
  %99 = shl i32 1, %98, !dbg !7374, !klee.check.shift !7372
  %100 = sext i32 %99 to i64, !dbg !7374
  %101 = and i64 %96, %100, !dbg !7374
  %102 = icmp ne i64 %101, 0, !dbg !7374
  br i1 %102, label %116, label %103, !dbg !7375

103:                                              ; preds = %90
  %104 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %14, i32 0, i32 0, !dbg !7376
  %105 = load i32, i32* %18, align 4, !dbg !7376
  %106 = sdiv i32 %105, 64, !dbg !7376
  %107 = sext i32 %106 to i64, !dbg !7376
  %108 = getelementptr inbounds [16 x i64], [16 x i64]* %104, i64 0, i64 %107, !dbg !7376
  %109 = load i64, i64* %108, align 8, !dbg !7376
  %110 = load i32, i32* %18, align 4, !dbg !7376
  %111 = srem i32 %110, 64, !dbg !7376
  %int_cast_to_i642 = zext i32 %111 to i64, !dbg !7376
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i642), !dbg !7376
  %112 = shl i32 1, %111, !dbg !7376, !klee.check.shift !7372
  %113 = sext i32 %112 to i64, !dbg !7376
  %114 = and i64 %109, %113, !dbg !7376
  %115 = icmp ne i64 %114, 0, !dbg !7376
  br i1 %115, label %116, label %307, !dbg !7377

116:                                              ; preds = %103, %90, %77
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %21, metadata !7378, metadata !DIExpression()), !dbg !7380
  %117 = load i32, i32* %18, align 4, !dbg !7381
  %118 = call %struct.exe_file_t.17* @__get_file(i32 %117), !dbg !7382
  store %struct.exe_file_t.17* %118, %struct.exe_file_t.17** %21, align 8, !dbg !7380
  %119 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %21, align 8, !dbg !7383
  %120 = icmp ne %struct.exe_file_t.17* %119, null, !dbg !7383
  br i1 %120, label %123, label %121, !dbg !7385

121:                                              ; preds = %116
  %122 = call i32* @__errno_location() #20, !dbg !7386
  store i32 9, i32* %122, align 4, !dbg !7388
  store i32 -1, i32* %6, align 4, !dbg !7389
  br label %447, !dbg !7389

123:                                              ; preds = %116
  %124 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %21, align 8, !dbg !7390
  %125 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %124, i32 0, i32 3, !dbg !7392
  %126 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %125, align 8, !dbg !7392
  %127 = icmp ne %struct.exe_disk_file_t.16* %126, null, !dbg !7390
  br i1 %127, label %128, label %209, !dbg !7393

128:                                              ; preds = %123
  %129 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %12, i32 0, i32 0, !dbg !7394
  %130 = load i32, i32* %18, align 4, !dbg !7394
  %131 = sdiv i32 %130, 64, !dbg !7394
  %132 = sext i32 %131 to i64, !dbg !7394
  %133 = getelementptr inbounds [16 x i64], [16 x i64]* %129, i64 0, i64 %132, !dbg !7394
  %134 = load i64, i64* %133, align 8, !dbg !7394
  %135 = load i32, i32* %18, align 4, !dbg !7394
  %136 = srem i32 %135, 64, !dbg !7394
  %int_cast_to_i643 = zext i32 %136 to i64, !dbg !7394
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i643), !dbg !7394
  %137 = shl i32 1, %136, !dbg !7394, !klee.check.shift !7372
  %138 = sext i32 %137 to i64, !dbg !7394
  %139 = and i64 %134, %138, !dbg !7394
  %140 = icmp ne i64 %139, 0, !dbg !7394
  br i1 %140, label %141, label %154, !dbg !7397

141:                                              ; preds = %128
  %142 = load i32, i32* %18, align 4, !dbg !7398
  %143 = srem i32 %142, 64, !dbg !7398
  %int_cast_to_i644 = zext i32 %143 to i64, !dbg !7398
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i644), !dbg !7398
  %144 = shl i32 1, %143, !dbg !7398, !klee.check.shift !7372
  %145 = sext i32 %144 to i64, !dbg !7398
  %146 = load %struct.fd_set*, %struct.fd_set** %8, align 8, !dbg !7398
  %147 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %146, i32 0, i32 0, !dbg !7398
  %148 = load i32, i32* %18, align 4, !dbg !7398
  %149 = sdiv i32 %148, 64, !dbg !7398
  %150 = sext i32 %149 to i64, !dbg !7398
  %151 = getelementptr inbounds [16 x i64], [16 x i64]* %147, i64 0, i64 %150, !dbg !7398
  %152 = load i64, i64* %151, align 8, !dbg !7398
  %153 = or i64 %152, %145, !dbg !7398
  store i64 %153, i64* %151, align 8, !dbg !7398
  br label %154, !dbg !7398

154:                                              ; preds = %141, %128
  %155 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %13, i32 0, i32 0, !dbg !7399
  %156 = load i32, i32* %18, align 4, !dbg !7399
  %157 = sdiv i32 %156, 64, !dbg !7399
  %158 = sext i32 %157 to i64, !dbg !7399
  %159 = getelementptr inbounds [16 x i64], [16 x i64]* %155, i64 0, i64 %158, !dbg !7399
  %160 = load i64, i64* %159, align 8, !dbg !7399
  %161 = load i32, i32* %18, align 4, !dbg !7399
  %162 = srem i32 %161, 64, !dbg !7399
  %int_cast_to_i645 = zext i32 %162 to i64, !dbg !7399
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i645), !dbg !7399
  %163 = shl i32 1, %162, !dbg !7399, !klee.check.shift !7372
  %164 = sext i32 %163 to i64, !dbg !7399
  %165 = and i64 %160, %164, !dbg !7399
  %166 = icmp ne i64 %165, 0, !dbg !7399
  br i1 %166, label %167, label %180, !dbg !7401

167:                                              ; preds = %154
  %168 = load i32, i32* %18, align 4, !dbg !7402
  %169 = srem i32 %168, 64, !dbg !7402
  %int_cast_to_i646 = zext i32 %169 to i64, !dbg !7402
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i646), !dbg !7402
  %170 = shl i32 1, %169, !dbg !7402, !klee.check.shift !7372
  %171 = sext i32 %170 to i64, !dbg !7402
  %172 = load %struct.fd_set*, %struct.fd_set** %9, align 8, !dbg !7402
  %173 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %172, i32 0, i32 0, !dbg !7402
  %174 = load i32, i32* %18, align 4, !dbg !7402
  %175 = sdiv i32 %174, 64, !dbg !7402
  %176 = sext i32 %175 to i64, !dbg !7402
  %177 = getelementptr inbounds [16 x i64], [16 x i64]* %173, i64 0, i64 %176, !dbg !7402
  %178 = load i64, i64* %177, align 8, !dbg !7402
  %179 = or i64 %178, %171, !dbg !7402
  store i64 %179, i64* %177, align 8, !dbg !7402
  br label %180, !dbg !7402

180:                                              ; preds = %167, %154
  %181 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %14, i32 0, i32 0, !dbg !7403
  %182 = load i32, i32* %18, align 4, !dbg !7403
  %183 = sdiv i32 %182, 64, !dbg !7403
  %184 = sext i32 %183 to i64, !dbg !7403
  %185 = getelementptr inbounds [16 x i64], [16 x i64]* %181, i64 0, i64 %184, !dbg !7403
  %186 = load i64, i64* %185, align 8, !dbg !7403
  %187 = load i32, i32* %18, align 4, !dbg !7403
  %188 = srem i32 %187, 64, !dbg !7403
  %int_cast_to_i647 = zext i32 %188 to i64, !dbg !7403
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i647), !dbg !7403
  %189 = shl i32 1, %188, !dbg !7403, !klee.check.shift !7372
  %190 = sext i32 %189 to i64, !dbg !7403
  %191 = and i64 %186, %190, !dbg !7403
  %192 = icmp ne i64 %191, 0, !dbg !7403
  br i1 %192, label %193, label %206, !dbg !7405

193:                                              ; preds = %180
  %194 = load i32, i32* %18, align 4, !dbg !7406
  %195 = srem i32 %194, 64, !dbg !7406
  %int_cast_to_i648 = zext i32 %195 to i64, !dbg !7406
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i648), !dbg !7406
  %196 = shl i32 1, %195, !dbg !7406, !klee.check.shift !7372
  %197 = sext i32 %196 to i64, !dbg !7406
  %198 = load %struct.fd_set*, %struct.fd_set** %10, align 8, !dbg !7406
  %199 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %198, i32 0, i32 0, !dbg !7406
  %200 = load i32, i32* %18, align 4, !dbg !7406
  %201 = sdiv i32 %200, 64, !dbg !7406
  %202 = sext i32 %201 to i64, !dbg !7406
  %203 = getelementptr inbounds [16 x i64], [16 x i64]* %199, i64 0, i64 %202, !dbg !7406
  %204 = load i64, i64* %203, align 8, !dbg !7406
  %205 = or i64 %204, %197, !dbg !7406
  store i64 %205, i64* %203, align 8, !dbg !7406
  br label %206, !dbg !7406

206:                                              ; preds = %193, %180
  %207 = load i32, i32* %19, align 4, !dbg !7407
  %208 = add nsw i32 %207, 1, !dbg !7407
  store i32 %208, i32* %19, align 4, !dbg !7407
  br label %307, !dbg !7408

209:                                              ; preds = %123
  %210 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %12, i32 0, i32 0, !dbg !7409
  %211 = load i32, i32* %18, align 4, !dbg !7409
  %212 = sdiv i32 %211, 64, !dbg !7409
  %213 = sext i32 %212 to i64, !dbg !7409
  %214 = getelementptr inbounds [16 x i64], [16 x i64]* %210, i64 0, i64 %213, !dbg !7409
  %215 = load i64, i64* %214, align 8, !dbg !7409
  %216 = load i32, i32* %18, align 4, !dbg !7409
  %217 = srem i32 %216, 64, !dbg !7409
  %int_cast_to_i649 = zext i32 %217 to i64, !dbg !7409
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i649), !dbg !7409
  %218 = shl i32 1, %217, !dbg !7409, !klee.check.shift !7372
  %219 = sext i32 %218 to i64, !dbg !7409
  %220 = and i64 %215, %219, !dbg !7409
  %221 = icmp ne i64 %220, 0, !dbg !7409
  br i1 %221, label %222, label %238, !dbg !7412

222:                                              ; preds = %209
  %223 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %21, align 8, !dbg !7413
  %224 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %223, i32 0, i32 0, !dbg !7413
  %225 = load i32, i32* %224, align 8, !dbg !7413
  %226 = srem i32 %225, 64, !dbg !7413
  %int_cast_to_i6410 = zext i32 %226 to i64, !dbg !7413
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i6410), !dbg !7413
  %227 = shl i32 1, %226, !dbg !7413, !klee.check.shift !7372
  %228 = sext i32 %227 to i64, !dbg !7413
  %229 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %15, i32 0, i32 0, !dbg !7413
  %230 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %21, align 8, !dbg !7413
  %231 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %230, i32 0, i32 0, !dbg !7413
  %232 = load i32, i32* %231, align 8, !dbg !7413
  %233 = sdiv i32 %232, 64, !dbg !7413
  %234 = sext i32 %233 to i64, !dbg !7413
  %235 = getelementptr inbounds [16 x i64], [16 x i64]* %229, i64 0, i64 %234, !dbg !7413
  %236 = load i64, i64* %235, align 8, !dbg !7413
  %237 = or i64 %236, %228, !dbg !7413
  store i64 %237, i64* %235, align 8, !dbg !7413
  br label %238, !dbg !7413

238:                                              ; preds = %222, %209
  %239 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %13, i32 0, i32 0, !dbg !7414
  %240 = load i32, i32* %18, align 4, !dbg !7414
  %241 = sdiv i32 %240, 64, !dbg !7414
  %242 = sext i32 %241 to i64, !dbg !7414
  %243 = getelementptr inbounds [16 x i64], [16 x i64]* %239, i64 0, i64 %242, !dbg !7414
  %244 = load i64, i64* %243, align 8, !dbg !7414
  %245 = load i32, i32* %18, align 4, !dbg !7414
  %246 = srem i32 %245, 64, !dbg !7414
  %int_cast_to_i6411 = zext i32 %246 to i64, !dbg !7414
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i6411), !dbg !7414
  %247 = shl i32 1, %246, !dbg !7414, !klee.check.shift !7372
  %248 = sext i32 %247 to i64, !dbg !7414
  %249 = and i64 %244, %248, !dbg !7414
  %250 = icmp ne i64 %249, 0, !dbg !7414
  br i1 %250, label %251, label %267, !dbg !7416

251:                                              ; preds = %238
  %252 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %21, align 8, !dbg !7417
  %253 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %252, i32 0, i32 0, !dbg !7417
  %254 = load i32, i32* %253, align 8, !dbg !7417
  %255 = srem i32 %254, 64, !dbg !7417
  %int_cast_to_i6412 = zext i32 %255 to i64, !dbg !7417
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i6412), !dbg !7417
  %256 = shl i32 1, %255, !dbg !7417, !klee.check.shift !7372
  %257 = sext i32 %256 to i64, !dbg !7417
  %258 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %16, i32 0, i32 0, !dbg !7417
  %259 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %21, align 8, !dbg !7417
  %260 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %259, i32 0, i32 0, !dbg !7417
  %261 = load i32, i32* %260, align 8, !dbg !7417
  %262 = sdiv i32 %261, 64, !dbg !7417
  %263 = sext i32 %262 to i64, !dbg !7417
  %264 = getelementptr inbounds [16 x i64], [16 x i64]* %258, i64 0, i64 %263, !dbg !7417
  %265 = load i64, i64* %264, align 8, !dbg !7417
  %266 = or i64 %265, %257, !dbg !7417
  store i64 %266, i64* %264, align 8, !dbg !7417
  br label %267, !dbg !7417

267:                                              ; preds = %251, %238
  %268 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %14, i32 0, i32 0, !dbg !7418
  %269 = load i32, i32* %18, align 4, !dbg !7418
  %270 = sdiv i32 %269, 64, !dbg !7418
  %271 = sext i32 %270 to i64, !dbg !7418
  %272 = getelementptr inbounds [16 x i64], [16 x i64]* %268, i64 0, i64 %271, !dbg !7418
  %273 = load i64, i64* %272, align 8, !dbg !7418
  %274 = load i32, i32* %18, align 4, !dbg !7418
  %275 = srem i32 %274, 64, !dbg !7418
  %int_cast_to_i6413 = zext i32 %275 to i64, !dbg !7418
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i6413), !dbg !7418
  %276 = shl i32 1, %275, !dbg !7418, !klee.check.shift !7372
  %277 = sext i32 %276 to i64, !dbg !7418
  %278 = and i64 %273, %277, !dbg !7418
  %279 = icmp ne i64 %278, 0, !dbg !7418
  br i1 %279, label %280, label %296, !dbg !7420

280:                                              ; preds = %267
  %281 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %21, align 8, !dbg !7421
  %282 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %281, i32 0, i32 0, !dbg !7421
  %283 = load i32, i32* %282, align 8, !dbg !7421
  %284 = srem i32 %283, 64, !dbg !7421
  %int_cast_to_i6414 = zext i32 %284 to i64, !dbg !7421
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i6414), !dbg !7421
  %285 = shl i32 1, %284, !dbg !7421, !klee.check.shift !7372
  %286 = sext i32 %285 to i64, !dbg !7421
  %287 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %17, i32 0, i32 0, !dbg !7421
  %288 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %21, align 8, !dbg !7421
  %289 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %288, i32 0, i32 0, !dbg !7421
  %290 = load i32, i32* %289, align 8, !dbg !7421
  %291 = sdiv i32 %290, 64, !dbg !7421
  %292 = sext i32 %291 to i64, !dbg !7421
  %293 = getelementptr inbounds [16 x i64], [16 x i64]* %287, i64 0, i64 %292, !dbg !7421
  %294 = load i64, i64* %293, align 8, !dbg !7421
  %295 = or i64 %294, %286, !dbg !7421
  store i64 %295, i64* %293, align 8, !dbg !7421
  br label %296, !dbg !7421

296:                                              ; preds = %280, %267
  %297 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %21, align 8, !dbg !7422
  %298 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %297, i32 0, i32 0, !dbg !7424
  %299 = load i32, i32* %298, align 8, !dbg !7424
  %300 = load i32, i32* %20, align 4, !dbg !7425
  %301 = icmp sge i32 %299, %300, !dbg !7426
  br i1 %301, label %302, label %307, !dbg !7427

302:                                              ; preds = %296
  %303 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %21, align 8, !dbg !7428
  %304 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %303, i32 0, i32 0, !dbg !7429
  %305 = load i32, i32* %304, align 8, !dbg !7429
  %306 = add nsw i32 %305, 1, !dbg !7430
  store i32 %306, i32* %20, align 4, !dbg !7431
  br label %307, !dbg !7432

307:                                              ; preds = %103, %206, %302, %296
  %308 = load i32, i32* %18, align 4, !dbg !7433
  %309 = add nsw i32 %308, 1, !dbg !7433
  store i32 %309, i32* %18, align 4, !dbg !7433
  br label %73, !dbg !7434, !llvm.loop !7435

310:                                              ; preds = %73
  %311 = load i32, i32* %20, align 4, !dbg !7437
  %312 = icmp sgt i32 %311, 0, !dbg !7439
  br i1 %312, label %313, label %445, !dbg !7440

313:                                              ; preds = %310
  call void @llvm.dbg.declare(metadata %struct.timespec.14* %22, metadata !7441, metadata !DIExpression()), !dbg !7443
  %314 = bitcast %struct.timespec.14* %22 to i8*, !dbg !7443
  %315 = call i8* @memset(i8* %314, i32 0, i64 16), !dbg !7443
  call void @llvm.dbg.declare(metadata i32* %23, metadata !7444, metadata !DIExpression()), !dbg !7445
  %316 = load i32, i32* %20, align 4, !dbg !7446
  %317 = call i64 (i64, ...) @syscall(i64 23, i32 %316, %struct.fd_set* %15, %struct.fd_set* %16, %struct.fd_set* %17, %struct.timespec.14* %22) #15, !dbg !7447
  %318 = trunc i64 %317 to i32, !dbg !7447
  store i32 %318, i32* %23, align 4, !dbg !7445
  %319 = load i32, i32* %23, align 4, !dbg !7448
  %320 = icmp eq i32 %319, -1, !dbg !7450
  br i1 %320, label %321, label %325, !dbg !7451

321:                                              ; preds = %313
  %322 = load i32, i32* %19, align 4, !dbg !7452
  %323 = icmp ne i32 %322, 0, !dbg !7452
  br i1 %323, label %445, label %324, !dbg !7455

324:                                              ; preds = %321
  store i32 -1, i32* %6, align 4, !dbg !7456
  br label %447, !dbg !7456

325:                                              ; preds = %313
  %326 = load i32, i32* %23, align 4, !dbg !7457
  %327 = load i32, i32* %19, align 4, !dbg !7459
  %328 = add nsw i32 %327, %326, !dbg !7459
  store i32 %328, i32* %19, align 4, !dbg !7459
  store i32 0, i32* %18, align 4, !dbg !7460
  br label %329, !dbg !7462

329:                                              ; preds = %442, %325
  %330 = load i32, i32* %18, align 4, !dbg !7463
  %331 = load i32, i32* %7, align 4, !dbg !7465
  %332 = icmp slt i32 %330, %331, !dbg !7466
  br i1 %332, label %333, label %445, !dbg !7467

333:                                              ; preds = %329
  call void @llvm.dbg.declare(metadata %struct.exe_file_t.17** %24, metadata !7468, metadata !DIExpression()), !dbg !7470
  %334 = load i32, i32* %18, align 4, !dbg !7471
  %335 = call %struct.exe_file_t.17* @__get_file(i32 %334), !dbg !7472
  store %struct.exe_file_t.17* %335, %struct.exe_file_t.17** %24, align 8, !dbg !7470
  %336 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %24, align 8, !dbg !7473
  %337 = icmp ne %struct.exe_file_t.17* %336, null, !dbg !7473
  br i1 %337, label %338, label %442, !dbg !7475

338:                                              ; preds = %333
  %339 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %24, align 8, !dbg !7476
  %340 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %339, i32 0, i32 3, !dbg !7477
  %341 = load %struct.exe_disk_file_t.16*, %struct.exe_disk_file_t.16** %340, align 8, !dbg !7477
  %342 = icmp ne %struct.exe_disk_file_t.16* %341, null, !dbg !7476
  br i1 %342, label %442, label %343, !dbg !7478

343:                                              ; preds = %338
  %344 = load %struct.fd_set*, %struct.fd_set** %8, align 8, !dbg !7479
  %345 = icmp ne %struct.fd_set* %344, null, !dbg !7479
  br i1 %345, label %346, label %376, !dbg !7482

346:                                              ; preds = %343
  %347 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %15, i32 0, i32 0, !dbg !7483
  %348 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %24, align 8, !dbg !7483
  %349 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %348, i32 0, i32 0, !dbg !7483
  %350 = load i32, i32* %349, align 8, !dbg !7483
  %351 = sdiv i32 %350, 64, !dbg !7483
  %352 = sext i32 %351 to i64, !dbg !7483
  %353 = getelementptr inbounds [16 x i64], [16 x i64]* %347, i64 0, i64 %352, !dbg !7483
  %354 = load i64, i64* %353, align 8, !dbg !7483
  %355 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %24, align 8, !dbg !7483
  %356 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %355, i32 0, i32 0, !dbg !7483
  %357 = load i32, i32* %356, align 8, !dbg !7483
  %358 = srem i32 %357, 64, !dbg !7483
  %int_cast_to_i6415 = zext i32 %358 to i64, !dbg !7483
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i6415), !dbg !7483
  %359 = shl i32 1, %358, !dbg !7483, !klee.check.shift !7372
  %360 = sext i32 %359 to i64, !dbg !7483
  %361 = and i64 %354, %360, !dbg !7483
  %362 = icmp ne i64 %361, 0, !dbg !7483
  br i1 %362, label %363, label %376, !dbg !7484

363:                                              ; preds = %346
  %364 = load i32, i32* %18, align 4, !dbg !7485
  %365 = srem i32 %364, 64, !dbg !7485
  %int_cast_to_i6416 = zext i32 %365 to i64, !dbg !7485
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i6416), !dbg !7485
  %366 = shl i32 1, %365, !dbg !7485, !klee.check.shift !7372
  %367 = sext i32 %366 to i64, !dbg !7485
  %368 = load %struct.fd_set*, %struct.fd_set** %8, align 8, !dbg !7485
  %369 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %368, i32 0, i32 0, !dbg !7485
  %370 = load i32, i32* %18, align 4, !dbg !7485
  %371 = sdiv i32 %370, 64, !dbg !7485
  %372 = sext i32 %371 to i64, !dbg !7485
  %373 = getelementptr inbounds [16 x i64], [16 x i64]* %369, i64 0, i64 %372, !dbg !7485
  %374 = load i64, i64* %373, align 8, !dbg !7485
  %375 = or i64 %374, %367, !dbg !7485
  store i64 %375, i64* %373, align 8, !dbg !7485
  br label %376, !dbg !7485

376:                                              ; preds = %363, %346, %343
  %377 = load %struct.fd_set*, %struct.fd_set** %9, align 8, !dbg !7486
  %378 = icmp ne %struct.fd_set* %377, null, !dbg !7486
  br i1 %378, label %379, label %409, !dbg !7488

379:                                              ; preds = %376
  %380 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %16, i32 0, i32 0, !dbg !7489
  %381 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %24, align 8, !dbg !7489
  %382 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %381, i32 0, i32 0, !dbg !7489
  %383 = load i32, i32* %382, align 8, !dbg !7489
  %384 = sdiv i32 %383, 64, !dbg !7489
  %385 = sext i32 %384 to i64, !dbg !7489
  %386 = getelementptr inbounds [16 x i64], [16 x i64]* %380, i64 0, i64 %385, !dbg !7489
  %387 = load i64, i64* %386, align 8, !dbg !7489
  %388 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %24, align 8, !dbg !7489
  %389 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %388, i32 0, i32 0, !dbg !7489
  %390 = load i32, i32* %389, align 8, !dbg !7489
  %391 = srem i32 %390, 64, !dbg !7489
  %int_cast_to_i6417 = zext i32 %391 to i64, !dbg !7489
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i6417), !dbg !7489
  %392 = shl i32 1, %391, !dbg !7489, !klee.check.shift !7372
  %393 = sext i32 %392 to i64, !dbg !7489
  %394 = and i64 %387, %393, !dbg !7489
  %395 = icmp ne i64 %394, 0, !dbg !7489
  br i1 %395, label %396, label %409, !dbg !7490

396:                                              ; preds = %379
  %397 = load i32, i32* %18, align 4, !dbg !7491
  %398 = srem i32 %397, 64, !dbg !7491
  %int_cast_to_i6418 = zext i32 %398 to i64, !dbg !7491
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i6418), !dbg !7491
  %399 = shl i32 1, %398, !dbg !7491, !klee.check.shift !7372
  %400 = sext i32 %399 to i64, !dbg !7491
  %401 = load %struct.fd_set*, %struct.fd_set** %9, align 8, !dbg !7491
  %402 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %401, i32 0, i32 0, !dbg !7491
  %403 = load i32, i32* %18, align 4, !dbg !7491
  %404 = sdiv i32 %403, 64, !dbg !7491
  %405 = sext i32 %404 to i64, !dbg !7491
  %406 = getelementptr inbounds [16 x i64], [16 x i64]* %402, i64 0, i64 %405, !dbg !7491
  %407 = load i64, i64* %406, align 8, !dbg !7491
  %408 = or i64 %407, %400, !dbg !7491
  store i64 %408, i64* %406, align 8, !dbg !7491
  br label %409, !dbg !7491

409:                                              ; preds = %396, %379, %376
  %410 = load %struct.fd_set*, %struct.fd_set** %10, align 8, !dbg !7492
  %411 = icmp ne %struct.fd_set* %410, null, !dbg !7492
  br i1 %411, label %412, label %442, !dbg !7494

412:                                              ; preds = %409
  %413 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %17, i32 0, i32 0, !dbg !7495
  %414 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %24, align 8, !dbg !7495
  %415 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %414, i32 0, i32 0, !dbg !7495
  %416 = load i32, i32* %415, align 8, !dbg !7495
  %417 = sdiv i32 %416, 64, !dbg !7495
  %418 = sext i32 %417 to i64, !dbg !7495
  %419 = getelementptr inbounds [16 x i64], [16 x i64]* %413, i64 0, i64 %418, !dbg !7495
  %420 = load i64, i64* %419, align 8, !dbg !7495
  %421 = load %struct.exe_file_t.17*, %struct.exe_file_t.17** %24, align 8, !dbg !7495
  %422 = getelementptr inbounds %struct.exe_file_t.17, %struct.exe_file_t.17* %421, i32 0, i32 0, !dbg !7495
  %423 = load i32, i32* %422, align 8, !dbg !7495
  %424 = srem i32 %423, 64, !dbg !7495
  %int_cast_to_i6419 = zext i32 %424 to i64, !dbg !7495
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i6419), !dbg !7495
  %425 = shl i32 1, %424, !dbg !7495, !klee.check.shift !7372
  %426 = sext i32 %425 to i64, !dbg !7495
  %427 = and i64 %420, %426, !dbg !7495
  %428 = icmp ne i64 %427, 0, !dbg !7495
  br i1 %428, label %429, label %442, !dbg !7496

429:                                              ; preds = %412
  %430 = load i32, i32* %18, align 4, !dbg !7497
  %431 = srem i32 %430, 64, !dbg !7497
  %int_cast_to_i6420 = zext i32 %431 to i64, !dbg !7497
  call void @klee_overshift_check(i64 32, i64 %int_cast_to_i6420), !dbg !7497
  %432 = shl i32 1, %431, !dbg !7497, !klee.check.shift !7372
  %433 = sext i32 %432 to i64, !dbg !7497
  %434 = load %struct.fd_set*, %struct.fd_set** %10, align 8, !dbg !7497
  %435 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %434, i32 0, i32 0, !dbg !7497
  %436 = load i32, i32* %18, align 4, !dbg !7497
  %437 = sdiv i32 %436, 64, !dbg !7497
  %438 = sext i32 %437 to i64, !dbg !7497
  %439 = getelementptr inbounds [16 x i64], [16 x i64]* %435, i64 0, i64 %438, !dbg !7497
  %440 = load i64, i64* %439, align 8, !dbg !7497
  %441 = or i64 %440, %433, !dbg !7497
  store i64 %441, i64* %439, align 8, !dbg !7497
  br label %442, !dbg !7497

442:                                              ; preds = %333, %338, %429, %412, %409
  %443 = load i32, i32* %18, align 4, !dbg !7498
  %444 = add nsw i32 %443, 1, !dbg !7498
  store i32 %444, i32* %18, align 4, !dbg !7498
  br label %329, !dbg !7499, !llvm.loop !7500

445:                                              ; preds = %321, %329, %310
  %446 = load i32, i32* %19, align 4, !dbg !7502
  store i32 %446, i32* %6, align 4, !dbg !7503
  br label %447, !dbg !7503

447:                                              ; preds = %445, %324, %121
  %448 = load i32, i32* %6, align 4, !dbg !7504
  ret i32 %448, !dbg !7504
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @chroot(i8* nonnull %0) #0 !dbg !7505 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7506, metadata !DIExpression()), !dbg !7507
  %4 = load i8*, i8** %3, align 8, !dbg !7508
  %5 = getelementptr inbounds i8, i8* %4, i64 0, !dbg !7508
  %6 = load i8, i8* %5, align 1, !dbg !7508
  %7 = sext i8 %6 to i32, !dbg !7508
  %8 = icmp eq i32 %7, 0, !dbg !7510
  br i1 %8, label %9, label %11, !dbg !7511

9:                                                ; preds = %1
  %10 = call i32* @__errno_location() #20, !dbg !7512
  store i32 2, i32* %10, align 4, !dbg !7514
  store i32 -1, i32* %2, align 4, !dbg !7515
  br label %26, !dbg !7515

11:                                               ; preds = %1
  %12 = load i8*, i8** %3, align 8, !dbg !7516
  %13 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !7516
  %14 = load i8, i8* %13, align 1, !dbg !7516
  %15 = sext i8 %14 to i32, !dbg !7516
  %16 = icmp eq i32 %15, 47, !dbg !7518
  br i1 %16, label %17, label %24, !dbg !7519

17:                                               ; preds = %11
  %18 = load i8*, i8** %3, align 8, !dbg !7520
  %19 = getelementptr inbounds i8, i8* %18, i64 1, !dbg !7520
  %20 = load i8, i8* %19, align 1, !dbg !7520
  %21 = sext i8 %20 to i32, !dbg !7520
  %22 = icmp eq i32 %21, 0, !dbg !7521
  br i1 %22, label %23, label %24, !dbg !7522

23:                                               ; preds = %17
  store i32 0, i32* %2, align 4, !dbg !7523
  br label %26, !dbg !7523

24:                                               ; preds = %17, %11
  call void @klee_warning(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25.119, i64 0, i64 0)), !dbg !7525
  %25 = call i32* @__errno_location() #20, !dbg !7526
  store i32 2, i32* %25, align 4, !dbg !7527
  store i32 -1, i32* %2, align 4, !dbg !7528
  br label %26, !dbg !7528

26:                                               ; preds = %24, %23, %9
  %27 = load i32, i32* %2, align 4, !dbg !7529
  ret i32 %27, !dbg !7529
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @memcpy(i8* %0, i8* %1, i64 %2) #0 !dbg !7530 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7534, metadata !DIExpression()), !dbg !7535
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7536, metadata !DIExpression()), !dbg !7537
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !7538, metadata !DIExpression()), !dbg !7539
  call void @llvm.dbg.declare(metadata i8** %7, metadata !7540, metadata !DIExpression()), !dbg !7541
  %9 = load i8*, i8** %4, align 8, !dbg !7542
  store i8* %9, i8** %7, align 8, !dbg !7541
  call void @llvm.dbg.declare(metadata i8** %8, metadata !7543, metadata !DIExpression()), !dbg !7544
  %10 = load i8*, i8** %5, align 8, !dbg !7545
  store i8* %10, i8** %8, align 8, !dbg !7544
  br label %11, !dbg !7546

11:                                               ; preds = %15, %3
  %12 = load i64, i64* %6, align 8, !dbg !7547
  %13 = add i64 %12, -1, !dbg !7547
  store i64 %13, i64* %6, align 8, !dbg !7547
  %14 = icmp ugt i64 %12, 0, !dbg !7548
  br i1 %14, label %15, label %21, !dbg !7546

15:                                               ; preds = %11
  %16 = load i8*, i8** %8, align 8, !dbg !7549
  %17 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !7549
  store i8* %17, i8** %8, align 8, !dbg !7549
  %18 = load i8, i8* %16, align 1, !dbg !7550
  %19 = load i8*, i8** %7, align 8, !dbg !7551
  %20 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7551
  store i8* %20, i8** %7, align 8, !dbg !7551
  store i8 %18, i8* %19, align 1, !dbg !7552
  br label %11, !dbg !7546, !llvm.loop !7553

21:                                               ; preds = %11
  %22 = load i8*, i8** %4, align 8, !dbg !7555
  ret i8* %22, !dbg !7556
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @memset(i8* %0, i32 %1, i64 %2) #0 !dbg !7557 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7561, metadata !DIExpression()), !dbg !7562
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7563, metadata !DIExpression()), !dbg !7564
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !7565, metadata !DIExpression()), !dbg !7566
  call void @llvm.dbg.declare(metadata i8** %7, metadata !7567, metadata !DIExpression()), !dbg !7568
  %8 = load i8*, i8** %4, align 8, !dbg !7569
  store i8* %8, i8** %7, align 8, !dbg !7568
  br label %9, !dbg !7570

9:                                                ; preds = %13, %3
  %10 = load i64, i64* %6, align 8, !dbg !7571
  %11 = add i64 %10, -1, !dbg !7571
  store i64 %11, i64* %6, align 8, !dbg !7571
  %12 = icmp ugt i64 %10, 0, !dbg !7572
  br i1 %12, label %13, label %18, !dbg !7570

13:                                               ; preds = %9
  %14 = load i32, i32* %5, align 4, !dbg !7573
  %15 = trunc i32 %14 to i8, !dbg !7573
  %16 = load i8*, i8** %7, align 8, !dbg !7574
  %17 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !7574
  store i8* %17, i8** %7, align 8, !dbg !7574
  store i8 %15, i8* %16, align 1, !dbg !7575
  br label %9, !dbg !7570, !llvm.loop !7576

18:                                               ; preds = %9
  %19 = load i8*, i8** %4, align 8, !dbg !7577
  ret i8* %19, !dbg !7578
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @klee_overshift_check(i64 %0, i64 %1) #0 !dbg !7579 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !7583, metadata !DIExpression()), !dbg !7584
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !7585, metadata !DIExpression()), !dbg !7586
  %5 = load i64, i64* %4, align 8, !dbg !7587
  %6 = load i64, i64* %3, align 8, !dbg !7589
  %7 = icmp uge i64 %5, %6, !dbg !7590
  br i1 %7, label %8, label %9, !dbg !7591

8:                                                ; preds = %2
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.126, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.127, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.128, i64 0, i64 0)) #16, !dbg !7592
  unreachable, !dbg !7592

9:                                                ; preds = %2
  ret void, !dbg !7594
}

attributes #0 = { noinline nounwind uwtable "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nofree nosync nounwind willreturn }
attributes #3 = { nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nosync nounwind willreturn writeonly }
attributes #10 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nosync nounwind willreturn }
attributes #13 = { nounwind readonly willreturn "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone willreturn "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { noreturn }
attributes #17 = { noreturn nounwind }
attributes #18 = { nounwind readonly }
attributes #19 = { nounwind readonly willreturn }
attributes #20 = { nounwind readnone willreturn }

!llvm.dbg.cu = !{!545, !2, !349, !549, !552, !450, !585, !587, !589}
!llvm.module.flags = !{!591, !592, !593}
!llvm.ident = !{!594, !595, !594, !594, !594, !594, !594, !594, !594}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "gDemo1_Access_Key_Protocol", scope: !2, file: !161, line: 18, type: !208, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 11.0.0-2~ubuntu20.04.1", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !57, globals: !158, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "Demo1_Variable.c", directory: "/home/laboni/Laboni/DARPA_HARDEN/HARDEN_demo1/edk2/EmulatorPkg/kleeAnalysis/Demo1_Variable")
!4 = !{!5, !13, !20, !38, !43, !46, !51}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 112, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./Pi/../Uefi/UefiMultiPhase.h", directory: "/home/laboni/Laboni/DARPA_HARDEN/HARDEN_demo1/edk2/EmulatorPkg/kleeAnalysis/Demo1_Variable")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "EfiResetCold", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "EfiResetWarm", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "EfiResetShutdown", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "EfiResetPlatformSpecific", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !14, line: 28, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./Pi/../Protocol/../Uefi/UefiSpec.h", directory: "/home/laboni/Laboni/DARPA_HARDEN/HARDEN_demo1/edk2/EmulatorPkg/kleeAnalysis/Demo1_Variable")
!15 = !{!16, !17, !18, !19}
!16 = !DIEnumerator(name: "AllocateAnyPages", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "AllocateMaxAddress", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "AllocateAddress", value: 2, isUnsigned: true)
!19 = !DIEnumerator(name: "MaxAllocateType", value: 3, isUnsigned: true)
!20 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 38, baseType: !7, size: 32, elements: !21)
!21 = !{!22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37}
!22 = !DIEnumerator(name: "EfiReservedMemoryType", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "EfiLoaderCode", value: 1, isUnsigned: true)
!24 = !DIEnumerator(name: "EfiLoaderData", value: 2, isUnsigned: true)
!25 = !DIEnumerator(name: "EfiBootServicesCode", value: 3, isUnsigned: true)
!26 = !DIEnumerator(name: "EfiBootServicesData", value: 4, isUnsigned: true)
!27 = !DIEnumerator(name: "EfiRuntimeServicesCode", value: 5, isUnsigned: true)
!28 = !DIEnumerator(name: "EfiRuntimeServicesData", value: 6, isUnsigned: true)
!29 = !DIEnumerator(name: "EfiConventionalMemory", value: 7, isUnsigned: true)
!30 = !DIEnumerator(name: "EfiUnusableMemory", value: 8, isUnsigned: true)
!31 = !DIEnumerator(name: "EfiACPIReclaimMemory", value: 9, isUnsigned: true)
!32 = !DIEnumerator(name: "EfiACPIMemoryNVS", value: 10, isUnsigned: true)
!33 = !DIEnumerator(name: "EfiMemoryMappedIO", value: 11, isUnsigned: true)
!34 = !DIEnumerator(name: "EfiMemoryMappedIOPortSpace", value: 12, isUnsigned: true)
!35 = !DIEnumerator(name: "EfiPalCode", value: 13, isUnsigned: true)
!36 = !DIEnumerator(name: "EfiPersistentMemory", value: 14, isUnsigned: true)
!37 = !DIEnumerator(name: "EfiMaxMemoryType", value: 15, isUnsigned: true)
!38 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !14, line: 505, baseType: !7, size: 32, elements: !39)
!39 = !{!40, !41, !42}
!40 = !DIEnumerator(name: "TimerCancel", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "TimerPeriodic", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "TimerRelative", value: 2, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !14, line: 1217, baseType: !7, size: 32, elements: !44)
!44 = !{!45}
!45 = !DIEnumerator(name: "EFI_NATIVE_INTERFACE", value: 0, isUnsigned: true)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !14, line: 1533, baseType: !7, size: 32, elements: !47)
!47 = !{!48, !49, !50}
!48 = !DIEnumerator(name: "AllHandles", value: 0, isUnsigned: true)
!49 = !DIEnumerator(name: "ByRegisterNotify", value: 1, isUnsigned: true)
!50 = !DIEnumerator(name: "ByProtocol", value: 2, isUnsigned: true)
!51 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !52, line: 49, baseType: !7, size: 32, elements: !53)
!52 = !DIFile(filename: "./Library/UefiLib.h", directory: "/home/laboni/Laboni/DARPA_HARDEN/HARDEN_demo1/edk2/EmulatorPkg/kleeAnalysis/Demo1_Variable")
!53 = !{!54, !55, !56}
!54 = !DIEnumerator(name: "EfiLockUninitialized", value: 0, isUnsigned: true)
!55 = !DIEnumerator(name: "EfiLockReleased", value: 1, isUnsigned: true)
!56 = !DIEnumerator(name: "EfiLockAcquired", value: 2, isUnsigned: true)
!57 = !{!58, !59, !62, !65, !70, !79, !82, !67, !117, !119, !120, !140, !150, !151}
!58 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!59 = !DIDerivedType(tag: DW_TAG_typedef, name: "BOOLEAN", file: !60, line: 210, baseType: !61)
!60 = !DIFile(filename: "./Uefi/ProcessorBind.h", directory: "/home/laboni/Laboni/DARPA_HARDEN/HARDEN_demo1/edk2/EmulatorPkg/kleeAnalysis/Demo1_Variable")
!61 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!62 = !DIDerivedType(tag: DW_TAG_typedef, name: "INTN", file: !60, line: 234, baseType: !63)
!63 = !DIDerivedType(tag: DW_TAG_typedef, name: "INT64", file: !60, line: 184, baseType: !64)
!64 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!65 = !DIDerivedType(tag: DW_TAG_typedef, name: "RETURN_STATUS", file: !66, line: 928, baseType: !67)
!66 = !DIFile(filename: "./Uefi/Base.h", directory: "/home/laboni/Laboni/DARPA_HARDEN/HARDEN_demo1/edk2/EmulatorPkg/kleeAnalysis/Demo1_Variable")
!67 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINTN", file: !60, line: 229, baseType: !68)
!68 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT64", file: !60, line: 180, baseType: !69)
!69 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!70 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !71, size: 64)
!71 = !DIDerivedType(tag: DW_TAG_typedef, name: "AUTHENTICATED_VARIABLE_HEADER", file: !72, line: 227, baseType: !73)
!72 = !DIFile(filename: "./Guid/VariableFormat.h", directory: "/home/laboni/Laboni/DARPA_HARDEN/HARDEN_demo1/edk2/EmulatorPkg/kleeAnalysis/Demo1_Variable")
!73 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !72, line: 189, size: 480, elements: !74)
!74 = !{!75, !78, !80, !81, !83, !84, !102, !103, !104, !105}
!75 = !DIDerivedType(tag: DW_TAG_member, name: "StartId", scope: !73, file: !72, line: 193, baseType: !76, size: 16)
!76 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT16", file: !60, line: 196, baseType: !77)
!77 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "State", scope: !73, file: !72, line: 197, baseType: !79, size: 8, offset: 16)
!79 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT8", file: !60, line: 214, baseType: !61)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved", scope: !73, file: !72, line: 198, baseType: !79, size: 8, offset: 24)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "Attributes", scope: !73, file: !72, line: 202, baseType: !82, size: 32, offset: 32)
!82 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT32", file: !60, line: 188, baseType: !7)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "MonotonicCount", scope: !73, file: !72, line: 206, baseType: !68, size: 64, offset: 64)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "TimeStamp", scope: !73, file: !72, line: 210, baseType: !85, size: 128, offset: 128)
!85 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_TIME", file: !86, line: 82, baseType: !87)
!86 = !DIFile(filename: "./Uefi/UefiBaseType.h", directory: "/home/laboni/Laboni/DARPA_HARDEN/HARDEN_demo1/edk2/EmulatorPkg/kleeAnalysis/Demo1_Variable")
!87 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !86, line: 70, size: 128, elements: !88)
!88 = !{!89, !90, !91, !92, !93, !94, !95, !96, !97, !100, !101}
!89 = !DIDerivedType(tag: DW_TAG_member, name: "Year", scope: !87, file: !86, line: 71, baseType: !76, size: 16)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "Month", scope: !87, file: !86, line: 72, baseType: !79, size: 8, offset: 16)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "Day", scope: !87, file: !86, line: 73, baseType: !79, size: 8, offset: 24)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "Hour", scope: !87, file: !86, line: 74, baseType: !79, size: 8, offset: 32)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "Minute", scope: !87, file: !86, line: 75, baseType: !79, size: 8, offset: 40)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "Second", scope: !87, file: !86, line: 76, baseType: !79, size: 8, offset: 48)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "Pad1", scope: !87, file: !86, line: 77, baseType: !79, size: 8, offset: 56)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "Nanosecond", scope: !87, file: !86, line: 78, baseType: !82, size: 32, offset: 64)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "TimeZone", scope: !87, file: !86, line: 79, baseType: !98, size: 16, offset: 96)
!98 = !DIDerivedType(tag: DW_TAG_typedef, name: "INT16", file: !60, line: 205, baseType: !99)
!99 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "Daylight", scope: !87, file: !86, line: 80, baseType: !79, size: 8, offset: 112)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "Pad2", scope: !87, file: !86, line: 81, baseType: !79, size: 8, offset: 120)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "PubKeyIndex", scope: !73, file: !72, line: 214, baseType: !82, size: 32, offset: 256)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "NameSize", scope: !73, file: !72, line: 218, baseType: !82, size: 32, offset: 288)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "DataSize", scope: !73, file: !72, line: 222, baseType: !82, size: 32, offset: 320)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "VendorGuid", scope: !73, file: !72, line: 226, baseType: !106, size: 128, offset: 352)
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_GUID", file: !86, line: 27, baseType: !107)
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "GUID", file: !66, line: 218, baseType: !108)
!108 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !66, line: 213, size: 128, elements: !109)
!109 = !{!110, !111, !112, !113}
!110 = !DIDerivedType(tag: DW_TAG_member, name: "Data1", scope: !108, file: !66, line: 214, baseType: !82, size: 32)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "Data2", scope: !108, file: !66, line: 215, baseType: !76, size: 16, offset: 32)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "Data3", scope: !108, file: !66, line: 216, baseType: !76, size: 16, offset: 48)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "Data4", scope: !108, file: !66, line: 217, baseType: !114, size: 64, offset: 64)
!114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !79, size: 64, elements: !115)
!115 = !{!116}
!116 = !DISubrange(count: 8)
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 64)
!118 = !DIDerivedType(tag: DW_TAG_typedef, name: "CHAR16", file: !60, line: 201, baseType: !77)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !79, size: 64)
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 64)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "ACCESS_VARIABLE_HEADER", file: !72, line: 184, baseType: !122)
!122 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !72, line: 154, size: 384, elements: !123)
!123 = !{!124, !125, !126, !127, !128, !129, !130, !131}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "StartId", scope: !122, file: !72, line: 158, baseType: !76, size: 16)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "State", scope: !122, file: !72, line: 162, baseType: !79, size: 8, offset: 16)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved", scope: !122, file: !72, line: 163, baseType: !79, size: 8, offset: 24)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "Attributes", scope: !122, file: !72, line: 167, baseType: !82, size: 32, offset: 32)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "NameSize", scope: !122, file: !72, line: 171, baseType: !82, size: 32, offset: 64)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "DataSize", scope: !122, file: !72, line: 175, baseType: !82, size: 32, offset: 96)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "VendorGuid", scope: !122, file: !72, line: 179, baseType: !106, size: 128, offset: 128)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "accesskeylist", scope: !122, file: !72, line: 183, baseType: !132, size: 128, offset: 256)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "DEMO1_ACCESS_KEY", file: !86, line: 23, baseType: !133)
!133 = !DIDerivedType(tag: DW_TAG_typedef, name: "_DEMO1_ACCESS_KEY", file: !66, line: 225, baseType: !134)
!134 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !66, line: 223, size: 128, elements: !135)
!135 = !{!136}
!136 = !DIDerivedType(tag: DW_TAG_member, name: "access_key_store", scope: !134, file: !66, line: 224, baseType: !137, size: 128)
!137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 128, elements: !138)
!138 = !{!139}
!139 = !DISubrange(count: 2)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "VARIABLE_STORE_HEADER", file: !72, line: 87, baseType: !142)
!142 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !72, line: 67, size: 224, elements: !143)
!143 = !{!144, !145, !146, !147, !148, !149}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !142, file: !72, line: 71, baseType: !106, size: 128)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "Size", scope: !142, file: !72, line: 76, baseType: !82, size: 32, offset: 128)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "Format", scope: !142, file: !72, line: 80, baseType: !79, size: 8, offset: 160)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "State", scope: !142, file: !72, line: 84, baseType: !79, size: 8, offset: 168)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved", scope: !142, file: !72, line: 85, baseType: !76, size: 16, offset: 176)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !142, file: !72, line: 86, baseType: !82, size: 32, offset: 192)
!150 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_PHYSICAL_ADDRESS", file: !86, line: 52, baseType: !68)
!151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64)
!152 = !DICompositeType(tag: DW_TAG_structure_type, name: "DEMO1_ACCESS_KEY", scope: !153, file: !3, line: 1432, flags: DIFlagFwdDecl)
!153 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 1424, type: !154, scopeLine: 1424, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!154 = !DISubroutineType(types: !155)
!155 = !{!156}
!156 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!157 = !{}
!158 = !{!0, !159, !181, !184, !186, !195, !197, !199, !201, !203, !205, !220, !222, !237}
!159 = !DIGlobalVariableExpression(var: !160, expr: !DIExpression())
!160 = distinct !DIGlobalVariable(name: "RngProtocol", scope: !2, file: !161, line: 24, type: !162, isLocal: false, isDefinition: true)
!161 = !DIFile(filename: "./../Demo1_Access_Key/Demo1_Access_Key.c", directory: "/home/laboni/Laboni/DARPA_HARDEN/HARDEN_demo1/edk2/EmulatorPkg/kleeAnalysis/Demo1_Variable")
!162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 64)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_RNG_PROTOCOL", file: !164, line: 22, baseType: !165)
!164 = !DIFile(filename: "./../Demo1_Access_Key/Protocol/Rng.h", directory: "/home/laboni/Laboni/DARPA_HARDEN/HARDEN_demo1/edk2/EmulatorPkg/kleeAnalysis/Demo1_Variable")
!165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_EFI_RNG_PROTOCOL", file: !164, line: 137, size: 128, elements: !166)
!166 = !{!167, !176}
!167 = !DIDerivedType(tag: DW_TAG_member, name: "GetInfo", scope: !165, file: !164, line: 138, baseType: !168, size: 64)
!168 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_RNG_GET_INFO", file: !164, line: 96, baseType: !169)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 64)
!170 = !DISubroutineType(types: !171)
!171 = !{!172, !162, !173, !174}
!172 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_STATUS", file: !86, line: 31, baseType: !65)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !67, size: 64)
!174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 64)
!175 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_RNG_ALGORITHM", file: !164, line: 30, baseType: !106)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "GetRNG", scope: !165, file: !164, line: 139, baseType: !177, size: 64, offset: 64)
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_RNG_GET_RNG", file: !164, line: 126, baseType: !178)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64)
!179 = !DISubroutineType(types: !180)
!180 = !{!172, !162, !174, !67, !119}
!181 = !DIGlobalVariableExpression(var: !182, expr: !DIExpression())
!182 = distinct !DIGlobalVariable(name: "masterKey", scope: !2, file: !161, line: 25, type: !183, isLocal: false, isDefinition: true)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 64)
!184 = !DIGlobalVariableExpression(var: !185, expr: !DIExpression())
!185 = distinct !DIGlobalVariable(name: "accessKeyLock", scope: !2, file: !161, line: 28, type: !59, isLocal: false, isDefinition: true)
!186 = !DIGlobalVariableExpression(var: !187, expr: !DIExpression())
!187 = distinct !DIGlobalVariable(name: "head", scope: !2, file: !161, line: 39, type: !188, isLocal: false, isDefinition: true)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64)
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "LINK", file: !161, line: 31, baseType: !190)
!190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_LINK", file: !161, line: 33, size: 256, elements: !191)
!191 = !{!192, !193, !194}
!192 = !DIDerivedType(tag: DW_TAG_member, name: "access_key", scope: !190, file: !161, line: 34, baseType: !132, size: 128)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !190, file: !161, line: 35, baseType: !188, size: 64, offset: 128)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !190, file: !161, line: 36, baseType: !188, size: 64, offset: 192)
!195 = !DIGlobalVariableExpression(var: !196, expr: !DIExpression())
!196 = distinct !DIGlobalVariable(name: "last", scope: !2, file: !161, line: 40, type: !188, isLocal: false, isDefinition: true)
!197 = !DIGlobalVariableExpression(var: !198, expr: !DIExpression())
!198 = distinct !DIGlobalVariable(name: "keychain", scope: !2, file: !161, line: 41, type: !188, isLocal: false, isDefinition: true)
!199 = !DIGlobalVariableExpression(var: !200, expr: !DIExpression())
!200 = distinct !DIGlobalVariable(name: "gAuthVarGUID", scope: !2, file: !3, line: 19, type: !106, isLocal: false, isDefinition: true)
!201 = !DIGlobalVariableExpression(var: !202, expr: !DIExpression())
!202 = distinct !DIGlobalVariable(name: "gEfiVarGuid", scope: !2, file: !3, line: 20, type: !106, isLocal: false, isDefinition: true)
!203 = !DIGlobalVariableExpression(var: !204, expr: !DIExpression())
!204 = distinct !DIGlobalVariable(name: "gEfiGlobalVarGuid", scope: !2, file: !3, line: 21, type: !106, isLocal: false, isDefinition: true)
!205 = !DIGlobalVariableExpression(var: !206, expr: !DIExpression())
!206 = distinct !DIGlobalVariable(name: "AccessKeyProtocol", scope: !2, file: !3, line: 24, type: !207, isLocal: false, isDefinition: true)
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 64)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "Demo1_Access_Key_PROTOCOL", file: !209, line: 41, baseType: !210)
!209 = !DIFile(filename: "./../Demo1_Access_Key/Demo1_Access_Key.h", directory: "/home/laboni/Laboni/DARPA_HARDEN/HARDEN_demo1/edk2/EmulatorPkg/kleeAnalysis/Demo1_Variable")
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Demo1_Access_Key_PROTOCOL", file: !209, line: 77, size: 128, elements: !211)
!211 = !{!212, !218}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "Demo1GenerateAccessKey", scope: !210, file: !209, line: 78, baseType: !213, size: 64)
!213 = !DIDerivedType(tag: DW_TAG_typedef, name: "DRVR_FUNC_CB_TYPE1", file: !209, line: 56, baseType: !214)
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 64)
!215 = !DISubroutineType(types: !216)
!216 = !{!172, !207, !217, !59, !183}
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_HANDLE", file: !86, line: 35, baseType: !58)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "Demo1_Ready_To_Lock_Event", scope: !210, file: !209, line: 80, baseType: !219, size: 64, offset: 64)
!219 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_EVENT", file: !86, line: 39, baseType: !58)
!220 = !DIGlobalVariableExpression(var: !221, expr: !DIExpression())
!221 = distinct !DIGlobalVariable(name: "mineNvVariableCache", scope: !2, file: !3, line: 32, type: !140, isLocal: false, isDefinition: true)
!222 = !DIGlobalVariableExpression(var: !223, expr: !DIExpression())
!223 = distinct !DIGlobalVariable(name: "gVarInfo", scope: !2, file: !3, line: 36, type: !224, isLocal: false, isDefinition: true)
!224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !225, size: 64)
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "VARIABLE_INFO_ENTRY", file: !72, line: 237, baseType: !226)
!226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_VARIABLE_INFO_ENTRY", file: !72, line: 244, size: 448, elements: !227)
!227 = !{!228, !229, !230, !231, !232, !233, !234, !235, !236}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "Next", scope: !226, file: !72, line: 245, baseType: !224, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "VendorGuid", scope: !226, file: !72, line: 246, baseType: !106, size: 128, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "Name", scope: !226, file: !72, line: 247, baseType: !117, size: 64, offset: 192)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "Attributes", scope: !226, file: !72, line: 248, baseType: !82, size: 32, offset: 256)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "ReadCount", scope: !226, file: !72, line: 249, baseType: !82, size: 32, offset: 288)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "WriteCount", scope: !226, file: !72, line: 250, baseType: !82, size: 32, offset: 320)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "DeleteCount", scope: !226, file: !72, line: 251, baseType: !82, size: 32, offset: 352)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "CacheCount", scope: !226, file: !72, line: 252, baseType: !82, size: 32, offset: 384)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "Volatile", scope: !226, file: !72, line: 253, baseType: !59, size: 8, offset: 416)
!237 = !DIGlobalVariableExpression(var: !238, expr: !DIExpression())
!238 = distinct !DIGlobalVariable(name: "mineVariableModuleGlobal", scope: !2, file: !3, line: 26, type: !239, isLocal: false, isDefinition: true)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "VARIABLE_MODULE_GLOBAL", file: !241, line: 139, baseType: !242)
!241 = !DIFile(filename: "./Variable.h", directory: "/home/laboni/Laboni/DARPA_HARDEN/HARDEN_demo1/edk2/EmulatorPkg/kleeAnalysis/Demo1_Variable")
!242 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !241, line: 120, size: 2112, elements: !243)
!243 = !{!244, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !297, !298, !299, !303}
!244 = !DIDerivedType(tag: DW_TAG_member, name: "VariableGlobal", scope: !242, file: !241, line: 121, baseType: !245, size: 1024)
!245 = !DIDerivedType(tag: DW_TAG_typedef, name: "VARIABLE_GLOBAL", file: !241, line: 118, baseType: !246)
!246 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !241, line: 108, size: 1024, elements: !247)
!247 = !{!248, !249, !250, !251, !268, !277, !278, !279, !280}
!248 = !DIDerivedType(tag: DW_TAG_member, name: "HobVariableBase", scope: !246, file: !241, line: 109, baseType: !150, size: 64)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "VolatileVariableBase", scope: !246, file: !241, line: 110, baseType: !150, size: 64, offset: 64)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "NonVolatileVariableBase", scope: !246, file: !241, line: 111, baseType: !150, size: 64, offset: 128)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "VariableRuntimeCacheContext", scope: !246, file: !241, line: 112, baseType: !252, size: 576, offset: 192)
!252 = !DIDerivedType(tag: DW_TAG_typedef, name: "VARIABLE_RUNTIME_CACHE_CONTEXT", file: !241, line: 77, baseType: !253)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !241, line: 70, size: 576, elements: !254)
!254 = !{!255, !257, !258, !259, !266, !267}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "ReadLock", scope: !253, file: !241, line: 71, baseType: !256, size: 64)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !59, size: 64)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "PendingUpdate", scope: !253, file: !241, line: 72, baseType: !256, size: 64, offset: 64)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "HobFlushComplete", scope: !253, file: !241, line: 73, baseType: !256, size: 64, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "VariableRuntimeHobCache", scope: !253, file: !241, line: 74, baseType: !260, size: 128, offset: 192)
!260 = !DIDerivedType(tag: DW_TAG_typedef, name: "VARIABLE_RUNTIME_CACHE", file: !241, line: 68, baseType: !261)
!261 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !241, line: 64, size: 128, elements: !262)
!262 = !{!263, !264, !265}
!263 = !DIDerivedType(tag: DW_TAG_member, name: "PendingUpdateOffset", scope: !261, file: !241, line: 65, baseType: !82, size: 32)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "PendingUpdateLength", scope: !261, file: !241, line: 66, baseType: !82, size: 32, offset: 32)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "Store", scope: !261, file: !241, line: 67, baseType: !140, size: 64, offset: 64)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "VariableRuntimeNvCache", scope: !253, file: !241, line: 75, baseType: !260, size: 128, offset: 320)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "VariableRuntimeVolatileCache", scope: !253, file: !241, line: 76, baseType: !260, size: 128, offset: 448)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "VariableServicesLock", scope: !246, file: !241, line: 113, baseType: !269, size: 192, offset: 768)
!269 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_LOCK", file: !52, line: 62, baseType: !270)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !52, line: 58, size: 192, elements: !271)
!271 = !{!272, !274, !275}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "Tpl", scope: !270, file: !52, line: 59, baseType: !273, size: 64)
!273 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_TPL", file: !86, line: 43, baseType: !67)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "OwnerTpl", scope: !270, file: !52, line: 60, baseType: !273, size: 64, offset: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "Lock", scope: !270, file: !52, line: 61, baseType: !276, size: 32, offset: 128)
!276 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_LOCK_STATE", file: !52, line: 53, baseType: !51)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "ReentrantState", scope: !246, file: !241, line: 114, baseType: !82, size: 32, offset: 960)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "AuthFormat", scope: !246, file: !241, line: 115, baseType: !59, size: 8, offset: 992)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "AuthSupport", scope: !246, file: !241, line: 116, baseType: !59, size: 8, offset: 1000)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "EmuNvMode", scope: !246, file: !241, line: 117, baseType: !59, size: 8, offset: 1008)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "VolatileLastVariableOffset", scope: !242, file: !241, line: 122, baseType: !67, size: 64, offset: 1024)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "NonVolatileLastVariableOffset", scope: !242, file: !241, line: 123, baseType: !67, size: 64, offset: 1088)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "CommonVariableSpace", scope: !242, file: !241, line: 124, baseType: !67, size: 64, offset: 1152)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "CommonMaxUserVariableSpace", scope: !242, file: !241, line: 125, baseType: !67, size: 64, offset: 1216)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "CommonRuntimeVariableSpace", scope: !242, file: !241, line: 126, baseType: !67, size: 64, offset: 1280)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "CommonVariableTotalSize", scope: !242, file: !241, line: 127, baseType: !67, size: 64, offset: 1344)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "CommonUserVariableTotalSize", scope: !242, file: !241, line: 128, baseType: !67, size: 64, offset: 1408)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "HwErrVariableTotalSize", scope: !242, file: !241, line: 129, baseType: !67, size: 64, offset: 1472)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "MaxVariableSize", scope: !242, file: !241, line: 130, baseType: !67, size: 64, offset: 1536)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "MaxAuthVariableSize", scope: !242, file: !241, line: 131, baseType: !67, size: 64, offset: 1600)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "MaxVolatileVariableSize", scope: !242, file: !241, line: 132, baseType: !67, size: 64, offset: 1664)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "ScratchBufferSize", scope: !242, file: !241, line: 133, baseType: !67, size: 64, offset: 1728)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "PlatformLangCodes", scope: !242, file: !241, line: 134, baseType: !294, size: 64, offset: 1792)
!294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 64)
!295 = !DIDerivedType(tag: DW_TAG_typedef, name: "CHAR8", file: !60, line: 218, baseType: !296)
!296 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "LangCodes", scope: !242, file: !241, line: 135, baseType: !294, size: 64, offset: 1856)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "PlatformLang", scope: !242, file: !241, line: 136, baseType: !294, size: 64, offset: 1920)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "Lang", scope: !242, file: !241, line: 137, baseType: !300, size: 32, offset: 1984)
!300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !295, size: 32, elements: !301)
!301 = !{!302}
!302 = !DISubrange(count: 4)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "FvbInstance", scope: !242, file: !241, line: 138, baseType: !304, size: 64, offset: 2048)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!305 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL", file: !306, line: 26, baseType: !307)
!306 = !DIFile(filename: "./Protocol/FirmwareVolumeBlock.h", directory: "/home/laboni/Laboni/DARPA_HARDEN/HARDEN_demo1/edk2/EmulatorPkg/kleeAnalysis/Demo1_Variable")
!307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_EFI_FIRMWARE_VOLUME_BLOCK_PROTOCOL", file: !306, line: 335, size: 512, elements: !308)
!308 = !{!309, !320, !322, !328, !334, !339, !341, !346}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "GetAttributes", scope: !307, file: !306, line: 336, baseType: !310, size: 64)
!310 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_FVB_GET_ATTRIBUTES", file: !306, line: 47, baseType: !311)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!312 = !DISubroutineType(types: !313)
!313 = !{!172, !314, !317}
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64)
!315 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !316)
!316 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_FIRMWARE_VOLUME_BLOCK2_PROTOCOL", file: !306, line: 28, baseType: !305)
!317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_FVB_ATTRIBUTES_2", file: !319, line: 30, baseType: !82)
!319 = !DIFile(filename: "./Pi/PiFirmwareVolume.h", directory: "/home/laboni/Laboni/DARPA_HARDEN/HARDEN_demo1/edk2/EmulatorPkg/kleeAnalysis/Demo1_Variable")
!320 = !DIDerivedType(tag: DW_TAG_member, name: "SetAttributes", scope: !307, file: !306, line: 337, baseType: !321, size: 64, offset: 64)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_FVB_SET_ATTRIBUTES", file: !306, line: 76, baseType: !311)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "GetPhysicalAddress", scope: !307, file: !306, line: 338, baseType: !323, size: 64, offset: 128)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_FVB_GET_PHYSICAL_ADDRESS", file: !306, line: 100, baseType: !324)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64)
!325 = !DISubroutineType(types: !326)
!326 = !{!172, !314, !327}
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 64)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "GetBlockSize", scope: !307, file: !306, line: 339, baseType: !329, size: 64, offset: 192)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_FVB_GET_BLOCK_SIZE", file: !306, line: 133, baseType: !330)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!331 = !DISubroutineType(types: !332)
!332 = !{!172, !314, !333, !173, !173}
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_LBA", file: !86, line: 47, baseType: !68)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !307, file: !306, line: 340, baseType: !335, size: 64, offset: 256)
!335 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_FVB_READ", file: !306, line: 189, baseType: !336)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 64)
!337 = !DISubroutineType(types: !338)
!338 = !{!172, !314, !333, !67, !173, !119}
!339 = !DIDerivedType(tag: DW_TAG_member, name: "Write", scope: !307, file: !306, line: 341, baseType: !340, size: 64, offset: 320)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_FVB_WRITE", file: !306, line: 258, baseType: !336)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlocks", scope: !307, file: !306, line: 342, baseType: !342, size: 64, offset: 384)
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_FVB_ERASE_BLOCKS", file: !306, line: 321, baseType: !343)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64)
!344 = !DISubroutineType(types: !345)
!345 = !{!172, !314, null}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "ParentHandle", scope: !307, file: !306, line: 346, baseType: !217, size: 64, offset: 448)
!347 = !DIGlobalVariableExpression(var: !348, expr: !DIExpression())
!348 = distinct !DIGlobalVariable(name: "__exe_env", scope: !349, file: !354, line: 34, type: !422, isLocal: false, isDefinition: true)
!349 = distinct !DICompileUnit(language: DW_LANG_C89, file: !350, producer: "Ubuntu clang version 12.0.0-3ubuntu1~20.04.5", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !157, globals: !351, splitDebugInlining: false, nameTableKind: None)
!350 = !DIFile(filename: "/home/laboni/kleeEnv/klee/runtime/POSIX/fd_init.c", directory: "/home/laboni/kleeEnv/klee_build/runtime/POSIX")
!351 = !{!347, !352}
!352 = !DIGlobalVariableExpression(var: !353, expr: !DIExpression())
!353 = distinct !DIGlobalVariable(name: "__exe_fs", scope: !349, file: !354, line: 21, type: !355, isLocal: false, isDefinition: true)
!354 = !DIFile(filename: "klee/runtime/POSIX/fd_init.c", directory: "/home/laboni/kleeEnv")
!355 = !DIDerivedType(tag: DW_TAG_typedef, name: "exe_file_system_t", file: !356, line: 86, baseType: !357)
!356 = !DIFile(filename: "klee/runtime/POSIX/fd.h", directory: "/home/laboni/kleeEnv")
!357 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 74, size: 832, elements: !358)
!358 = !{!359, !360, !410, !411, !412, !413, !414, !416, !417, !418, !419, !420, !421}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "n_sym_files", scope: !357, file: !356, line: 75, baseType: !7, size: 32)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "sym_stdin", scope: !357, file: !356, line: 76, baseType: !361, size: 64, offset: 64)
!361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 64)
!362 = !DIDerivedType(tag: DW_TAG_typedef, name: "exe_disk_file_t", file: !356, line: 56, baseType: !363)
!363 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 52, size: 192, elements: !364)
!364 = !{!365, !366, !368}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !363, file: !356, line: 53, baseType: !7, size: 32)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !363, file: !356, line: 54, baseType: !367, size: 64, offset: 64)
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !363, file: !356, line: 55, baseType: !369, size: 64, offset: 128)
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 64)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !371, line: 119, size: 1152, elements: !372)
!371 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!372 = !{!373, !377, !379, !381, !383, !385, !387, !388, !389, !392, !394, !396, !404, !405, !406}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !370, file: !371, line: 121, baseType: !374, size: 64)
!374 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !375, line: 145, baseType: !376)
!375 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!376 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !370, file: !371, line: 123, baseType: !378, size: 64, offset: 64)
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !375, line: 149, baseType: !376)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !370, file: !371, line: 124, baseType: !380, size: 64, offset: 128)
!380 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !375, line: 151, baseType: !376)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !370, file: !371, line: 125, baseType: !382, size: 32, offset: 192)
!382 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !375, line: 150, baseType: !7)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !370, file: !371, line: 132, baseType: !384, size: 32, offset: 224)
!384 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !375, line: 146, baseType: !7)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !370, file: !371, line: 133, baseType: !386, size: 32, offset: 256)
!386 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !375, line: 147, baseType: !7)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !370, file: !371, line: 135, baseType: !156, size: 32, offset: 288)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !370, file: !371, line: 136, baseType: !374, size: 64, offset: 320)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !370, file: !371, line: 137, baseType: !390, size: 64, offset: 384)
!390 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !375, line: 152, baseType: !391)
!391 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !370, file: !371, line: 143, baseType: !393, size: 64, offset: 448)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !375, line: 174, baseType: !391)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !370, file: !371, line: 144, baseType: !395, size: 64, offset: 512)
!395 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !375, line: 180, baseType: !391)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !370, file: !371, line: 152, baseType: !397, size: 128, offset: 576)
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !398, line: 10, size: 128, elements: !399)
!398 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!399 = !{!400, !402}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !397, file: !398, line: 12, baseType: !401, size: 64)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !375, line: 160, baseType: !391)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !397, file: !398, line: 16, baseType: !403, size: 64, offset: 64)
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !375, line: 196, baseType: !391)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !370, file: !371, line: 153, baseType: !397, size: 128, offset: 704)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !370, file: !371, line: 154, baseType: !397, size: 128, offset: 832)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !370, file: !371, line: 164, baseType: !407, size: 192, offset: 960)
!407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !403, size: 192, elements: !408)
!408 = !{!409}
!409 = !DISubrange(count: 3)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "sym_stdout", scope: !357, file: !356, line: 76, baseType: !361, size: 64, offset: 128)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "stdout_writes", scope: !357, file: !356, line: 77, baseType: !7, size: 32, offset: 192)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "sym_files", scope: !357, file: !356, line: 78, baseType: !361, size: 64, offset: 256)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "max_failures", scope: !357, file: !356, line: 81, baseType: !7, size: 32, offset: 320)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "read_fail", scope: !357, file: !356, line: 84, baseType: !415, size: 64, offset: 384)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 64)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "write_fail", scope: !357, file: !356, line: 84, baseType: !415, size: 64, offset: 448)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "close_fail", scope: !357, file: !356, line: 84, baseType: !415, size: 64, offset: 512)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "ftruncate_fail", scope: !357, file: !356, line: 84, baseType: !415, size: 64, offset: 576)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "getcwd_fail", scope: !357, file: !356, line: 84, baseType: !415, size: 64, offset: 640)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "chmod_fail", scope: !357, file: !356, line: 85, baseType: !415, size: 64, offset: 704)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "fchmod_fail", scope: !357, file: !356, line: 85, baseType: !415, size: 64, offset: 768)
!422 = !DIDerivedType(tag: DW_TAG_typedef, name: "exe_sym_env_t", file: !356, line: 100, baseType: !423)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 93, size: 6208, elements: !424)
!424 = !{!425, !439, !441}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "fds", scope: !423, file: !356, line: 94, baseType: !426, size: 6144)
!426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !427, size: 6144, elements: !437)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "exe_file_t", file: !356, line: 72, baseType: !428)
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 65, size: 192, elements: !429)
!429 = !{!430, !431, !432, !436}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !428, file: !356, line: 66, baseType: !156, size: 32)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !428, file: !356, line: 67, baseType: !7, size: 32, offset: 32)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !428, file: !356, line: 70, baseType: !433, size: 64, offset: 64)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "off64_t", file: !434, line: 92, baseType: !435)
!434 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "")
!435 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !375, line: 153, baseType: !391)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "dfile", scope: !428, file: !356, line: 71, baseType: !361, size: 64, offset: 128)
!437 = !{!438}
!438 = !DISubrange(count: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "umask", scope: !423, file: !356, line: 95, baseType: !440, size: 32, offset: 6144)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !434, line: 69, baseType: !382)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "save_all_writes", scope: !423, file: !356, line: 99, baseType: !156, size: 32, offset: 6176)
!442 = !DIGlobalVariableExpression(var: !443, expr: !DIExpression())
!443 = distinct !DIGlobalVariable(name: "n_calls", scope: !444, file: !445, line: 1346, type: !156, isLocal: true, isDefinition: true)
!444 = distinct !DISubprogram(name: "getcwd", scope: !445, file: !445, line: 1345, type: !446, scopeLine: 1345, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!445 = !DIFile(filename: "klee/runtime/POSIX/fd.c", directory: "/home/laboni/kleeEnv")
!446 = !DISubroutineType(types: !447)
!447 = !{!367, !367, !448}
!448 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !449, line: 46, baseType: !376)
!449 = !DIFile(filename: "/usr/lib/llvm-12/lib/clang/12.0.0/include/stddef.h", directory: "")
!450 = distinct !DICompileUnit(language: DW_LANG_C89, file: !451, producer: "Ubuntu clang version 12.0.0-3ubuntu1~20.04.5", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !452, retainedTypes: !471, globals: !508, splitDebugInlining: false, nameTableKind: None)
!451 = !DIFile(filename: "/home/laboni/kleeEnv/klee/runtime/POSIX/fd.c", directory: "/home/laboni/kleeEnv/klee_build/runtime/POSIX")
!452 = !{!453, !459}
!453 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !356, line: 58, baseType: !7, size: 32, elements: !454)
!454 = !{!455, !456, !457, !458}
!455 = !DIEnumerator(name: "eOpen", value: 1, isUnsigned: true)
!456 = !DIEnumerator(name: "eCloseOnExec", value: 2, isUnsigned: true)
!457 = !DIEnumerator(name: "eReadable", value: 4, isUnsigned: true)
!458 = !DIEnumerator(name: "eWriteable", value: 8, isUnsigned: true)
!459 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !460, line: 97, baseType: !7, size: 32, elements: !461)
!460 = !DIFile(filename: "/usr/include/dirent.h", directory: "")
!461 = !{!462, !463, !464, !465, !466, !467, !468, !469, !470}
!462 = !DIEnumerator(name: "DT_UNKNOWN", value: 0, isUnsigned: true)
!463 = !DIEnumerator(name: "DT_FIFO", value: 1, isUnsigned: true)
!464 = !DIEnumerator(name: "DT_CHR", value: 2, isUnsigned: true)
!465 = !DIEnumerator(name: "DT_DIR", value: 4, isUnsigned: true)
!466 = !DIEnumerator(name: "DT_BLK", value: 6, isUnsigned: true)
!467 = !DIEnumerator(name: "DT_REG", value: 8, isUnsigned: true)
!468 = !DIEnumerator(name: "DT_LNK", value: 10, isUnsigned: true)
!469 = !DIEnumerator(name: "DT_SOCK", value: 12, isUnsigned: true)
!470 = !DIEnumerator(name: "DT_WHT", value: 14, isUnsigned: true)
!471 = !{!391, !58, !433, !376, !472, !367, !484, !156, !296}
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent64", file: !474, line: 37, size: 2240, elements: !475)
!474 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/dirent.h", directory: "")
!475 = !{!476, !477, !478, !479, !480}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !473, file: !474, line: 39, baseType: !378, size: 64)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !473, file: !474, line: 40, baseType: !435, size: 64, offset: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !473, file: !474, line: 41, baseType: !77, size: 16, offset: 128)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !473, file: !474, line: 42, baseType: !61, size: 8, offset: 144)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !473, file: !474, line: 43, baseType: !481, size: 2048, offset: 152)
!481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 2048, elements: !482)
!482 = !{!483}
!483 = !DISubrange(count: 256)
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !371, line: 46, size: 1152, elements: !486)
!486 = !{!487, !488, !490, !491, !492, !493, !494, !495, !496, !497, !498, !500, !505, !506, !507}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !485, file: !371, line: 48, baseType: !374, size: 64)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !485, file: !371, line: 53, baseType: !489, size: 64, offset: 64)
!489 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !375, line: 148, baseType: !376)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !485, file: !371, line: 61, baseType: !380, size: 64, offset: 128)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !485, file: !371, line: 62, baseType: !382, size: 32, offset: 192)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !485, file: !371, line: 64, baseType: !384, size: 32, offset: 224)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !485, file: !371, line: 65, baseType: !386, size: 32, offset: 256)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !485, file: !371, line: 67, baseType: !156, size: 32, offset: 288)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !485, file: !371, line: 69, baseType: !374, size: 64, offset: 320)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !485, file: !371, line: 74, baseType: !390, size: 64, offset: 384)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !485, file: !371, line: 78, baseType: !393, size: 64, offset: 448)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !485, file: !371, line: 80, baseType: !499, size: 64, offset: 512)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !375, line: 179, baseType: !391)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !485, file: !371, line: 91, baseType: !501, size: 128, offset: 576)
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !398, line: 10, size: 128, elements: !502)
!502 = !{!503, !504}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !501, file: !398, line: 12, baseType: !401, size: 64)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !501, file: !398, line: 16, baseType: !403, size: 64, offset: 64)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !485, file: !371, line: 92, baseType: !501, size: 128, offset: 704)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !485, file: !371, line: 93, baseType: !501, size: 128, offset: 832)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !485, file: !371, line: 106, baseType: !407, size: 192, offset: 960)
!508 = !{!509, !514, !521, !528, !535, !540, !442}
!509 = !DIGlobalVariableExpression(var: !510, expr: !DIExpression())
!510 = distinct !DIGlobalVariable(name: "n_calls", scope: !511, file: !445, line: 313, type: !156, isLocal: true, isDefinition: true)
!511 = distinct !DISubprogram(name: "close", scope: !445, file: !445, line: 312, type: !512, scopeLine: 312, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!512 = !DISubroutineType(types: !513)
!513 = !{!156, !156}
!514 = !DIGlobalVariableExpression(var: !515, expr: !DIExpression())
!515 = distinct !DIGlobalVariable(name: "n_calls", scope: !516, file: !445, line: 345, type: !156, isLocal: true, isDefinition: true)
!516 = distinct !DISubprogram(name: "read", scope: !445, file: !445, line: 344, type: !517, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!517 = !DISubroutineType(types: !518)
!518 = !{!519, !156, !58, !448}
!519 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !434, line: 108, baseType: !520)
!520 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !375, line: 193, baseType: !391)
!521 = !DIGlobalVariableExpression(var: !522, expr: !DIExpression())
!522 = distinct !DIGlobalVariable(name: "n_calls", scope: !523, file: !445, line: 411, type: !156, isLocal: true, isDefinition: true)
!523 = distinct !DISubprogram(name: "write", scope: !445, file: !445, line: 410, type: !524, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!524 = !DISubroutineType(types: !525)
!525 = !{!519, !156, !526, !448}
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!527 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!528 = !DIGlobalVariableExpression(var: !529, expr: !DIExpression())
!529 = distinct !DIGlobalVariable(name: "n_calls", scope: !530, file: !445, line: 647, type: !156, isLocal: true, isDefinition: true)
!530 = distinct !DISubprogram(name: "chmod", scope: !445, file: !445, line: 646, type: !531, scopeLine: 646, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!531 = !DISubroutineType(types: !532)
!532 = !{!156, !533, !440}
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64)
!534 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !296)
!535 = !DIGlobalVariableExpression(var: !536, expr: !DIExpression())
!536 = distinct !DIGlobalVariable(name: "n_calls", scope: !537, file: !445, line: 666, type: !156, isLocal: true, isDefinition: true)
!537 = distinct !DISubprogram(name: "fchmod", scope: !445, file: !445, line: 665, type: !538, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!538 = !DISubroutineType(types: !539)
!539 = !{!156, !156, !440}
!540 = !DIGlobalVariableExpression(var: !541, expr: !DIExpression())
!541 = distinct !DIGlobalVariable(name: "n_calls", scope: !542, file: !445, line: 752, type: !156, isLocal: true, isDefinition: true)
!542 = distinct !DISubprogram(name: "__fd_ftruncate", scope: !445, file: !445, line: 751, type: !543, scopeLine: 751, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!543 = !DISubroutineType(types: !544)
!544 = !{!156, !156, !433}
!545 = distinct !DICompileUnit(language: DW_LANG_C89, file: !546, producer: "Ubuntu clang version 12.0.0-3ubuntu1~20.04.5", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !157, retainedTypes: !547, splitDebugInlining: false, nameTableKind: None)
!546 = !DIFile(filename: "/home/laboni/kleeEnv/klee/runtime/POSIX/klee_init_env.c", directory: "/home/laboni/kleeEnv/klee_build/runtime/POSIX")
!547 = !{!548}
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!549 = distinct !DICompileUnit(language: DW_LANG_C89, file: !550, producer: "Ubuntu clang version 12.0.0-3ubuntu1~20.04.5", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !157, retainedTypes: !551, splitDebugInlining: false, nameTableKind: None)
!550 = !DIFile(filename: "/home/laboni/kleeEnv/klee/runtime/Intrinsic/klee_range.c", directory: "/home/laboni/kleeEnv/klee_build/runtime/Intrinsic")
!551 = !{!7}
!552 = distinct !DICompileUnit(language: DW_LANG_C89, file: !553, producer: "Ubuntu clang version 12.0.0-3ubuntu1~20.04.5", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !157, retainedTypes: !554, splitDebugInlining: false, nameTableKind: None)
!553 = !DIFile(filename: "/home/laboni/kleeEnv/klee/runtime/POSIX/fd_64.c", directory: "/home/laboni/kleeEnv/klee_build/runtime/POSIX")
!554 = !{!555, !577}
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !371, line: 119, size: 1152, elements: !557)
!557 = !{!558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !574, !575, !576}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !556, file: !371, line: 121, baseType: !374, size: 64)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !556, file: !371, line: 123, baseType: !378, size: 64, offset: 64)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !556, file: !371, line: 124, baseType: !380, size: 64, offset: 128)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !556, file: !371, line: 125, baseType: !382, size: 32, offset: 192)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !556, file: !371, line: 132, baseType: !384, size: 32, offset: 224)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !556, file: !371, line: 133, baseType: !386, size: 32, offset: 256)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !556, file: !371, line: 135, baseType: !156, size: 32, offset: 288)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !556, file: !371, line: 136, baseType: !374, size: 64, offset: 320)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !556, file: !371, line: 137, baseType: !390, size: 64, offset: 384)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !556, file: !371, line: 143, baseType: !393, size: 64, offset: 448)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !556, file: !371, line: 144, baseType: !395, size: 64, offset: 512)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !556, file: !371, line: 152, baseType: !570, size: 128, offset: 576)
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !398, line: 10, size: 128, elements: !571)
!571 = !{!572, !573}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !570, file: !398, line: 12, baseType: !401, size: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !570, file: !398, line: 16, baseType: !403, size: 64, offset: 64)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !556, file: !371, line: 153, baseType: !570, size: 128, offset: 704)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !556, file: !371, line: 154, baseType: !570, size: 128, offset: 832)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !556, file: !371, line: 164, baseType: !407, size: 192, offset: 960)
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent64", file: !474, line: 37, size: 2240, elements: !579)
!579 = !{!580, !581, !582, !583, !584}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !578, file: !474, line: 39, baseType: !378, size: 64)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !578, file: !474, line: 40, baseType: !435, size: 64, offset: 64)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !578, file: !474, line: 41, baseType: !77, size: 16, offset: 128)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !578, file: !474, line: 42, baseType: !61, size: 8, offset: 144)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !578, file: !474, line: 43, baseType: !481, size: 2048, offset: 152)
!585 = distinct !DICompileUnit(language: DW_LANG_C99, file: !586, producer: "Ubuntu clang version 12.0.0-3ubuntu1~20.04.5", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !157, splitDebugInlining: false, nameTableKind: None)
!586 = !DIFile(filename: "/home/laboni/kleeEnv/klee/runtime/Freestanding/memcpy.c", directory: "/home/laboni/kleeEnv/klee_build/runtime/Freestanding")
!587 = distinct !DICompileUnit(language: DW_LANG_C99, file: !588, producer: "Ubuntu clang version 12.0.0-3ubuntu1~20.04.5", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !157, splitDebugInlining: false, nameTableKind: None)
!588 = !DIFile(filename: "/home/laboni/kleeEnv/klee/runtime/Freestanding/memset.c", directory: "/home/laboni/kleeEnv/klee_build/runtime/Freestanding")
!589 = distinct !DICompileUnit(language: DW_LANG_C89, file: !590, producer: "Ubuntu clang version 12.0.0-3ubuntu1~20.04.5", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !157, splitDebugInlining: false, nameTableKind: None)
!590 = !DIFile(filename: "/home/laboni/kleeEnv/klee/runtime/Intrinsic/klee_overshift_check.c", directory: "/home/laboni/kleeEnv/klee_build/runtime/Intrinsic")
!591 = !{i32 7, !"Dwarf Version", i32 4}
!592 = !{i32 2, !"Debug Info Version", i32 3}
!593 = !{i32 1, !"wchar_size", i32 4}
!594 = !{!"Ubuntu clang version 12.0.0-3ubuntu1~20.04.5"}
!595 = !{!"Ubuntu clang version 11.0.0-2~ubuntu20.04.1"}
!596 = distinct !DISubprogram(name: "klee_init_env", scope: !597, file: !597, line: 83, type: !598, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !545, retainedNodes: !157)
!597 = !DIFile(filename: "klee/runtime/POSIX/klee_init_env.c", directory: "/home/laboni/kleeEnv")
!598 = !DISubroutineType(types: !599)
!599 = !{null, !415, !600}
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!601 = !DILocalVariable(name: "argcPtr", arg: 1, scope: !596, file: !597, line: 83, type: !415)
!602 = !DILocation(line: 83, column: 25, scope: !596)
!603 = !DILocalVariable(name: "argvPtr", arg: 2, scope: !596, file: !597, line: 83, type: !600)
!604 = !DILocation(line: 83, column: 42, scope: !596)
!605 = !DILocalVariable(name: "argc", scope: !596, file: !597, line: 84, type: !156)
!606 = !DILocation(line: 84, column: 7, scope: !596)
!607 = !DILocation(line: 84, column: 15, scope: !596)
!608 = !DILocation(line: 84, column: 14, scope: !596)
!609 = !DILocalVariable(name: "argv", scope: !596, file: !597, line: 85, type: !548)
!610 = !DILocation(line: 85, column: 10, scope: !596)
!611 = !DILocation(line: 85, column: 18, scope: !596)
!612 = !DILocation(line: 85, column: 17, scope: !596)
!613 = !DILocalVariable(name: "new_argc", scope: !596, file: !597, line: 87, type: !156)
!614 = !DILocation(line: 87, column: 7, scope: !596)
!615 = !DILocalVariable(name: "n_args", scope: !596, file: !597, line: 87, type: !156)
!616 = !DILocation(line: 87, column: 21, scope: !596)
!617 = !DILocalVariable(name: "new_argv", scope: !596, file: !597, line: 88, type: !618)
!618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !367, size: 65536, elements: !619)
!619 = !{!620}
!620 = !DISubrange(count: 1024)
!621 = !DILocation(line: 88, column: 9, scope: !596)
!622 = !DILocalVariable(name: "max_len", scope: !596, file: !597, line: 89, type: !7)
!623 = !DILocation(line: 89, column: 12, scope: !596)
!624 = !DILocalVariable(name: "min_argvs", scope: !596, file: !597, line: 89, type: !7)
!625 = !DILocation(line: 89, column: 21, scope: !596)
!626 = !DILocalVariable(name: "max_argvs", scope: !596, file: !597, line: 89, type: !7)
!627 = !DILocation(line: 89, column: 32, scope: !596)
!628 = !DILocalVariable(name: "sym_files", scope: !596, file: !597, line: 90, type: !7)
!629 = !DILocation(line: 90, column: 12, scope: !596)
!630 = !DILocalVariable(name: "sym_file_len", scope: !596, file: !597, line: 90, type: !7)
!631 = !DILocation(line: 90, column: 27, scope: !596)
!632 = !DILocalVariable(name: "sym_stdin_len", scope: !596, file: !597, line: 91, type: !7)
!633 = !DILocation(line: 91, column: 12, scope: !596)
!634 = !DILocalVariable(name: "sym_stdout_flag", scope: !596, file: !597, line: 92, type: !156)
!635 = !DILocation(line: 92, column: 7, scope: !596)
!636 = !DILocalVariable(name: "save_all_writes_flag", scope: !596, file: !597, line: 93, type: !156)
!637 = !DILocation(line: 93, column: 7, scope: !596)
!638 = !DILocalVariable(name: "fd_fail", scope: !596, file: !597, line: 94, type: !156)
!639 = !DILocation(line: 94, column: 7, scope: !596)
!640 = !DILocalVariable(name: "final_argv", scope: !596, file: !597, line: 95, type: !548)
!641 = !DILocation(line: 95, column: 10, scope: !596)
!642 = !DILocalVariable(name: "sym_arg_name", scope: !596, file: !597, line: 96, type: !643)
!643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 48, elements: !644)
!644 = !{!645}
!645 = !DISubrange(count: 6)
!646 = !DILocation(line: 96, column: 8, scope: !596)
!647 = !DILocalVariable(name: "sym_arg_num", scope: !596, file: !597, line: 97, type: !7)
!648 = !DILocation(line: 97, column: 12, scope: !596)
!649 = !DILocalVariable(name: "k", scope: !596, file: !597, line: 98, type: !156)
!650 = !DILocation(line: 98, column: 7, scope: !596)
!651 = !DILocalVariable(name: "i", scope: !596, file: !597, line: 98, type: !156)
!652 = !DILocation(line: 98, column: 14, scope: !596)
!653 = !DILocation(line: 100, column: 3, scope: !596)
!654 = !DILocation(line: 100, column: 19, scope: !596)
!655 = !DILocation(line: 103, column: 7, scope: !656)
!656 = distinct !DILexicalBlock(scope: !596, file: !597, line: 103, column: 7)
!657 = !DILocation(line: 103, column: 12, scope: !656)
!658 = !DILocation(line: 103, column: 17, scope: !656)
!659 = !DILocation(line: 103, column: 28, scope: !656)
!660 = !DILocation(line: 103, column: 20, scope: !656)
!661 = !DILocation(line: 103, column: 7, scope: !596)
!662 = !DILocation(line: 104, column: 5, scope: !663)
!663 = distinct !DILexicalBlock(scope: !656, file: !597, line: 103, column: 48)
!664 = !DILocation(line: 119, column: 3, scope: !663)
!665 = !DILocation(line: 121, column: 3, scope: !596)
!666 = !DILocation(line: 121, column: 10, scope: !596)
!667 = !DILocation(line: 121, column: 14, scope: !596)
!668 = !DILocation(line: 121, column: 12, scope: !596)
!669 = !DILocation(line: 122, column: 17, scope: !670)
!670 = distinct !DILexicalBlock(scope: !671, file: !597, line: 122, column: 9)
!671 = distinct !DILexicalBlock(scope: !596, file: !597, line: 121, column: 20)
!672 = !DILocation(line: 122, column: 22, scope: !670)
!673 = !DILocation(line: 122, column: 9, scope: !670)
!674 = !DILocation(line: 122, column: 39, scope: !670)
!675 = !DILocation(line: 122, column: 50, scope: !670)
!676 = !DILocation(line: 122, column: 55, scope: !670)
!677 = !DILocation(line: 122, column: 42, scope: !670)
!678 = !DILocation(line: 122, column: 9, scope: !671)
!679 = !DILocalVariable(name: "msg", scope: !680, file: !597, line: 123, type: !533)
!680 = distinct !DILexicalBlock(scope: !670, file: !597, line: 122, column: 72)
!681 = !DILocation(line: 123, column: 19, scope: !680)
!682 = !DILocation(line: 124, column: 11, scope: !683)
!683 = distinct !DILexicalBlock(scope: !680, file: !597, line: 124, column: 11)
!684 = !DILocation(line: 124, column: 18, scope: !683)
!685 = !DILocation(line: 124, column: 15, scope: !683)
!686 = !DILocation(line: 124, column: 11, scope: !680)
!687 = !DILocation(line: 125, column: 22, scope: !683)
!688 = !DILocation(line: 125, column: 9, scope: !683)
!689 = !DILocation(line: 127, column: 30, scope: !680)
!690 = !DILocation(line: 127, column: 36, scope: !680)
!691 = !DILocation(line: 127, column: 41, scope: !680)
!692 = !DILocation(line: 127, column: 17, scope: !680)
!693 = !DILocation(line: 127, column: 15, scope: !680)
!694 = !DILocation(line: 129, column: 11, scope: !695)
!695 = distinct !DILexicalBlock(scope: !680, file: !597, line: 129, column: 11)
!696 = !DILocation(line: 129, column: 23, scope: !695)
!697 = !DILocation(line: 129, column: 11, scope: !680)
!698 = !DILocation(line: 130, column: 9, scope: !695)
!699 = !DILocation(line: 132, column: 31, scope: !680)
!700 = !DILocation(line: 132, column: 43, scope: !680)
!701 = !DILocation(line: 132, column: 29, scope: !680)
!702 = !DILocation(line: 132, column: 25, scope: !680)
!703 = !DILocation(line: 132, column: 7, scope: !680)
!704 = !DILocation(line: 132, column: 23, scope: !680)
!705 = !DILocation(line: 133, column: 31, scope: !680)
!706 = !DILocation(line: 133, column: 43, scope: !680)
!707 = !DILocation(line: 133, column: 29, scope: !680)
!708 = !DILocation(line: 133, column: 25, scope: !680)
!709 = !DILocation(line: 133, column: 7, scope: !680)
!710 = !DILocation(line: 133, column: 23, scope: !680)
!711 = !DILocation(line: 134, column: 18, scope: !680)
!712 = !DILocation(line: 135, column: 28, scope: !680)
!713 = !DILocation(line: 135, column: 52, scope: !680)
!714 = !DILocation(line: 135, column: 61, scope: !680)
!715 = !DILocation(line: 135, column: 38, scope: !680)
!716 = !DILocation(line: 135, column: 7, scope: !680)
!717 = !DILocation(line: 137, column: 5, scope: !680)
!718 = !DILocation(line: 137, column: 24, scope: !719)
!719 = distinct !DILexicalBlock(scope: !670, file: !597, line: 137, column: 16)
!720 = !DILocation(line: 137, column: 29, scope: !719)
!721 = !DILocation(line: 137, column: 16, scope: !719)
!722 = !DILocation(line: 137, column: 47, scope: !719)
!723 = !DILocation(line: 138, column: 24, scope: !719)
!724 = !DILocation(line: 138, column: 29, scope: !719)
!725 = !DILocation(line: 138, column: 16, scope: !719)
!726 = !DILocation(line: 137, column: 16, scope: !670)
!727 = !DILocalVariable(name: "msg", scope: !728, file: !597, line: 139, type: !533)
!728 = distinct !DILexicalBlock(scope: !719, file: !597, line: 138, column: 47)
!729 = !DILocation(line: 139, column: 19, scope: !728)
!730 = !DILocation(line: 142, column: 11, scope: !731)
!731 = distinct !DILexicalBlock(scope: !728, file: !597, line: 142, column: 11)
!732 = !DILocation(line: 142, column: 13, scope: !731)
!733 = !DILocation(line: 142, column: 20, scope: !731)
!734 = !DILocation(line: 142, column: 17, scope: !731)
!735 = !DILocation(line: 142, column: 11, scope: !728)
!736 = !DILocation(line: 143, column: 22, scope: !731)
!737 = !DILocation(line: 143, column: 9, scope: !731)
!738 = !DILocation(line: 145, column: 8, scope: !728)
!739 = !DILocation(line: 146, column: 32, scope: !728)
!740 = !DILocation(line: 146, column: 38, scope: !728)
!741 = !DILocation(line: 146, column: 43, scope: !728)
!742 = !DILocation(line: 146, column: 19, scope: !728)
!743 = !DILocation(line: 146, column: 17, scope: !728)
!744 = !DILocation(line: 147, column: 32, scope: !728)
!745 = !DILocation(line: 147, column: 38, scope: !728)
!746 = !DILocation(line: 147, column: 43, scope: !728)
!747 = !DILocation(line: 147, column: 19, scope: !728)
!748 = !DILocation(line: 147, column: 17, scope: !728)
!749 = !DILocation(line: 148, column: 30, scope: !728)
!750 = !DILocation(line: 148, column: 36, scope: !728)
!751 = !DILocation(line: 148, column: 41, scope: !728)
!752 = !DILocation(line: 148, column: 17, scope: !728)
!753 = !DILocation(line: 148, column: 15, scope: !728)
!754 = !DILocation(line: 150, column: 12, scope: !755)
!755 = distinct !DILexicalBlock(scope: !728, file: !597, line: 150, column: 11)
!756 = !DILocation(line: 150, column: 24, scope: !755)
!757 = !DILocation(line: 150, column: 22, scope: !755)
!758 = !DILocation(line: 150, column: 35, scope: !755)
!759 = !DILocation(line: 150, column: 39, scope: !755)
!760 = !DILocation(line: 150, column: 49, scope: !755)
!761 = !DILocation(line: 150, column: 54, scope: !755)
!762 = !DILocation(line: 151, column: 9, scope: !755)
!763 = !DILocation(line: 153, column: 27, scope: !728)
!764 = !DILocation(line: 153, column: 38, scope: !728)
!765 = !DILocation(line: 153, column: 48, scope: !728)
!766 = !DILocation(line: 153, column: 16, scope: !728)
!767 = !DILocation(line: 153, column: 14, scope: !728)
!768 = !DILocation(line: 155, column: 11, scope: !769)
!769 = distinct !DILexicalBlock(scope: !728, file: !597, line: 155, column: 11)
!770 = !DILocation(line: 155, column: 25, scope: !769)
!771 = !DILocation(line: 155, column: 23, scope: !769)
!772 = !DILocation(line: 155, column: 35, scope: !769)
!773 = !DILocation(line: 155, column: 11, scope: !728)
!774 = !DILocation(line: 156, column: 9, scope: !769)
!775 = !DILocation(line: 158, column: 14, scope: !776)
!776 = distinct !DILexicalBlock(scope: !728, file: !597, line: 158, column: 7)
!777 = !DILocation(line: 158, column: 12, scope: !776)
!778 = !DILocation(line: 158, column: 19, scope: !779)
!779 = distinct !DILexicalBlock(scope: !776, file: !597, line: 158, column: 7)
!780 = !DILocation(line: 158, column: 23, scope: !779)
!781 = !DILocation(line: 158, column: 21, scope: !779)
!782 = !DILocation(line: 158, column: 7, scope: !776)
!783 = !DILocation(line: 159, column: 33, scope: !784)
!784 = distinct !DILexicalBlock(scope: !779, file: !597, line: 158, column: 36)
!785 = !DILocation(line: 159, column: 45, scope: !784)
!786 = !DILocation(line: 159, column: 31, scope: !784)
!787 = !DILocation(line: 159, column: 27, scope: !784)
!788 = !DILocation(line: 159, column: 9, scope: !784)
!789 = !DILocation(line: 159, column: 25, scope: !784)
!790 = !DILocation(line: 160, column: 33, scope: !784)
!791 = !DILocation(line: 160, column: 45, scope: !784)
!792 = !DILocation(line: 160, column: 31, scope: !784)
!793 = !DILocation(line: 160, column: 27, scope: !784)
!794 = !DILocation(line: 160, column: 9, scope: !784)
!795 = !DILocation(line: 160, column: 25, scope: !784)
!796 = !DILocation(line: 161, column: 20, scope: !784)
!797 = !DILocation(line: 163, column: 30, scope: !784)
!798 = !DILocation(line: 163, column: 54, scope: !784)
!799 = !DILocation(line: 163, column: 63, scope: !784)
!800 = !DILocation(line: 163, column: 40, scope: !784)
!801 = !DILocation(line: 163, column: 9, scope: !784)
!802 = !DILocation(line: 158, column: 32, scope: !779)
!803 = !DILocation(line: 158, column: 7, scope: !779)
!804 = distinct !{!804, !782, !805}
!805 = !DILocation(line: 165, column: 7, scope: !776)
!806 = !DILocation(line: 166, column: 24, scope: !807)
!807 = distinct !DILexicalBlock(scope: !719, file: !597, line: 166, column: 16)
!808 = !DILocation(line: 166, column: 29, scope: !807)
!809 = !DILocation(line: 166, column: 16, scope: !807)
!810 = !DILocation(line: 166, column: 48, scope: !807)
!811 = !DILocation(line: 167, column: 24, scope: !807)
!812 = !DILocation(line: 167, column: 29, scope: !807)
!813 = !DILocation(line: 167, column: 16, scope: !807)
!814 = !DILocation(line: 166, column: 16, scope: !719)
!815 = !DILocalVariable(name: "msg", scope: !816, file: !597, line: 168, type: !533)
!816 = distinct !DILexicalBlock(scope: !807, file: !597, line: 167, column: 48)
!817 = !DILocation(line: 168, column: 19, scope: !816)
!818 = !DILocation(line: 171, column: 11, scope: !819)
!819 = distinct !DILexicalBlock(scope: !816, file: !597, line: 171, column: 11)
!820 = !DILocation(line: 171, column: 13, scope: !819)
!821 = !DILocation(line: 171, column: 20, scope: !819)
!822 = !DILocation(line: 171, column: 17, scope: !819)
!823 = !DILocation(line: 171, column: 11, scope: !816)
!824 = !DILocation(line: 172, column: 22, scope: !819)
!825 = !DILocation(line: 172, column: 9, scope: !819)
!826 = !DILocation(line: 174, column: 11, scope: !827)
!827 = distinct !DILexicalBlock(scope: !816, file: !597, line: 174, column: 11)
!828 = !DILocation(line: 174, column: 21, scope: !827)
!829 = !DILocation(line: 174, column: 11, scope: !816)
!830 = !DILocation(line: 175, column: 9, scope: !827)
!831 = !DILocation(line: 177, column: 8, scope: !816)
!832 = !DILocation(line: 178, column: 32, scope: !816)
!833 = !DILocation(line: 178, column: 38, scope: !816)
!834 = !DILocation(line: 178, column: 43, scope: !816)
!835 = !DILocation(line: 178, column: 19, scope: !816)
!836 = !DILocation(line: 178, column: 17, scope: !816)
!837 = !DILocation(line: 179, column: 35, scope: !816)
!838 = !DILocation(line: 179, column: 41, scope: !816)
!839 = !DILocation(line: 179, column: 46, scope: !816)
!840 = !DILocation(line: 179, column: 22, scope: !816)
!841 = !DILocation(line: 179, column: 20, scope: !816)
!842 = !DILocation(line: 181, column: 11, scope: !843)
!843 = distinct !DILexicalBlock(scope: !816, file: !597, line: 181, column: 11)
!844 = !DILocation(line: 181, column: 21, scope: !843)
!845 = !DILocation(line: 181, column: 11, scope: !816)
!846 = !DILocation(line: 182, column: 9, scope: !843)
!847 = !DILocation(line: 185, column: 11, scope: !848)
!848 = distinct !DILexicalBlock(scope: !816, file: !597, line: 185, column: 11)
!849 = !DILocation(line: 185, column: 24, scope: !848)
!850 = !DILocation(line: 185, column: 11, scope: !816)
!851 = !DILocation(line: 186, column: 9, scope: !848)
!852 = !DILocation(line: 189, column: 24, scope: !853)
!853 = distinct !DILexicalBlock(scope: !807, file: !597, line: 189, column: 16)
!854 = !DILocation(line: 189, column: 29, scope: !853)
!855 = !DILocation(line: 189, column: 16, scope: !853)
!856 = !DILocation(line: 189, column: 48, scope: !853)
!857 = !DILocation(line: 190, column: 24, scope: !853)
!858 = !DILocation(line: 190, column: 29, scope: !853)
!859 = !DILocation(line: 190, column: 16, scope: !853)
!860 = !DILocation(line: 189, column: 16, scope: !807)
!861 = !DILocalVariable(name: "msg", scope: !862, file: !597, line: 191, type: !533)
!862 = distinct !DILexicalBlock(scope: !853, file: !597, line: 190, column: 48)
!863 = !DILocation(line: 191, column: 19, scope: !862)
!864 = !DILocation(line: 194, column: 11, scope: !865)
!865 = distinct !DILexicalBlock(scope: !862, file: !597, line: 194, column: 11)
!866 = !DILocation(line: 194, column: 18, scope: !865)
!867 = !DILocation(line: 194, column: 15, scope: !865)
!868 = !DILocation(line: 194, column: 11, scope: !862)
!869 = !DILocation(line: 195, column: 22, scope: !865)
!870 = !DILocation(line: 195, column: 9, scope: !865)
!871 = !DILocation(line: 197, column: 36, scope: !862)
!872 = !DILocation(line: 197, column: 42, scope: !862)
!873 = !DILocation(line: 197, column: 47, scope: !862)
!874 = !DILocation(line: 197, column: 23, scope: !862)
!875 = !DILocation(line: 197, column: 21, scope: !862)
!876 = !DILocation(line: 198, column: 5, scope: !862)
!877 = !DILocation(line: 198, column: 24, scope: !878)
!878 = distinct !DILexicalBlock(scope: !853, file: !597, line: 198, column: 16)
!879 = !DILocation(line: 198, column: 29, scope: !878)
!880 = !DILocation(line: 198, column: 16, scope: !878)
!881 = !DILocation(line: 198, column: 49, scope: !878)
!882 = !DILocation(line: 199, column: 24, scope: !878)
!883 = !DILocation(line: 199, column: 29, scope: !878)
!884 = !DILocation(line: 199, column: 16, scope: !878)
!885 = !DILocation(line: 198, column: 16, scope: !853)
!886 = !DILocation(line: 200, column: 23, scope: !887)
!887 = distinct !DILexicalBlock(scope: !878, file: !597, line: 199, column: 49)
!888 = !DILocation(line: 201, column: 8, scope: !887)
!889 = !DILocation(line: 202, column: 5, scope: !887)
!890 = !DILocation(line: 202, column: 24, scope: !891)
!891 = distinct !DILexicalBlock(scope: !878, file: !597, line: 202, column: 16)
!892 = !DILocation(line: 202, column: 29, scope: !891)
!893 = !DILocation(line: 202, column: 16, scope: !891)
!894 = !DILocation(line: 202, column: 54, scope: !891)
!895 = !DILocation(line: 203, column: 24, scope: !891)
!896 = !DILocation(line: 203, column: 29, scope: !891)
!897 = !DILocation(line: 203, column: 16, scope: !891)
!898 = !DILocation(line: 202, column: 16, scope: !878)
!899 = !DILocation(line: 204, column: 28, scope: !900)
!900 = distinct !DILexicalBlock(scope: !891, file: !597, line: 203, column: 54)
!901 = !DILocation(line: 205, column: 8, scope: !900)
!902 = !DILocation(line: 206, column: 5, scope: !900)
!903 = !DILocation(line: 206, column: 24, scope: !904)
!904 = distinct !DILexicalBlock(scope: !891, file: !597, line: 206, column: 16)
!905 = !DILocation(line: 206, column: 29, scope: !904)
!906 = !DILocation(line: 206, column: 16, scope: !904)
!907 = !DILocation(line: 206, column: 46, scope: !904)
!908 = !DILocation(line: 206, column: 57, scope: !904)
!909 = !DILocation(line: 206, column: 62, scope: !904)
!910 = !DILocation(line: 206, column: 49, scope: !904)
!911 = !DILocation(line: 206, column: 16, scope: !891)
!912 = !DILocation(line: 207, column: 15, scope: !913)
!913 = distinct !DILexicalBlock(scope: !904, file: !597, line: 206, column: 79)
!914 = !DILocation(line: 208, column: 8, scope: !913)
!915 = !DILocation(line: 209, column: 5, scope: !913)
!916 = !DILocation(line: 209, column: 24, scope: !917)
!917 = distinct !DILexicalBlock(scope: !904, file: !597, line: 209, column: 16)
!918 = !DILocation(line: 209, column: 29, scope: !917)
!919 = !DILocation(line: 209, column: 16, scope: !917)
!920 = !DILocation(line: 209, column: 48, scope: !917)
!921 = !DILocation(line: 209, column: 59, scope: !917)
!922 = !DILocation(line: 209, column: 64, scope: !917)
!923 = !DILocation(line: 209, column: 51, scope: !917)
!924 = !DILocation(line: 209, column: 16, scope: !904)
!925 = !DILocation(line: 210, column: 9, scope: !926)
!926 = distinct !DILexicalBlock(scope: !917, file: !597, line: 209, column: 83)
!927 = !DILocation(line: 211, column: 5, scope: !926)
!928 = !DILocation(line: 211, column: 24, scope: !929)
!929 = distinct !DILexicalBlock(scope: !917, file: !597, line: 211, column: 16)
!930 = !DILocation(line: 211, column: 29, scope: !929)
!931 = !DILocation(line: 211, column: 16, scope: !929)
!932 = !DILocation(line: 211, column: 47, scope: !929)
!933 = !DILocation(line: 212, column: 24, scope: !929)
!934 = !DILocation(line: 212, column: 29, scope: !929)
!935 = !DILocation(line: 212, column: 16, scope: !929)
!936 = !DILocation(line: 211, column: 16, scope: !917)
!937 = !DILocalVariable(name: "msg", scope: !938, file: !597, line: 213, type: !533)
!938 = distinct !DILexicalBlock(scope: !929, file: !597, line: 212, column: 47)
!939 = !DILocation(line: 213, column: 19, scope: !938)
!940 = !DILocation(line: 214, column: 11, scope: !941)
!941 = distinct !DILexicalBlock(scope: !938, file: !597, line: 214, column: 11)
!942 = !DILocation(line: 214, column: 18, scope: !941)
!943 = !DILocation(line: 214, column: 15, scope: !941)
!944 = !DILocation(line: 214, column: 11, scope: !938)
!945 = !DILocation(line: 215, column: 22, scope: !941)
!946 = !DILocation(line: 215, column: 9, scope: !941)
!947 = !DILocation(line: 217, column: 30, scope: !938)
!948 = !DILocation(line: 217, column: 36, scope: !938)
!949 = !DILocation(line: 217, column: 41, scope: !938)
!950 = !DILocation(line: 217, column: 17, scope: !938)
!951 = !DILocation(line: 217, column: 15, scope: !938)
!952 = !DILocation(line: 218, column: 5, scope: !938)
!953 = !DILocation(line: 220, column: 28, scope: !954)
!954 = distinct !DILexicalBlock(scope: !929, file: !597, line: 218, column: 12)
!955 = !DILocation(line: 220, column: 38, scope: !954)
!956 = !DILocation(line: 220, column: 44, scope: !954)
!957 = !DILocation(line: 220, column: 7, scope: !954)
!958 = distinct !{!958, !665, !959}
!959 = !DILocation(line: 222, column: 3, scope: !596)
!960 = !DILocation(line: 224, column: 33, scope: !596)
!961 = !DILocation(line: 224, column: 42, scope: !596)
!962 = !DILocation(line: 224, column: 32, scope: !596)
!963 = !DILocation(line: 224, column: 47, scope: !596)
!964 = !DILocation(line: 224, column: 25, scope: !596)
!965 = !DILocation(line: 224, column: 16, scope: !596)
!966 = !DILocation(line: 224, column: 14, scope: !596)
!967 = !DILocation(line: 225, column: 8, scope: !968)
!968 = distinct !DILexicalBlock(scope: !596, file: !597, line: 225, column: 7)
!969 = !DILocation(line: 225, column: 7, scope: !596)
!970 = !DILocation(line: 226, column: 5, scope: !968)
!971 = !DILocation(line: 227, column: 20, scope: !596)
!972 = !DILocation(line: 227, column: 3, scope: !596)
!973 = !DILocation(line: 228, column: 10, scope: !596)
!974 = !DILocation(line: 228, column: 3, scope: !596)
!975 = !DILocation(line: 228, column: 32, scope: !596)
!976 = !DILocation(line: 228, column: 41, scope: !596)
!977 = !DILocation(line: 229, column: 3, scope: !596)
!978 = !DILocation(line: 229, column: 14, scope: !596)
!979 = !DILocation(line: 229, column: 24, scope: !596)
!980 = !DILocation(line: 231, column: 14, scope: !596)
!981 = !DILocation(line: 231, column: 4, scope: !596)
!982 = !DILocation(line: 231, column: 12, scope: !596)
!983 = !DILocation(line: 232, column: 14, scope: !596)
!984 = !DILocation(line: 232, column: 4, scope: !596)
!985 = !DILocation(line: 232, column: 12, scope: !596)
!986 = !DILocation(line: 234, column: 17, scope: !596)
!987 = !DILocation(line: 234, column: 28, scope: !596)
!988 = !DILocation(line: 234, column: 42, scope: !596)
!989 = !DILocation(line: 234, column: 57, scope: !596)
!990 = !DILocation(line: 235, column: 17, scope: !596)
!991 = !DILocation(line: 235, column: 39, scope: !596)
!992 = !DILocation(line: 234, column: 3, scope: !596)
!993 = !DILocation(line: 236, column: 1, scope: !596)
!994 = distinct !DISubprogram(name: "__streq", scope: !597, file: !597, line: 49, type: !995, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !545, retainedNodes: !157)
!995 = !DISubroutineType(types: !996)
!996 = !{!156, !533, !533}
!997 = !DILocalVariable(name: "a", arg: 1, scope: !994, file: !597, line: 49, type: !533)
!998 = !DILocation(line: 49, column: 32, scope: !994)
!999 = !DILocalVariable(name: "b", arg: 2, scope: !994, file: !597, line: 49, type: !533)
!1000 = !DILocation(line: 49, column: 47, scope: !994)
!1001 = !DILocation(line: 50, column: 3, scope: !994)
!1002 = !DILocation(line: 50, column: 11, scope: !994)
!1003 = !DILocation(line: 50, column: 10, scope: !994)
!1004 = !DILocation(line: 50, column: 17, scope: !994)
!1005 = !DILocation(line: 50, column: 16, scope: !994)
!1006 = !DILocation(line: 50, column: 13, scope: !994)
!1007 = !DILocation(line: 51, column: 11, scope: !1008)
!1008 = distinct !DILexicalBlock(scope: !1009, file: !597, line: 51, column: 9)
!1009 = distinct !DILexicalBlock(scope: !994, file: !597, line: 50, column: 20)
!1010 = !DILocation(line: 51, column: 10, scope: !1008)
!1011 = !DILocation(line: 51, column: 9, scope: !1009)
!1012 = !DILocation(line: 52, column: 7, scope: !1008)
!1013 = !DILocation(line: 53, column: 6, scope: !1009)
!1014 = !DILocation(line: 54, column: 6, scope: !1009)
!1015 = distinct !{!1015, !1001, !1016}
!1016 = !DILocation(line: 55, column: 3, scope: !994)
!1017 = !DILocation(line: 56, column: 3, scope: !994)
!1018 = !DILocation(line: 57, column: 1, scope: !994)
!1019 = distinct !DISubprogram(name: "__emit_error", scope: !597, file: !597, line: 20, type: !1020, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !545, retainedNodes: !157)
!1020 = !DISubroutineType(types: !1021)
!1021 = !{null, !533}
!1022 = !DILocalVariable(name: "msg", arg: 1, scope: !1019, file: !597, line: 20, type: !533)
!1023 = !DILocation(line: 20, column: 38, scope: !1019)
!1024 = !DILocation(line: 21, column: 41, scope: !1019)
!1025 = !DILocation(line: 21, column: 3, scope: !1019)
!1026 = distinct !DISubprogram(name: "__str_to_int", scope: !597, file: !597, line: 27, type: !1027, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !545, retainedNodes: !157)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{!391, !367, !533}
!1029 = !DILocalVariable(name: "s", arg: 1, scope: !1026, file: !597, line: 27, type: !367)
!1030 = !DILocation(line: 27, column: 36, scope: !1026)
!1031 = !DILocalVariable(name: "error_msg", arg: 2, scope: !1026, file: !597, line: 27, type: !533)
!1032 = !DILocation(line: 27, column: 51, scope: !1026)
!1033 = !DILocalVariable(name: "res", scope: !1026, file: !597, line: 28, type: !391)
!1034 = !DILocation(line: 28, column: 12, scope: !1026)
!1035 = !DILocalVariable(name: "c", scope: !1026, file: !597, line: 29, type: !296)
!1036 = !DILocation(line: 29, column: 8, scope: !1026)
!1037 = !DILocation(line: 31, column: 9, scope: !1038)
!1038 = distinct !DILexicalBlock(scope: !1026, file: !597, line: 31, column: 7)
!1039 = !DILocation(line: 31, column: 8, scope: !1038)
!1040 = !DILocation(line: 31, column: 7, scope: !1026)
!1041 = !DILocation(line: 32, column: 18, scope: !1038)
!1042 = !DILocation(line: 32, column: 5, scope: !1038)
!1043 = !DILocation(line: 34, column: 3, scope: !1026)
!1044 = !DILocation(line: 34, column: 17, scope: !1026)
!1045 = !DILocation(line: 34, column: 15, scope: !1026)
!1046 = !DILocation(line: 34, column: 13, scope: !1026)
!1047 = !DILocation(line: 35, column: 9, scope: !1048)
!1048 = distinct !DILexicalBlock(scope: !1049, file: !597, line: 35, column: 9)
!1049 = distinct !DILexicalBlock(scope: !1026, file: !597, line: 34, column: 22)
!1050 = !DILocation(line: 35, column: 11, scope: !1048)
!1051 = !DILocation(line: 35, column: 18, scope: !1048)
!1052 = !DILocation(line: 35, column: 21, scope: !1048)
!1053 = !DILocation(line: 35, column: 23, scope: !1048)
!1054 = !DILocation(line: 35, column: 9, scope: !1049)
!1055 = !DILocation(line: 36, column: 13, scope: !1056)
!1056 = distinct !DILexicalBlock(scope: !1048, file: !597, line: 35, column: 31)
!1057 = !DILocation(line: 36, column: 17, scope: !1056)
!1058 = !DILocation(line: 36, column: 25, scope: !1056)
!1059 = !DILocation(line: 36, column: 27, scope: !1056)
!1060 = !DILocation(line: 36, column: 24, scope: !1056)
!1061 = !DILocation(line: 36, column: 22, scope: !1056)
!1062 = !DILocation(line: 36, column: 11, scope: !1056)
!1063 = !DILocation(line: 37, column: 5, scope: !1056)
!1064 = !DILocation(line: 38, column: 20, scope: !1065)
!1065 = distinct !DILexicalBlock(scope: !1048, file: !597, line: 37, column: 12)
!1066 = !DILocation(line: 38, column: 7, scope: !1065)
!1067 = distinct !{!1067, !1043, !1068}
!1068 = !DILocation(line: 40, column: 3, scope: !1026)
!1069 = !DILocation(line: 41, column: 10, scope: !1026)
!1070 = !DILocation(line: 41, column: 3, scope: !1026)
!1071 = distinct !DISubprogram(name: "__add_arg", scope: !597, file: !597, line: 74, type: !1072, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !545, retainedNodes: !157)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{null, !415, !548, !367, !156}
!1074 = !DILocalVariable(name: "argc", arg: 1, scope: !1071, file: !597, line: 74, type: !415)
!1075 = !DILocation(line: 74, column: 28, scope: !1071)
!1076 = !DILocalVariable(name: "argv", arg: 2, scope: !1071, file: !597, line: 74, type: !548)
!1077 = !DILocation(line: 74, column: 41, scope: !1071)
!1078 = !DILocalVariable(name: "arg", arg: 3, scope: !1071, file: !597, line: 74, type: !367)
!1079 = !DILocation(line: 74, column: 53, scope: !1071)
!1080 = !DILocalVariable(name: "argcMax", arg: 4, scope: !1071, file: !597, line: 74, type: !156)
!1081 = !DILocation(line: 74, column: 62, scope: !1071)
!1082 = !DILocation(line: 75, column: 8, scope: !1083)
!1083 = distinct !DILexicalBlock(scope: !1071, file: !597, line: 75, column: 7)
!1084 = !DILocation(line: 75, column: 7, scope: !1083)
!1085 = !DILocation(line: 75, column: 14, scope: !1083)
!1086 = !DILocation(line: 75, column: 12, scope: !1083)
!1087 = !DILocation(line: 75, column: 7, scope: !1071)
!1088 = !DILocation(line: 76, column: 5, scope: !1089)
!1089 = distinct !DILexicalBlock(scope: !1083, file: !597, line: 75, column: 23)
!1090 = !DILocation(line: 77, column: 3, scope: !1089)
!1091 = !DILocation(line: 78, column: 19, scope: !1092)
!1092 = distinct !DILexicalBlock(scope: !1083, file: !597, line: 77, column: 10)
!1093 = !DILocation(line: 78, column: 5, scope: !1092)
!1094 = !DILocation(line: 78, column: 11, scope: !1092)
!1095 = !DILocation(line: 78, column: 10, scope: !1092)
!1096 = !DILocation(line: 78, column: 17, scope: !1092)
!1097 = !DILocation(line: 79, column: 7, scope: !1092)
!1098 = !DILocation(line: 79, column: 12, scope: !1092)
!1099 = !DILocation(line: 81, column: 1, scope: !1071)
!1100 = distinct !DISubprogram(name: "__get_sym_str", scope: !597, file: !597, line: 59, type: !1101, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !545, retainedNodes: !157)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{!367, !156, !367}
!1103 = !DILocalVariable(name: "numChars", arg: 1, scope: !1100, file: !597, line: 59, type: !156)
!1104 = !DILocation(line: 59, column: 32, scope: !1100)
!1105 = !DILocalVariable(name: "name", arg: 2, scope: !1100, file: !597, line: 59, type: !367)
!1106 = !DILocation(line: 59, column: 48, scope: !1100)
!1107 = !DILocalVariable(name: "i", scope: !1100, file: !597, line: 60, type: !156)
!1108 = !DILocation(line: 60, column: 7, scope: !1100)
!1109 = !DILocalVariable(name: "s", scope: !1100, file: !597, line: 61, type: !367)
!1110 = !DILocation(line: 61, column: 9, scope: !1100)
!1111 = !DILocation(line: 61, column: 20, scope: !1100)
!1112 = !DILocation(line: 61, column: 28, scope: !1100)
!1113 = !DILocation(line: 61, column: 13, scope: !1100)
!1114 = !DILocation(line: 62, column: 8, scope: !1115)
!1115 = distinct !DILexicalBlock(scope: !1100, file: !597, line: 62, column: 7)
!1116 = !DILocation(line: 62, column: 7, scope: !1100)
!1117 = !DILocation(line: 63, column: 5, scope: !1115)
!1118 = !DILocation(line: 64, column: 20, scope: !1100)
!1119 = !DILocation(line: 64, column: 3, scope: !1100)
!1120 = !DILocation(line: 65, column: 22, scope: !1100)
!1121 = !DILocation(line: 65, column: 25, scope: !1100)
!1122 = !DILocation(line: 65, column: 33, scope: !1100)
!1123 = !DILocation(line: 65, column: 37, scope: !1100)
!1124 = !DILocation(line: 65, column: 3, scope: !1100)
!1125 = !DILocation(line: 67, column: 9, scope: !1126)
!1126 = distinct !DILexicalBlock(scope: !1100, file: !597, line: 67, column: 3)
!1127 = !DILocation(line: 67, column: 8, scope: !1126)
!1128 = !DILocation(line: 67, column: 13, scope: !1129)
!1129 = distinct !DILexicalBlock(scope: !1126, file: !597, line: 67, column: 3)
!1130 = !DILocation(line: 67, column: 15, scope: !1129)
!1131 = !DILocation(line: 67, column: 14, scope: !1129)
!1132 = !DILocation(line: 67, column: 3, scope: !1126)
!1133 = !DILocation(line: 68, column: 27, scope: !1129)
!1134 = !DILocation(line: 68, column: 40, scope: !1129)
!1135 = !DILocation(line: 68, column: 42, scope: !1129)
!1136 = !DILocation(line: 68, column: 30, scope: !1129)
!1137 = !DILocation(line: 68, column: 5, scope: !1129)
!1138 = !DILocation(line: 67, column: 26, scope: !1129)
!1139 = !DILocation(line: 67, column: 3, scope: !1129)
!1140 = distinct !{!1140, !1132, !1141}
!1141 = !DILocation(line: 68, column: 45, scope: !1126)
!1142 = !DILocation(line: 70, column: 3, scope: !1100)
!1143 = !DILocation(line: 70, column: 5, scope: !1100)
!1144 = !DILocation(line: 70, column: 15, scope: !1100)
!1145 = !DILocation(line: 71, column: 10, scope: !1100)
!1146 = !DILocation(line: 71, column: 3, scope: !1100)
!1147 = distinct !DISubprogram(name: "__klee_posix_wrapper", scope: !597, file: !597, line: 243, type: !1148, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !545, retainedNodes: !157)
!1148 = !DISubroutineType(types: !1149)
!1149 = !{!156, !156, !548, !548}
!1150 = !DILocalVariable(name: "argcPtr", arg: 1, scope: !1147, file: !597, line: 243, type: !156)
!1151 = !DILocation(line: 243, column: 30, scope: !1147)
!1152 = !DILocalVariable(name: "argvPtr", arg: 2, scope: !1147, file: !597, line: 243, type: !548)
!1153 = !DILocation(line: 243, column: 46, scope: !1147)
!1154 = !DILocalVariable(name: "envp", arg: 3, scope: !1147, file: !597, line: 243, type: !548)
!1155 = !DILocation(line: 243, column: 62, scope: !1147)
!1156 = !DILocation(line: 244, column: 3, scope: !1147)
!1157 = !DILocation(line: 245, column: 36, scope: !1147)
!1158 = !DILocation(line: 245, column: 45, scope: !1147)
!1159 = !DILocation(line: 245, column: 54, scope: !1147)
!1160 = !DILocation(line: 245, column: 10, scope: !1147)
!1161 = !DILocation(line: 245, column: 3, scope: !1147)
!1162 = distinct !DISubprogram(name: "__isprint", scope: !597, file: !597, line: 44, type: !1163, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !545, retainedNodes: !157)
!1163 = !DISubroutineType(types: !1164)
!1164 = !{!156, !534}
!1165 = !DILocalVariable(name: "c", arg: 1, scope: !1162, file: !597, line: 44, type: !534)
!1166 = !DILocation(line: 44, column: 33, scope: !1162)
!1167 = !DILocation(line: 46, column: 17, scope: !1162)
!1168 = !DILocation(line: 46, column: 14, scope: !1162)
!1169 = !DILocation(line: 46, column: 19, scope: !1162)
!1170 = !DILocation(line: 46, column: 3, scope: !1162)
!1171 = distinct !DISubprogram(name: "Demo1GenerateAccessKey", scope: !161, file: !161, line: 297, type: !215, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!1172 = !DILocalVariable(name: "This", arg: 1, scope: !1171, file: !161, line: 298, type: !207)
!1173 = !DILocation(line: 298, column: 40, scope: !1171)
!1174 = !DILocalVariable(name: "Controller", arg: 2, scope: !1171, file: !161, line: 299, type: !217)
!1175 = !DILocation(line: 299, column: 39, scope: !1171)
!1176 = !DILocalVariable(name: "WriteAccess", arg: 3, scope: !1171, file: !161, line: 300, type: !59)
!1177 = !DILocation(line: 300, column: 39, scope: !1171)
!1178 = !DILocalVariable(name: "AccessKeyPtr", arg: 4, scope: !1171, file: !161, line: 301, type: !183)
!1179 = !DILocation(line: 301, column: 40, scope: !1171)
!1180 = !DILocalVariable(name: "Status", scope: !1171, file: !161, line: 304, type: !172)
!1181 = !DILocation(line: 304, column: 14, scope: !1171)
!1182 = !DILocalVariable(name: "header", scope: !1171, file: !161, line: 305, type: !67)
!1183 = !DILocation(line: 305, column: 9, scope: !1171)
!1184 = !DILocation(line: 308, column: 7, scope: !1185)
!1185 = distinct !DILexicalBlock(scope: !1171, file: !161, line: 308, column: 7)
!1186 = !DILocation(line: 308, column: 20, scope: !1185)
!1187 = !DILocation(line: 308, column: 7, scope: !1171)
!1188 = !DILocation(line: 309, column: 5, scope: !1189)
!1189 = distinct !DILexicalBlock(scope: !1185, file: !161, line: 308, column: 29)
!1190 = !DILocation(line: 312, column: 7, scope: !1191)
!1191 = distinct !DILexicalBlock(scope: !1171, file: !161, line: 312, column: 7)
!1192 = !DILocation(line: 312, column: 21, scope: !1191)
!1193 = !DILocation(line: 312, column: 7, scope: !1171)
!1194 = !DILocation(line: 313, column: 5, scope: !1195)
!1195 = distinct !DILexicalBlock(scope: !1191, file: !161, line: 312, column: 30)
!1196 = !DILocation(line: 322, column: 38, scope: !1171)
!1197 = !DILocation(line: 322, column: 4, scope: !1171)
!1198 = !DILocation(line: 322, column: 18, scope: !1171)
!1199 = !DILocation(line: 322, column: 37, scope: !1171)
!1200 = !DILocation(line: 324, column: 7, scope: !1201)
!1201 = distinct !DILexicalBlock(scope: !1171, file: !161, line: 324, column: 7)
!1202 = !DILocation(line: 324, column: 7, scope: !1171)
!1203 = !DILocation(line: 325, column: 12, scope: !1204)
!1204 = distinct !DILexicalBlock(scope: !1201, file: !161, line: 324, column: 20)
!1205 = !DILocation(line: 326, column: 3, scope: !1204)
!1206 = !DILocation(line: 327, column: 12, scope: !1207)
!1207 = distinct !DILexicalBlock(scope: !1201, file: !161, line: 326, column: 10)
!1208 = !DILocation(line: 329, column: 39, scope: !1171)
!1209 = !DILocation(line: 329, column: 3, scope: !1171)
!1210 = !DILocation(line: 329, column: 17, scope: !1171)
!1211 = !DILocation(line: 329, column: 37, scope: !1171)
!1212 = !DILocation(line: 332, column: 7, scope: !1213)
!1213 = distinct !DILexicalBlock(scope: !1171, file: !161, line: 332, column: 7)
!1214 = !DILocation(line: 332, column: 23, scope: !1213)
!1215 = !DILocation(line: 332, column: 20, scope: !1213)
!1216 = !DILocation(line: 332, column: 7, scope: !1171)
!1217 = !DILocation(line: 333, column: 16, scope: !1218)
!1218 = distinct !DILexicalBlock(scope: !1213, file: !161, line: 332, column: 34)
!1219 = !DILocation(line: 333, column: 5, scope: !1218)
!1220 = !DILocation(line: 334, column: 3, scope: !1218)
!1221 = !DILocation(line: 335, column: 17, scope: !1222)
!1222 = distinct !DILexicalBlock(scope: !1213, file: !161, line: 334, column: 10)
!1223 = !DILocation(line: 335, column: 5, scope: !1222)
!1224 = !DILocation(line: 338, column: 10, scope: !1171)
!1225 = !DILocation(line: 338, column: 3, scope: !1171)
!1226 = !DILocation(line: 339, column: 1, scope: !1171)
!1227 = distinct !DISubprogram(name: "Demo1ValidateAccessKey", scope: !161, file: !161, line: 357, type: !1228, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{!172, !207, !217, !183, !59, !256}
!1230 = !DILocalVariable(name: "This", arg: 1, scope: !1227, file: !161, line: 358, type: !207)
!1231 = !DILocation(line: 358, column: 40, scope: !1227)
!1232 = !DILocalVariable(name: "Controller", arg: 2, scope: !1227, file: !161, line: 359, type: !217)
!1233 = !DILocation(line: 359, column: 39, scope: !1227)
!1234 = !DILocalVariable(name: "AccessKeyPtr", arg: 3, scope: !1227, file: !161, line: 360, type: !183)
!1235 = !DILocation(line: 360, column: 40, scope: !1227)
!1236 = !DILocalVariable(name: "WriteAccess", arg: 4, scope: !1227, file: !161, line: 361, type: !59)
!1237 = !DILocation(line: 361, column: 39, scope: !1227)
!1238 = !DILocalVariable(name: "Result", arg: 5, scope: !1227, file: !161, line: 362, type: !256)
!1239 = !DILocation(line: 362, column: 40, scope: !1227)
!1240 = !DILocation(line: 365, column: 8, scope: !1241)
!1241 = distinct !DILexicalBlock(scope: !1227, file: !161, line: 365, column: 8)
!1242 = !DILocation(line: 365, column: 15, scope: !1241)
!1243 = !DILocation(line: 365, column: 8, scope: !1227)
!1244 = !DILocation(line: 366, column: 5, scope: !1245)
!1245 = distinct !DILexicalBlock(scope: !1241, file: !161, line: 365, column: 25)
!1246 = !DILocation(line: 368, column: 4, scope: !1227)
!1247 = !DILocation(line: 368, column: 11, scope: !1227)
!1248 = !DILocation(line: 370, column: 7, scope: !1249)
!1249 = distinct !DILexicalBlock(scope: !1227, file: !161, line: 370, column: 7)
!1250 = !DILocation(line: 370, column: 20, scope: !1249)
!1251 = !DILocation(line: 370, column: 7, scope: !1227)
!1252 = !DILocation(line: 371, column: 5, scope: !1253)
!1253 = distinct !DILexicalBlock(scope: !1249, file: !161, line: 370, column: 29)
!1254 = !DILocation(line: 376, column: 8, scope: !1255)
!1255 = distinct !DILexicalBlock(scope: !1227, file: !161, line: 376, column: 8)
!1256 = !DILocation(line: 376, column: 20, scope: !1255)
!1257 = !DILocation(line: 376, column: 24, scope: !1255)
!1258 = !DILocation(line: 376, column: 38, scope: !1255)
!1259 = !DILocation(line: 376, column: 58, scope: !1255)
!1260 = !DILocation(line: 376, column: 8, scope: !1227)
!1261 = !DILocation(line: 377, column: 5, scope: !1262)
!1262 = distinct !DILexicalBlock(scope: !1255, file: !161, line: 376, column: 115)
!1263 = !DILocation(line: 379, column: 26, scope: !1227)
!1264 = !DILocation(line: 379, column: 13, scope: !1227)
!1265 = !DILocation(line: 379, column: 4, scope: !1227)
!1266 = !DILocation(line: 379, column: 11, scope: !1227)
!1267 = !DILocation(line: 380, column: 3, scope: !1227)
!1268 = !DILocation(line: 381, column: 1, scope: !1227)
!1269 = distinct !DISubprogram(name: "DoesKeyExist", scope: !161, file: !161, line: 135, type: !1270, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!1270 = !DISubroutineType(types: !1271)
!1271 = !{!59, !183}
!1272 = !DILocalVariable(name: "access_key", arg: 1, scope: !1269, file: !161, line: 136, type: !183)
!1273 = !DILocation(line: 136, column: 40, scope: !1269)
!1274 = !DILocalVariable(name: "current", scope: !1269, file: !161, line: 139, type: !188)
!1275 = !DILocation(line: 139, column: 9, scope: !1269)
!1276 = !DILocation(line: 140, column: 7, scope: !1277)
!1277 = distinct !DILexicalBlock(scope: !1269, file: !161, line: 140, column: 7)
!1278 = !DILocation(line: 140, column: 18, scope: !1277)
!1279 = !DILocation(line: 140, column: 7, scope: !1269)
!1280 = !DILocation(line: 141, column: 5, scope: !1281)
!1281 = distinct !DILexicalBlock(scope: !1277, file: !161, line: 140, column: 27)
!1282 = !DILocation(line: 145, column: 17, scope: !1283)
!1283 = distinct !DILexicalBlock(scope: !1269, file: !161, line: 145, column: 3)
!1284 = !DILocation(line: 145, column: 15, scope: !1283)
!1285 = !DILocation(line: 145, column: 7, scope: !1283)
!1286 = !DILocation(line: 145, column: 23, scope: !1287)
!1287 = distinct !DILexicalBlock(scope: !1283, file: !161, line: 145, column: 3)
!1288 = !DILocation(line: 145, column: 31, scope: !1287)
!1289 = !DILocation(line: 145, column: 3, scope: !1283)
!1290 = !DILocation(line: 147, column: 9, scope: !1291)
!1291 = distinct !DILexicalBlock(scope: !1292, file: !161, line: 147, column: 9)
!1292 = distinct !DILexicalBlock(scope: !1287, file: !161, line: 145, column: 65)
!1293 = !DILocation(line: 147, column: 21, scope: !1291)
!1294 = !DILocation(line: 147, column: 44, scope: !1291)
!1295 = !DILocation(line: 147, column: 53, scope: !1291)
!1296 = !DILocation(line: 147, column: 64, scope: !1291)
!1297 = !DILocation(line: 147, column: 41, scope: !1291)
!1298 = !DILocation(line: 147, column: 9, scope: !1292)
!1299 = !DILocation(line: 148, column: 7, scope: !1300)
!1300 = distinct !DILexicalBlock(scope: !1291, file: !161, line: 147, column: 85)
!1301 = !DILocation(line: 159, column: 3, scope: !1292)
!1302 = !DILocation(line: 145, column: 50, scope: !1287)
!1303 = !DILocation(line: 145, column: 59, scope: !1287)
!1304 = !DILocation(line: 145, column: 48, scope: !1287)
!1305 = !DILocation(line: 145, column: 3, scope: !1287)
!1306 = distinct !{!1306, !1289, !1307}
!1307 = !DILocation(line: 159, column: 3, scope: !1283)
!1308 = !DILocation(line: 160, column: 3, scope: !1269)
!1309 = !DILocation(line: 161, column: 1, scope: !1269)
!1310 = distinct !DISubprogram(name: "InsertLast", scope: !161, file: !161, line: 109, type: !1311, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!1311 = !DISubroutineType(types: !1312)
!1312 = !{null, !183}
!1313 = !DILocalVariable(name: "access_key", arg: 1, scope: !1310, file: !161, line: 110, type: !183)
!1314 = !DILocation(line: 110, column: 40, scope: !1310)
!1315 = !DILocalVariable(name: "link", scope: !1310, file: !161, line: 113, type: !188)
!1316 = !DILocation(line: 113, column: 9, scope: !1310)
!1317 = !DILocation(line: 113, column: 16, scope: !1310)
!1318 = !DILocation(line: 114, column: 3, scope: !1319)
!1319 = distinct !DILexicalBlock(scope: !1320, file: !161, line: 114, column: 3)
!1320 = distinct !DILexicalBlock(scope: !1310, file: !161, line: 114, column: 3)
!1321 = !DILocation(line: 114, column: 3, scope: !1320)
!1322 = !DILocation(line: 115, column: 11, scope: !1310)
!1323 = !DILocation(line: 115, column: 17, scope: !1310)
!1324 = !DILocation(line: 115, column: 3, scope: !1310)
!1325 = !DILocation(line: 115, column: 29, scope: !1310)
!1326 = !DILocation(line: 117, column: 7, scope: !1327)
!1327 = distinct !DILexicalBlock(scope: !1310, file: !161, line: 117, column: 7)
!1328 = !DILocation(line: 117, column: 7, scope: !1310)
!1329 = !DILocation(line: 118, column: 12, scope: !1330)
!1330 = distinct !DILexicalBlock(scope: !1327, file: !161, line: 117, column: 26)
!1331 = !DILocation(line: 118, column: 10, scope: !1330)
!1332 = !DILocation(line: 119, column: 3, scope: !1330)
!1333 = !DILocation(line: 120, column: 18, scope: !1334)
!1334 = distinct !DILexicalBlock(scope: !1327, file: !161, line: 119, column: 10)
!1335 = !DILocation(line: 120, column: 5, scope: !1334)
!1336 = !DILocation(line: 120, column: 11, scope: !1334)
!1337 = !DILocation(line: 120, column: 16, scope: !1334)
!1338 = !DILocation(line: 121, column: 18, scope: !1334)
!1339 = !DILocation(line: 121, column: 5, scope: !1334)
!1340 = !DILocation(line: 121, column: 11, scope: !1334)
!1341 = !DILocation(line: 121, column: 16, scope: !1334)
!1342 = !DILocation(line: 123, column: 3, scope: !1310)
!1343 = !DILocation(line: 123, column: 9, scope: !1310)
!1344 = !DILocation(line: 123, column: 14, scope: !1310)
!1345 = !DILocation(line: 124, column: 10, scope: !1310)
!1346 = !DILocation(line: 124, column: 8, scope: !1310)
!1347 = !DILocation(line: 125, column: 1, scope: !1310)
!1348 = distinct !DISubprogram(name: "InsertFirst", scope: !161, file: !161, line: 84, type: !1311, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!1349 = !DILocalVariable(name: "access_key", arg: 1, scope: !1348, file: !161, line: 85, type: !183)
!1350 = !DILocation(line: 85, column: 40, scope: !1348)
!1351 = !DILocalVariable(name: "link", scope: !1348, file: !161, line: 88, type: !188)
!1352 = !DILocation(line: 88, column: 9, scope: !1348)
!1353 = !DILocation(line: 88, column: 16, scope: !1348)
!1354 = !DILocation(line: 89, column: 3, scope: !1355)
!1355 = distinct !DILexicalBlock(scope: !1356, file: !161, line: 89, column: 3)
!1356 = distinct !DILexicalBlock(scope: !1348, file: !161, line: 89, column: 3)
!1357 = !DILocation(line: 89, column: 3, scope: !1356)
!1358 = !DILocation(line: 90, column: 11, scope: !1348)
!1359 = !DILocation(line: 90, column: 17, scope: !1348)
!1360 = !DILocation(line: 90, column: 3, scope: !1348)
!1361 = !DILocation(line: 90, column: 29, scope: !1348)
!1362 = !DILocation(line: 92, column: 7, scope: !1363)
!1363 = distinct !DILexicalBlock(scope: !1348, file: !161, line: 92, column: 7)
!1364 = !DILocation(line: 92, column: 7, scope: !1348)
!1365 = !DILocation(line: 93, column: 12, scope: !1366)
!1366 = distinct !DILexicalBlock(scope: !1363, file: !161, line: 92, column: 26)
!1367 = !DILocation(line: 93, column: 10, scope: !1366)
!1368 = !DILocation(line: 94, column: 3, scope: !1366)
!1369 = !DILocation(line: 95, column: 18, scope: !1370)
!1370 = distinct !DILexicalBlock(scope: !1363, file: !161, line: 94, column: 10)
!1371 = !DILocation(line: 95, column: 5, scope: !1370)
!1372 = !DILocation(line: 95, column: 11, scope: !1370)
!1373 = !DILocation(line: 95, column: 16, scope: !1370)
!1374 = !DILocation(line: 97, column: 3, scope: !1348)
!1375 = !DILocation(line: 97, column: 9, scope: !1348)
!1376 = !DILocation(line: 97, column: 14, scope: !1348)
!1377 = !DILocation(line: 98, column: 16, scope: !1348)
!1378 = !DILocation(line: 98, column: 3, scope: !1348)
!1379 = !DILocation(line: 98, column: 9, scope: !1348)
!1380 = !DILocation(line: 98, column: 14, scope: !1348)
!1381 = !DILocation(line: 99, column: 10, scope: !1348)
!1382 = !DILocation(line: 99, column: 8, scope: !1348)
!1383 = !DILocation(line: 100, column: 1, scope: !1348)
!1384 = distinct !DISubprogram(name: "IsKeychainEmpty", scope: !161, file: !161, line: 53, type: !1385, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!1385 = !DISubroutineType(types: !1386)
!1386 = !{!59}
!1387 = !DILocation(line: 57, column: 11, scope: !1384)
!1388 = !DILocation(line: 57, column: 16, scope: !1384)
!1389 = !DILocation(line: 57, column: 4, scope: !1384)
!1390 = distinct !DISubprogram(name: "KeychainLength", scope: !161, file: !161, line: 65, type: !1391, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!1391 = !DISubroutineType(types: !1392)
!1392 = !{!67}
!1393 = !DILocalVariable(name: "length", scope: !1390, file: !161, line: 69, type: !67)
!1394 = !DILocation(line: 69, column: 9, scope: !1390)
!1395 = !DILocalVariable(name: "current", scope: !1390, file: !161, line: 70, type: !188)
!1396 = !DILocation(line: 70, column: 9, scope: !1390)
!1397 = !DILocation(line: 71, column: 17, scope: !1398)
!1398 = distinct !DILexicalBlock(scope: !1390, file: !161, line: 71, column: 3)
!1399 = !DILocation(line: 71, column: 15, scope: !1398)
!1400 = !DILocation(line: 71, column: 7, scope: !1398)
!1401 = !DILocation(line: 71, column: 23, scope: !1402)
!1402 = distinct !DILexicalBlock(scope: !1398, file: !161, line: 71, column: 3)
!1403 = !DILocation(line: 71, column: 31, scope: !1402)
!1404 = !DILocation(line: 71, column: 3, scope: !1398)
!1405 = !DILocation(line: 72, column: 11, scope: !1406)
!1406 = distinct !DILexicalBlock(scope: !1402, file: !161, line: 71, column: 64)
!1407 = !DILocation(line: 73, column: 3, scope: !1406)
!1408 = !DILocation(line: 71, column: 50, scope: !1402)
!1409 = !DILocation(line: 71, column: 59, scope: !1402)
!1410 = !DILocation(line: 71, column: 48, scope: !1402)
!1411 = !DILocation(line: 71, column: 3, scope: !1402)
!1412 = distinct !{!1412, !1404, !1413}
!1413 = !DILocation(line: 73, column: 3, scope: !1398)
!1414 = !DILocation(line: 74, column: 10, scope: !1390)
!1415 = !DILocation(line: 74, column: 3, scope: !1390)
!1416 = distinct !DISubprogram(name: "Demo1AccessKeyInit", scope: !161, file: !161, line: 195, type: !1417, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!1417 = !DISubroutineType(types: !1418)
!1418 = !{!172, !217, !1419}
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 64)
!1420 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_SYSTEM_TABLE", file: !14, line: 2115, baseType: !1421)
!1421 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14, line: 2054, size: 960, elements: !1422)
!1422 = !{!1423, !1432, !1433, !1434, !1435, !1458, !1459, !1513, !1514, !1515, !1634, !1886, !1887}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "Hdr", scope: !1421, file: !14, line: 2058, baseType: !1424, size: 192)
!1424 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_TABLE_HEADER", file: !6, line: 172, baseType: !1425)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 145, size: 192, elements: !1426)
!1426 = !{!1427, !1428, !1429, !1430, !1431}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1425, file: !6, line: 151, baseType: !68, size: 64)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "Revision", scope: !1425, file: !6, line: 158, baseType: !82, size: 32, offset: 64)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "HeaderSize", scope: !1425, file: !6, line: 162, baseType: !82, size: 32, offset: 96)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "CRC32", scope: !1425, file: !6, line: 167, baseType: !82, size: 32, offset: 128)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved", scope: !1425, file: !6, line: 171, baseType: !82, size: 32, offset: 160)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "FirmwareVendor", scope: !1421, file: !14, line: 2063, baseType: !117, size: 64, offset: 192)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "FirmwareRevision", scope: !1421, file: !14, line: 2068, baseType: !82, size: 32, offset: 256)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "ConsoleInHandle", scope: !1421, file: !14, line: 2073, baseType: !217, size: 64, offset: 320)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "ConIn", scope: !1421, file: !14, line: 2078, baseType: !1436, size: 64, offset: 384)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 64)
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_SIMPLE_TEXT_INPUT_PROTOCOL", file: !1438, line: 20, baseType: !1439)
!1438 = !DIFile(filename: "./Uefi/Protocol/SimpleTextIn.h", directory: "/home/laboni/Laboni/DARPA_HARDEN/HARDEN_demo1/edk2/EmulatorPkg/kleeAnalysis/Demo1_Variable")
!1439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_EFI_SIMPLE_TEXT_INPUT_PROTOCOL", file: !1438, line: 116, size: 192, elements: !1440)
!1440 = !{!1441, !1446, !1457}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "Reset", scope: !1439, file: !1438, line: 117, baseType: !1442, size: 64)
!1442 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_INPUT_RESET", file: !1438, line: 86, baseType: !1443)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 64)
!1444 = !DISubroutineType(types: !1445)
!1445 = !{!172, !1436, !59}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "ReadKeyStroke", scope: !1439, file: !1438, line: 118, baseType: !1447, size: 64, offset: 64)
!1447 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_INPUT_READ_KEY", file: !1438, line: 107, baseType: !1448)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{!172, !1436, !1451}
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64)
!1452 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_INPUT_KEY", file: !1438, line: 38, baseType: !1453)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1438, line: 35, size: 32, elements: !1454)
!1454 = !{!1455, !1456}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "ScanCode", scope: !1453, file: !1438, line: 36, baseType: !76, size: 16)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "UnicodeChar", scope: !1453, file: !1438, line: 37, baseType: !118, size: 16, offset: 16)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "WaitForKey", scope: !1439, file: !1438, line: 122, baseType: !219, size: 64, offset: 128)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "ConsoleOutHandle", scope: !1421, file: !14, line: 2082, baseType: !217, size: 64, offset: 448)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "ConOut", scope: !1421, file: !14, line: 2087, baseType: !1460, size: 64, offset: 512)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 64)
!1461 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL", file: !1462, line: 27, baseType: !1463)
!1462 = !DIFile(filename: "./Uefi/Protocol/SimpleTextOut.h", directory: "/home/laboni/Laboni/DARPA_HARDEN/HARDEN_demo1/edk2/EmulatorPkg/kleeAnalysis/Demo1_Variable")
!1463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL", file: !1462, line: 387, size: 640, elements: !1464)
!1464 = !{!1465, !1470, !1475, !1477, !1482, !1487, !1489, !1494, !1499, !1501}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "Reset", scope: !1463, file: !1462, line: 388, baseType: !1466, size: 64)
!1466 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_TEXT_RESET", file: !1462, line: 167, baseType: !1467)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 64)
!1468 = !DISubroutineType(types: !1469)
!1469 = !{!172, !1460, !59}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "OutputString", scope: !1463, file: !1462, line: 390, baseType: !1471, size: 64, offset: 64)
!1471 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_TEXT_STRING", file: !1462, line: 192, baseType: !1472)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 64)
!1473 = !DISubroutineType(types: !1474)
!1474 = !{!172, !1460, !117}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "TestString", scope: !1463, file: !1462, line: 391, baseType: !1476, size: 64, offset: 128)
!1476 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_TEXT_TEST_STRING", file: !1462, line: 213, baseType: !1472)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "QueryMode", scope: !1463, file: !1462, line: 393, baseType: !1478, size: 64, offset: 192)
!1478 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_TEXT_QUERY_MODE", file: !1462, line: 236, baseType: !1479)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 64)
!1480 = !DISubroutineType(types: !1481)
!1481 = !{!172, !1460, !67, !173, !173}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "SetMode", scope: !1463, file: !1462, line: 394, baseType: !1483, size: 64, offset: 256)
!1483 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_TEXT_SET_MODE", file: !1462, line: 256, baseType: !1484)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 64)
!1485 = !DISubroutineType(types: !1486)
!1486 = !{!172, !1460, !67}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "SetAttribute", scope: !1463, file: !1462, line: 395, baseType: !1488, size: 64, offset: 320)
!1488 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_TEXT_SET_ATTRIBUTE", file: !1462, line: 277, baseType: !1484)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "ClearScreen", scope: !1463, file: !1462, line: 397, baseType: !1490, size: 64, offset: 384)
!1490 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_TEXT_CLEAR_SCREEN", file: !1462, line: 295, baseType: !1491)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 64)
!1492 = !DISubroutineType(types: !1493)
!1493 = !{!172, !1460}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "SetCursorPosition", scope: !1463, file: !1462, line: 398, baseType: !1495, size: 64, offset: 448)
!1495 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_TEXT_SET_CURSOR_POSITION", file: !1462, line: 318, baseType: !1496)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64)
!1497 = !DISubroutineType(types: !1498)
!1498 = !{!172, !1460, !67, !67}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "EnableCursor", scope: !1463, file: !1462, line: 399, baseType: !1500, size: 64, offset: 512)
!1500 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_TEXT_ENABLE_CURSOR", file: !1462, line: 340, baseType: !1467)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !1463, file: !1462, line: 404, baseType: !1502, size: 64, offset: 576)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 64)
!1503 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_SIMPLE_TEXT_OUTPUT_MODE", file: !1462, line: 379, baseType: !1504)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1462, line: 349, size: 192, elements: !1505)
!1505 = !{!1506, !1508, !1509, !1510, !1511, !1512}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "MaxMode", scope: !1504, file: !1462, line: 353, baseType: !1507, size: 32)
!1507 = !DIDerivedType(tag: DW_TAG_typedef, name: "INT32", file: !60, line: 192, baseType: !156)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !1504, file: !1462, line: 362, baseType: !1507, size: 32, offset: 32)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "Attribute", scope: !1504, file: !1462, line: 366, baseType: !1507, size: 32, offset: 64)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "CursorColumn", scope: !1504, file: !1462, line: 370, baseType: !1507, size: 32, offset: 96)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "CursorRow", scope: !1504, file: !1462, line: 374, baseType: !1507, size: 32, offset: 128)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "CursorVisible", scope: !1504, file: !1462, line: 378, baseType: !59, size: 8, offset: 160)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "StandardErrorHandle", scope: !1421, file: !14, line: 2092, baseType: !217, size: 64, offset: 576)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "StdErr", scope: !1421, file: !14, line: 2097, baseType: !1460, size: 64, offset: 640)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "RuntimeServices", scope: !1421, file: !14, line: 2101, baseType: !1516, size: 64, offset: 704)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 64)
!1517 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_RUNTIME_SERVICES", file: !14, line: 1933, baseType: !1518)
!1518 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14, line: 1886, size: 1216, elements: !1519)
!1519 = !{!1520, !1521, !1534, !1539, !1544, !1549, !1564, !1570, !1577, !1582, !1587, !1592, !1597, !1602, !1608, !1622, !1629}
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "Hdr", scope: !1518, file: !14, line: 1890, baseType: !1424, size: 192)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "GetTime", scope: !1518, file: !14, line: 1895, baseType: !1522, size: 64, offset: 192)
!1522 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_GET_TIME", file: !14, line: 874, baseType: !1523)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64)
!1524 = !DISubroutineType(types: !1525)
!1525 = !{!172, !1526, !1527}
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !85, size: 64)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64)
!1528 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_TIME_CAPABILITIES", file: !14, line: 857, baseType: !1529)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14, line: 834, size: 96, elements: !1530)
!1530 = !{!1531, !1532, !1533}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "Resolution", scope: !1529, file: !14, line: 841, baseType: !82, size: 32)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "Accuracy", scope: !1529, file: !14, line: 848, baseType: !82, size: 32, offset: 32)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "SetsToZero", scope: !1529, file: !14, line: 856, baseType: !59, size: 8, offset: 64)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "SetTime", scope: !1518, file: !14, line: 1896, baseType: !1535, size: 64, offset: 256)
!1535 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_SET_TIME", file: !14, line: 891, baseType: !1536)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{!172, !1526}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "GetWakeupTime", scope: !1518, file: !14, line: 1897, baseType: !1540, size: 64, offset: 320)
!1540 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_GET_WAKEUP_TIME", file: !14, line: 912, baseType: !1541)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1542 = !DISubroutineType(types: !1543)
!1543 = !{!172, !256, !256, !1526}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "SetWakeupTime", scope: !1518, file: !14, line: 1898, baseType: !1545, size: 64, offset: 384)
!1545 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_SET_WAKEUP_TIME", file: !14, line: 934, baseType: !1546)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64)
!1547 = !DISubroutineType(types: !1548)
!1548 = !{!172, !59, !1526}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "SetVirtualAddressMap", scope: !1518, file: !14, line: 1903, baseType: !1550, size: 64, offset: 448)
!1550 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_SET_VIRTUAL_ADDRESS_MAP", file: !14, line: 311, baseType: !1551)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 64)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{!172, !67, !67, !82, !1554}
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 64)
!1555 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_MEMORY_DESCRIPTOR", file: !14, line: 159, baseType: !1556)
!1556 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14, line: 127, size: 320, elements: !1557)
!1557 = !{!1558, !1559, !1560, !1562, !1563}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "Type", scope: !1556, file: !14, line: 133, baseType: !82, size: 32)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "PhysicalStart", scope: !1556, file: !14, line: 139, baseType: !150, size: 64, offset: 64)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "VirtualStart", scope: !1556, file: !14, line: 145, baseType: !1561, size: 64, offset: 128)
!1561 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_VIRTUAL_ADDRESS", file: !86, line: 57, baseType: !68)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "NumberOfPages", scope: !1556, file: !14, line: 152, baseType: !68, size: 64, offset: 192)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "Attribute", scope: !1556, file: !14, line: 158, baseType: !68, size: 64, offset: 256)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "ConvertPointer", scope: !1518, file: !14, line: 1904, baseType: !1565, size: 64, offset: 512)
!1565 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_CONVERT_POINTER", file: !14, line: 406, baseType: !1566)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 64)
!1567 = !DISubroutineType(types: !1568)
!1568 = !{!172, !67, !1569}
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 64)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "GetVariable", scope: !1518, file: !14, line: 1909, baseType: !1571, size: 64, offset: 576)
!1571 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_GET_VARIABLE", file: !14, line: 670, baseType: !1572)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 64)
!1573 = !DISubroutineType(types: !1574)
!1574 = !{!172, !117, !1575, !1576, !173, !58}
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 64)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "GetNextVariableName", scope: !1518, file: !14, line: 1910, baseType: !1578, size: 64, offset: 640)
!1578 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_GET_NEXT_VARIABLE_NAME", file: !14, line: 739, baseType: !1579)
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 64)
!1580 = !DISubroutineType(types: !1581)
!1581 = !{!172, !173, !117, !1575}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "SetVariable", scope: !1518, file: !14, line: 1911, baseType: !1583, size: 64, offset: 704)
!1583 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_SET_VARIABLE", file: !14, line: 781, baseType: !1584)
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 64)
!1585 = !DISubroutineType(types: !1586)
!1586 = !{!172, !117, !1575, !82, !67, !58}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "GetAccessVariable", scope: !1518, file: !14, line: 1914, baseType: !1588, size: 64, offset: 768)
!1588 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_GET_ACCESS_VARIABLE", file: !14, line: 703, baseType: !1589)
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 64)
!1590 = !DISubroutineType(types: !1591)
!1591 = !{!172, !117, !1575, !1576, !183, !173, !58}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "SetAccessVariable", scope: !1518, file: !14, line: 1915, baseType: !1593, size: 64, offset: 832)
!1593 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_SET_ACCESS_VARIABLE", file: !14, line: 822, baseType: !1594)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 64)
!1595 = !DISubroutineType(types: !1596)
!1596 = !{!172, !117, !1575, !82, !183, !67, !58}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "GetNextHighMonotonicCount", scope: !1518, file: !14, line: 1920, baseType: !1598, size: 64, offset: 896)
!1598 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_GET_NEXT_HIGH_MONO_COUNT", file: !14, line: 1155, baseType: !1599)
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 64)
!1600 = !DISubroutineType(types: !1601)
!1601 = !{!172, !1576}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "ResetSystem", scope: !1518, file: !14, line: 1921, baseType: !1603, size: 64, offset: 960)
!1603 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_RESET_SYSTEM", file: !14, line: 1120, baseType: !1604)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 64)
!1605 = !DISubroutineType(types: !1606)
!1606 = !{null, !1607, !172, !67, !58}
!1607 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_RESET_TYPE", file: !6, line: 140, baseType: !5)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "UpdateCapsule", scope: !1518, file: !14, line: 1926, baseType: !1609, size: 64, offset: 1024)
!1609 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_UPDATE_CAPSULE", file: !14, line: 1781, baseType: !1610)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 64)
!1611 = !DISubroutineType(types: !1612)
!1612 = !{!172, !1613, !67, !150}
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 64)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 64)
!1615 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_CAPSULE_HEADER", file: !14, line: 1727, baseType: !1616)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14, line: 1706, size: 224, elements: !1617)
!1617 = !{!1618, !1619, !1620, !1621}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "CapsuleGuid", scope: !1616, file: !14, line: 1710, baseType: !106, size: 128)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "HeaderSize", scope: !1616, file: !14, line: 1716, baseType: !82, size: 32, offset: 128)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "Flags", scope: !1616, file: !14, line: 1722, baseType: !82, size: 32, offset: 160)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "CapsuleImageSize", scope: !1616, file: !14, line: 1726, baseType: !82, size: 32, offset: 192)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "QueryCapsuleCapabilities", scope: !1518, file: !14, line: 1927, baseType: !1623, size: 64, offset: 1088)
!1623 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_QUERY_CAPSULE_CAPABILITIES", file: !14, line: 1812, baseType: !1624)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 64)
!1625 = !DISubroutineType(types: !1626)
!1626 = !{!172, !1613, !67, !1627, !1628}
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !68, size: 64)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1607, size: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "QueryVariableInfo", scope: !1518, file: !14, line: 1932, baseType: !1630, size: 64, offset: 1152)
!1630 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_QUERY_VARIABLE_INFO", file: !14, line: 1843, baseType: !1631)
!1631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1632, size: 64)
!1632 = !DISubroutineType(types: !1633)
!1633 = !{!172, !82, !1627, !1627, !1627}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "BootServices", scope: !1421, file: !14, line: 2105, baseType: !1635, size: 64, offset: 768)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_BOOT_SERVICES", file: !14, line: 2034, baseType: !1637)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14, line: 1941, size: 3008, elements: !1638)
!1638 = !{!1639, !1640, !1645, !1650, !1657, !1662, !1667, !1672, !1677, !1687, !1693, !1698, !1703, !1705, !1707, !1714, !1719, !1724, !1729, !1730, !1735, !1741, !1756, !1761, !1766, !1772, !1777, !1782, !1787, !1792, !1797, !1802, !1807, !1812, !1817, !1822, !1836, !1843, !1849, !1854, !1859, !1864, !1869, !1874, !1879}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "Hdr", scope: !1637, file: !14, line: 1945, baseType: !1424, size: 192)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "RaiseTPL", scope: !1637, file: !14, line: 1950, baseType: !1641, size: 64, offset: 192)
!1641 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_RAISE_TPL", file: !14, line: 628, baseType: !1642)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64)
!1643 = !DISubroutineType(types: !1644)
!1644 = !{!273, !273}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "RestoreTPL", scope: !1637, file: !14, line: 1951, baseType: !1646, size: 64, offset: 256)
!1646 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_RESTORE_TPL", file: !14, line: 640, baseType: !1647)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64)
!1648 = !DISubroutineType(types: !1649)
!1649 = !{null, !273}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "AllocatePages", scope: !1637, file: !14, line: 1956, baseType: !1651, size: 64, offset: 320)
!1651 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_ALLOCATE_PAGES", file: !14, line: 187, baseType: !1652)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 64)
!1653 = !DISubroutineType(types: !1654)
!1654 = !{!172, !1655, !1656, !67, !327}
!1655 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_ALLOCATE_TYPE", file: !14, line: 46, baseType: !13)
!1656 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_MEMORY_TYPE", file: !6, line: 107, baseType: !20)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "FreePages", scope: !1637, file: !14, line: 1957, baseType: !1658, size: 64, offset: 384)
!1658 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_FREE_PAGES", file: !14, line: 208, baseType: !1659)
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 64)
!1660 = !DISubroutineType(types: !1661)
!1661 = !{!172, !150, !67}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "GetMemoryMap", scope: !1637, file: !14, line: 1958, baseType: !1663, size: 64, offset: 448)
!1663 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_GET_MEMORY_MAP", file: !14, line: 240, baseType: !1664)
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 64)
!1665 = !DISubroutineType(types: !1666)
!1666 = !{!172, !173, !1554, !173, !173, !1576}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "AllocatePool", scope: !1637, file: !14, line: 1959, baseType: !1668, size: 64, offset: 512)
!1668 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_ALLOCATE_POOL", file: !14, line: 269, baseType: !1669)
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 64)
!1670 = !DISubroutineType(types: !1671)
!1671 = !{!172, !1656, !67, !1569}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "FreePool", scope: !1637, file: !14, line: 1960, baseType: !1673, size: 64, offset: 576)
!1673 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_FREE_POOL", file: !14, line: 286, baseType: !1674)
!1674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1675, size: 64)
!1675 = !DISubroutineType(types: !1676)
!1676 = !{!172, !58}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "CreateEvent", scope: !1637, file: !14, line: 1965, baseType: !1678, size: 64, offset: 640)
!1678 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_CREATE_EVENT", file: !14, line: 464, baseType: !1679)
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 64)
!1680 = !DISubroutineType(types: !1681)
!1681 = !{!172, !82, !273, !1682, !58, !1686}
!1682 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_EVENT_NOTIFY", file: !14, line: 441, baseType: !1683)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 64)
!1684 = !DISubroutineType(types: !1685)
!1685 = !{null, !219, !58}
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "SetTimer", scope: !1637, file: !14, line: 1966, baseType: !1688, size: 64, offset: 704)
!1688 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_SET_TIMER", file: !14, line: 538, baseType: !1689)
!1689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 64)
!1690 = !DISubroutineType(types: !1691)
!1691 = !{!172, !219, !1692, !68}
!1692 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_TIMER_DELAY", file: !14, line: 518, baseType: !38)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "WaitForEvent", scope: !1637, file: !14, line: 1967, baseType: !1694, size: 64, offset: 768)
!1694 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_WAIT_FOR_EVENT", file: !14, line: 574, baseType: !1695)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 64)
!1696 = !DISubroutineType(types: !1697)
!1697 = !{!172, !67, !1686, !173}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "SignalEvent", scope: !1637, file: !14, line: 1968, baseType: !1699, size: 64, offset: 832)
!1699 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_SIGNAL_EVENT", file: !14, line: 554, baseType: !1700)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64)
!1701 = !DISubroutineType(types: !1702)
!1702 = !{!172, !219}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "CloseEvent", scope: !1637, file: !14, line: 1969, baseType: !1704, size: 64, offset: 896)
!1704 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_CLOSE_EVENT", file: !14, line: 590, baseType: !1700)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "CheckEvent", scope: !1637, file: !14, line: 1970, baseType: !1706, size: 64, offset: 960)
!1706 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_CHECK_EVENT", file: !14, line: 606, baseType: !1700)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "InstallProtocolInterface", scope: !1637, file: !14, line: 1975, baseType: !1708, size: 64, offset: 1024)
!1708 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_INSTALL_PROTOCOL_INTERFACE", file: !14, line: 1246, baseType: !1709)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64)
!1710 = !DISubroutineType(types: !1711)
!1711 = !{!172, !1712, !1575, !1713, !58}
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 64)
!1713 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_INTERFACE_TYPE", file: !14, line: 1222, baseType: !43)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "ReinstallProtocolInterface", scope: !1637, file: !14, line: 1976, baseType: !1715, size: 64, offset: 1088)
!1715 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_REINSTALL_PROTOCOL_INTERFACE", file: !14, line: 1296, baseType: !1716)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64)
!1717 = !DISubroutineType(types: !1718)
!1718 = !{!172, !217, !1575, !58, !58}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "UninstallProtocolInterface", scope: !1637, file: !14, line: 1977, baseType: !1720, size: 64, offset: 1152)
!1720 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_UNINSTALL_PROTOCOL_INTERFACE", file: !14, line: 1322, baseType: !1721)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 64)
!1722 = !DISubroutineType(types: !1723)
!1723 = !{!172, !217, !1575, !58}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "HandleProtocol", scope: !1637, file: !14, line: 1978, baseType: !1725, size: 64, offset: 1216)
!1725 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_HANDLE_PROTOCOL", file: !14, line: 1363, baseType: !1726)
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 64)
!1727 = !DISubroutineType(types: !1728)
!1728 = !{!172, !217, !1575, !1569}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved", scope: !1637, file: !14, line: 1979, baseType: !58, size: 64, offset: 1280)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "RegisterProtocolNotify", scope: !1637, file: !14, line: 1980, baseType: !1731, size: 64, offset: 1344)
!1731 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_REGISTER_PROTOCOL_NOTIFY", file: !14, line: 1524, baseType: !1732)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64)
!1733 = !DISubroutineType(types: !1734)
!1734 = !{!172, !1575, !219, !1569}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "LocateHandle", scope: !1637, file: !14, line: 1981, baseType: !1736, size: 64, offset: 1408)
!1736 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_LOCATE_HANDLE", file: !14, line: 1573, baseType: !1737)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 64)
!1738 = !DISubroutineType(types: !1739)
!1739 = !{!172, !1740, !1575, !58, !173, !1712}
!1740 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_LOCATE_SEARCH_TYPE", file: !14, line: 1547, baseType: !46)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "LocateDevicePath", scope: !1637, file: !14, line: 1982, baseType: !1742, size: 64, offset: 1472)
!1742 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_LOCATE_DEVICE_PATH", file: !14, line: 1599, baseType: !1743)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 64)
!1744 = !DISubroutineType(types: !1745)
!1745 = !{!172, !1575, !1746, !1712}
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 64)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 64)
!1748 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_DEVICE_PATH_PROTOCOL", file: !1749, line: 58, baseType: !1750)
!1749 = !DIFile(filename: "./Uefi/Protocol/DevicePath.h", directory: "/home/laboni/Laboni/DARPA_HARDEN/HARDEN_demo1/edk2/EmulatorPkg/kleeAnalysis/Demo1_Variable")
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1749, line: 43, size: 32, elements: !1751)
!1751 = !{!1752, !1753, !1754}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "Type", scope: !1750, file: !1749, line: 44, baseType: !79, size: 8)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "SubType", scope: !1750, file: !1749, line: 51, baseType: !79, size: 8, offset: 8)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "Length", scope: !1750, file: !1749, line: 56, baseType: !1755, size: 16, offset: 16)
!1755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !79, size: 16, elements: !138)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "InstallConfigurationTable", scope: !1637, file: !14, line: 1983, baseType: !1757, size: 64, offset: 1536)
!1757 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_INSTALL_CONFIGURATION_TABLE", file: !14, line: 1620, baseType: !1758)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64)
!1759 = !DISubroutineType(types: !1760)
!1760 = !{!172, !1575, !58}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "LoadImage", scope: !1637, file: !14, line: 1988, baseType: !1762, size: 64, offset: 1600)
!1762 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_IMAGE_LOAD", file: !14, line: 971, baseType: !1763)
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 64)
!1764 = !DISubroutineType(types: !1765)
!1765 = !{!172, !59, !217, !1747, !58, !67, !1712}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "StartImage", scope: !1637, file: !14, line: 1989, baseType: !1767, size: 64, offset: 1664)
!1767 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_IMAGE_START", file: !14, line: 996, baseType: !1768)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 64)
!1769 = !DISubroutineType(types: !1770)
!1770 = !{!172, !217, !173, !1771}
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "Exit", scope: !1637, file: !14, line: 1990, baseType: !1773, size: 64, offset: 1728)
!1773 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_EXIT", file: !14, line: 1024, baseType: !1774)
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 64)
!1775 = !DISubroutineType(types: !1776)
!1776 = !{!172, !217, !172, !67, !117}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "UnloadImage", scope: !1637, file: !14, line: 1991, baseType: !1778, size: 64, offset: 1792)
!1778 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_IMAGE_UNLOAD", file: !14, line: 1042, baseType: !1779)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64)
!1780 = !DISubroutineType(types: !1781)
!1781 = !{!172, !217}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "ExitBootServices", scope: !1637, file: !14, line: 1992, baseType: !1783, size: 64, offset: 1856)
!1783 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_EXIT_BOOT_SERVICES", file: !14, line: 1058, baseType: !1784)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64)
!1785 = !DISubroutineType(types: !1786)
!1786 = !{!172, !217, !67}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "GetNextMonotonicCount", scope: !1637, file: !14, line: 1997, baseType: !1788, size: 64, offset: 1920)
!1788 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_GET_NEXT_MONOTONIC_COUNT", file: !14, line: 1139, baseType: !1789)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 64)
!1790 = !DISubroutineType(types: !1791)
!1791 = !{!172, !1627}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "Stall", scope: !1637, file: !14, line: 1998, baseType: !1793, size: 64, offset: 1984)
!1793 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_STALL", file: !14, line: 1074, baseType: !1794)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 64)
!1795 = !DISubroutineType(types: !1796)
!1796 = !{!172, !67}
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "SetWatchdogTimer", scope: !1637, file: !14, line: 1999, baseType: !1798, size: 64, offset: 2048)
!1798 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_SET_WATCHDOG_TIMER", file: !14, line: 1096, baseType: !1799)
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 64)
!1800 = !DISubroutineType(types: !1801)
!1801 = !{!172, !67, !68, !67, !117}
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "ConnectController", scope: !1637, file: !14, line: 2004, baseType: !1803, size: 64, offset: 2112)
!1803 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_CONNECT_CONTROLLER", file: !14, line: 345, baseType: !1804)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 64)
!1805 = !DISubroutineType(types: !1806)
!1806 = !{!172, !217, !1712, !1747, !59}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "DisconnectController", scope: !1637, file: !14, line: 2005, baseType: !1808, size: 64, offset: 2176)
!1808 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_DISCONNECT_CONTROLLER", file: !14, line: 378, baseType: !1809)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 64)
!1810 = !DISubroutineType(types: !1811)
!1811 = !{!172, !217, !217, !217}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "OpenProtocol", scope: !1637, file: !14, line: 2010, baseType: !1813, size: 64, offset: 2240)
!1813 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_OPEN_PROTOCOL", file: !14, line: 1405, baseType: !1814)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 64)
!1815 = !DISubroutineType(types: !1816)
!1816 = !{!172, !217, !1575, !1569, !217, !217, !82}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "CloseProtocol", scope: !1637, file: !14, line: 2011, baseType: !1818, size: 64, offset: 2304)
!1818 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_CLOSE_PROTOCOL", file: !14, line: 1437, baseType: !1819)
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1820, size: 64)
!1820 = !DISubroutineType(types: !1821)
!1821 = !{!172, !217, !1575, !217, !217}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "OpenProtocolInformation", scope: !1637, file: !14, line: 2012, baseType: !1823, size: 64, offset: 2368)
!1823 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_OPEN_PROTOCOL_INFORMATION", file: !14, line: 1471, baseType: !1824)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64)
!1825 = !DISubroutineType(types: !1826)
!1826 = !{!172, !217, !1575, !1827, !173}
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 64)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64)
!1829 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_OPEN_PROTOCOL_INFORMATION_ENTRY", file: !14, line: 1452, baseType: !1830)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14, line: 1447, size: 192, elements: !1831)
!1831 = !{!1832, !1833, !1834, !1835}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "AgentHandle", scope: !1830, file: !14, line: 1448, baseType: !217, size: 64)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "ControllerHandle", scope: !1830, file: !14, line: 1449, baseType: !217, size: 64, offset: 64)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "Attributes", scope: !1830, file: !14, line: 1450, baseType: !82, size: 32, offset: 128)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "OpenCount", scope: !1830, file: !14, line: 1451, baseType: !82, size: 32, offset: 160)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "ProtocolsPerHandle", scope: !1637, file: !14, line: 2017, baseType: !1837, size: 64, offset: 2432)
!1837 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_PROTOCOLS_PER_HANDLE", file: !14, line: 1501, baseType: !1838)
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 64)
!1839 = !DISubroutineType(types: !1840)
!1840 = !{!172, !217, !1841, !173}
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 64)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "LocateHandleBuffer", scope: !1637, file: !14, line: 2018, baseType: !1844, size: 64, offset: 2496)
!1844 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_LOCATE_HANDLE_BUFFER", file: !14, line: 1646, baseType: !1845)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 64)
!1846 = !DISubroutineType(types: !1847)
!1847 = !{!172, !1740, !1575, !58, !173, !1848}
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 64)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "LocateProtocol", scope: !1637, file: !14, line: 2019, baseType: !1850, size: 64, offset: 2560)
!1850 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_LOCATE_PROTOCOL", file: !14, line: 1673, baseType: !1851)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64)
!1852 = !DISubroutineType(types: !1853)
!1853 = !{!172, !1575, !58, !1569}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "InstallMultipleProtocolInterfaces", scope: !1637, file: !14, line: 2020, baseType: !1855, size: 64, offset: 2624)
!1855 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_INSTALL_MULTIPLE_PROTOCOL_INTERFACES", file: !14, line: 1271, baseType: !1856)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 64)
!1857 = !DISubroutineType(types: !1858)
!1858 = !{!172, !1712, null}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "UninstallMultipleProtocolInterfaces", scope: !1637, file: !14, line: 2021, baseType: !1860, size: 64, offset: 2688)
!1860 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_UNINSTALL_MULTIPLE_PROTOCOL_INTERFACES", file: !14, line: 1341, baseType: !1861)
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 64)
!1862 = !DISubroutineType(types: !1863)
!1863 = !{!172, !217, null}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "CalculateCrc32", scope: !1637, file: !14, line: 2026, baseType: !1865, size: 64, offset: 2752)
!1865 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_CALCULATE_CRC32", file: !14, line: 1176, baseType: !1866)
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 64)
!1867 = !DISubroutineType(types: !1868)
!1868 = !{!172, !58, !67, !1576}
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "CopyMem", scope: !1637, file: !14, line: 2031, baseType: !1870, size: 64, offset: 2816)
!1870 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_COPY_MEM", file: !14, line: 1192, baseType: !1871)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 64)
!1872 = !DISubroutineType(types: !1873)
!1873 = !{null, !58, !58, !67}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "SetMem", scope: !1637, file: !14, line: 2032, baseType: !1875, size: 64, offset: 2880)
!1875 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_SET_MEM", file: !14, line: 1208, baseType: !1876)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 64)
!1877 = !DISubroutineType(types: !1878)
!1878 = !{null, !58, !67, !79}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "CreateEventEx", scope: !1637, file: !14, line: 2033, baseType: !1880, size: 64, offset: 2944)
!1880 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_CREATE_EVENT_EX", file: !14, line: 493, baseType: !1881)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 64)
!1882 = !DISubroutineType(types: !1883)
!1883 = !{!172, !82, !273, !1682, !526, !1884, !1686}
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 64)
!1885 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !106)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "NumberOfTableEntries", scope: !1421, file: !14, line: 2109, baseType: !67, size: 64, offset: 832)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "ConfigurationTable", scope: !1421, file: !14, line: 2114, baseType: !1888, size: 64, offset: 896)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!1889 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFI_CONFIGURATION_TABLE", file: !14, line: 2049, baseType: !1890)
!1890 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14, line: 2040, size: 192, elements: !1891)
!1891 = !{!1892, !1893}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "VendorGuid", scope: !1890, file: !14, line: 2044, baseType: !106, size: 128)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "VendorTable", scope: !1890, file: !14, line: 2048, baseType: !58, size: 64, offset: 128)
!1894 = !DILocalVariable(name: "ImageHandle", arg: 1, scope: !1416, file: !161, line: 196, type: !217)
!1895 = !DILocation(line: 196, column: 39, scope: !1416)
!1896 = !DILocalVariable(name: "SystemTable", arg: 2, scope: !1416, file: !161, line: 197, type: !1419)
!1897 = !DILocation(line: 197, column: 40, scope: !1416)
!1898 = !DILocalVariable(name: "Status", scope: !1416, file: !161, line: 200, type: !172)
!1899 = !DILocation(line: 200, column: 21, scope: !1416)
!1900 = !DILocation(line: 206, column: 7, scope: !1901)
!1901 = distinct !DILexicalBlock(scope: !1416, file: !161, line: 206, column: 7)
!1902 = !DILocation(line: 206, column: 26, scope: !1901)
!1903 = !DILocation(line: 206, column: 30, scope: !1901)
!1904 = !DILocation(line: 206, column: 42, scope: !1901)
!1905 = !DILocation(line: 206, column: 7, scope: !1416)
!1906 = !DILocation(line: 209, column: 12, scope: !1907)
!1907 = distinct !DILexicalBlock(scope: !1901, file: !161, line: 206, column: 52)
!1908 = !DILocation(line: 209, column: 5, scope: !1907)
!1909 = !DILocation(line: 215, column: 15, scope: !1416)
!1910 = !DILocation(line: 215, column: 13, scope: !1416)
!1911 = !DILocation(line: 216, column: 76, scope: !1416)
!1912 = !DILocation(line: 216, column: 12, scope: !1416)
!1913 = !DILocation(line: 216, column: 10, scope: !1416)
!1914 = !DILocation(line: 217, column: 7, scope: !1915)
!1915 = distinct !DILexicalBlock(scope: !1416, file: !161, line: 217, column: 7)
!1916 = !DILocation(line: 217, column: 7, scope: !1416)
!1917 = !DILocation(line: 220, column: 12, scope: !1918)
!1918 = distinct !DILexicalBlock(scope: !1915, file: !161, line: 217, column: 27)
!1919 = !DILocation(line: 220, column: 5, scope: !1918)
!1920 = !DILocation(line: 246, column: 7, scope: !1921)
!1921 = distinct !DILexicalBlock(scope: !1416, file: !161, line: 246, column: 7)
!1922 = !DILocation(line: 246, column: 7, scope: !1416)
!1923 = !DILocation(line: 249, column: 12, scope: !1924)
!1924 = distinct !DILexicalBlock(scope: !1921, file: !161, line: 246, column: 27)
!1925 = !DILocation(line: 249, column: 5, scope: !1924)
!1926 = !DILocation(line: 252, column: 3, scope: !1416)
!1927 = !DILocation(line: 253, column: 1, scope: !1416)
!1928 = distinct !DISubprogram(name: "Demo1AccessKeyUnload", scope: !161, file: !161, line: 265, type: !1780, scopeLine: 268, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!1929 = !DILocalVariable(name: "ImageHandle", arg: 1, scope: !1928, file: !161, line: 266, type: !217)
!1930 = !DILocation(line: 266, column: 39, scope: !1928)
!1931 = !DILocalVariable(name: "Status", scope: !1928, file: !161, line: 269, type: !172)
!1932 = !DILocation(line: 269, column: 14, scope: !1928)
!1933 = !DILocation(line: 275, column: 8, scope: !1928)
!1934 = !DILocation(line: 275, column: 3, scope: !1928)
!1935 = !DILocation(line: 276, column: 10, scope: !1928)
!1936 = !DILocation(line: 276, column: 3, scope: !1928)
!1937 = distinct !DISubprogram(name: "IsValidAccessVariableHeader", scope: !3, file: !3, line: 50, type: !1938, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!1938 = !DISubroutineType(types: !1939)
!1939 = !{!59, !120, !120}
!1940 = !DILocalVariable(name: "Variable", arg: 1, scope: !1937, file: !3, line: 51, type: !120)
!1941 = !DILocation(line: 51, column: 40, scope: !1937)
!1942 = !DILocalVariable(name: "VariableStoreEnd", arg: 2, scope: !1937, file: !3, line: 52, type: !120)
!1943 = !DILocation(line: 52, column: 40, scope: !1937)
!1944 = !DILocation(line: 55, column: 8, scope: !1945)
!1945 = distinct !DILexicalBlock(scope: !1937, file: !3, line: 55, column: 7)
!1946 = !DILocation(line: 55, column: 17, scope: !1945)
!1947 = !DILocation(line: 55, column: 26, scope: !1945)
!1948 = !DILocation(line: 55, column: 30, scope: !1945)
!1949 = !DILocation(line: 55, column: 42, scope: !1945)
!1950 = !DILocation(line: 55, column: 39, scope: !1945)
!1951 = !DILocation(line: 55, column: 60, scope: !1945)
!1952 = !DILocation(line: 55, column: 64, scope: !1945)
!1953 = !DILocation(line: 55, column: 74, scope: !1945)
!1954 = !DILocation(line: 55, column: 82, scope: !1945)
!1955 = !DILocation(line: 55, column: 7, scope: !1937)
!1956 = !DILocation(line: 60, column: 5, scope: !1957)
!1957 = distinct !DILexicalBlock(scope: !1945, file: !3, line: 55, column: 101)
!1958 = !DILocation(line: 62, column: 3, scope: !1937)
!1959 = !DILocation(line: 63, column: 1, scope: !1937)
!1960 = distinct !DISubprogram(name: "DataSizeOfAccessVariable", scope: !3, file: !3, line: 76, type: !1961, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!1961 = !DISubroutineType(types: !1962)
!1962 = !{!67, !120, !59}
!1963 = !DILocalVariable(name: "Variable", arg: 1, scope: !1960, file: !3, line: 77, type: !120)
!1964 = !DILocation(line: 77, column: 40, scope: !1960)
!1965 = !DILocalVariable(name: "AuthFormat", arg: 2, scope: !1960, file: !3, line: 78, type: !59)
!1966 = !DILocation(line: 78, column: 39, scope: !1960)
!1967 = !DILocalVariable(name: "AuthVariable", scope: !1960, file: !3, line: 81, type: !70)
!1968 = !DILocation(line: 81, column: 35, scope: !1960)
!1969 = !DILocation(line: 83, column: 51, scope: !1960)
!1970 = !DILocation(line: 83, column: 18, scope: !1960)
!1971 = !DILocation(line: 83, column: 16, scope: !1960)
!1972 = !DILocation(line: 84, column: 7, scope: !1973)
!1973 = distinct !DILexicalBlock(scope: !1960, file: !3, line: 84, column: 7)
!1974 = !DILocation(line: 84, column: 7, scope: !1960)
!1975 = !DILocation(line: 85, column: 10, scope: !1976)
!1976 = distinct !DILexicalBlock(scope: !1977, file: !3, line: 85, column: 9)
!1977 = distinct !DILexicalBlock(scope: !1973, file: !3, line: 84, column: 19)
!1978 = !DILocation(line: 85, column: 24, scope: !1976)
!1979 = !DILocation(line: 85, column: 30, scope: !1976)
!1980 = !DILocation(line: 85, column: 46, scope: !1976)
!1981 = !DILocation(line: 86, column: 10, scope: !1976)
!1982 = !DILocation(line: 86, column: 24, scope: !1976)
!1983 = !DILocation(line: 86, column: 33, scope: !1976)
!1984 = !DILocation(line: 86, column: 50, scope: !1976)
!1985 = !DILocation(line: 87, column: 10, scope: !1976)
!1986 = !DILocation(line: 87, column: 24, scope: !1976)
!1987 = !DILocation(line: 87, column: 33, scope: !1976)
!1988 = !DILocation(line: 87, column: 50, scope: !1976)
!1989 = !DILocation(line: 88, column: 10, scope: !1976)
!1990 = !DILocation(line: 88, column: 24, scope: !1976)
!1991 = !DILocation(line: 88, column: 35, scope: !1976)
!1992 = !DILocation(line: 85, column: 9, scope: !1977)
!1993 = !DILocation(line: 90, column: 7, scope: !1994)
!1994 = distinct !DILexicalBlock(scope: !1976, file: !3, line: 89, column: 5)
!1995 = !DILocation(line: 93, column: 19, scope: !1977)
!1996 = !DILocation(line: 93, column: 33, scope: !1977)
!1997 = !DILocation(line: 93, column: 12, scope: !1977)
!1998 = !DILocation(line: 93, column: 5, scope: !1977)
!1999 = !DILocation(line: 95, column: 10, scope: !2000)
!2000 = distinct !DILexicalBlock(scope: !2001, file: !3, line: 95, column: 9)
!2001 = distinct !DILexicalBlock(scope: !1973, file: !3, line: 94, column: 10)
!2002 = !DILocation(line: 95, column: 20, scope: !2000)
!2003 = !DILocation(line: 95, column: 26, scope: !2000)
!2004 = !DILocation(line: 95, column: 42, scope: !2000)
!2005 = !DILocation(line: 96, column: 10, scope: !2000)
!2006 = !DILocation(line: 96, column: 20, scope: !2000)
!2007 = !DILocation(line: 96, column: 29, scope: !2000)
!2008 = !DILocation(line: 96, column: 46, scope: !2000)
!2009 = !DILocation(line: 97, column: 10, scope: !2000)
!2010 = !DILocation(line: 97, column: 20, scope: !2000)
!2011 = !DILocation(line: 97, column: 29, scope: !2000)
!2012 = !DILocation(line: 97, column: 46, scope: !2000)
!2013 = !DILocation(line: 98, column: 10, scope: !2000)
!2014 = !DILocation(line: 98, column: 20, scope: !2000)
!2015 = !DILocation(line: 98, column: 31, scope: !2000)
!2016 = !DILocation(line: 95, column: 9, scope: !2001)
!2017 = !DILocation(line: 100, column: 7, scope: !2018)
!2018 = distinct !DILexicalBlock(scope: !2000, file: !3, line: 99, column: 5)
!2019 = !DILocation(line: 103, column: 19, scope: !2001)
!2020 = !DILocation(line: 103, column: 29, scope: !2001)
!2021 = !DILocation(line: 103, column: 12, scope: !2001)
!2022 = !DILocation(line: 103, column: 5, scope: !2001)
!2023 = !DILocation(line: 105, column: 1, scope: !1960)
!2024 = distinct !DISubprogram(name: "NameSizeOfAccessVariable", scope: !3, file: !3, line: 117, type: !1961, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!2025 = !DILocalVariable(name: "Variable", arg: 1, scope: !2024, file: !3, line: 118, type: !120)
!2026 = !DILocation(line: 118, column: 40, scope: !2024)
!2027 = !DILocalVariable(name: "AuthFormat", arg: 2, scope: !2024, file: !3, line: 119, type: !59)
!2028 = !DILocation(line: 119, column: 39, scope: !2024)
!2029 = !DILocalVariable(name: "AuthVariable", scope: !2024, file: !3, line: 122, type: !70)
!2030 = !DILocation(line: 122, column: 35, scope: !2024)
!2031 = !DILocation(line: 124, column: 51, scope: !2024)
!2032 = !DILocation(line: 124, column: 18, scope: !2024)
!2033 = !DILocation(line: 124, column: 16, scope: !2024)
!2034 = !DILocation(line: 125, column: 7, scope: !2035)
!2035 = distinct !DILexicalBlock(scope: !2024, file: !3, line: 125, column: 7)
!2036 = !DILocation(line: 125, column: 7, scope: !2024)
!2037 = !DILocation(line: 126, column: 10, scope: !2038)
!2038 = distinct !DILexicalBlock(scope: !2039, file: !3, line: 126, column: 9)
!2039 = distinct !DILexicalBlock(scope: !2035, file: !3, line: 125, column: 19)
!2040 = !DILocation(line: 126, column: 24, scope: !2038)
!2041 = !DILocation(line: 126, column: 30, scope: !2038)
!2042 = !DILocation(line: 126, column: 46, scope: !2038)
!2043 = !DILocation(line: 127, column: 10, scope: !2038)
!2044 = !DILocation(line: 127, column: 24, scope: !2038)
!2045 = !DILocation(line: 127, column: 33, scope: !2038)
!2046 = !DILocation(line: 127, column: 50, scope: !2038)
!2047 = !DILocation(line: 128, column: 10, scope: !2038)
!2048 = !DILocation(line: 128, column: 24, scope: !2038)
!2049 = !DILocation(line: 128, column: 33, scope: !2038)
!2050 = !DILocation(line: 128, column: 50, scope: !2038)
!2051 = !DILocation(line: 129, column: 10, scope: !2038)
!2052 = !DILocation(line: 129, column: 24, scope: !2038)
!2053 = !DILocation(line: 129, column: 35, scope: !2038)
!2054 = !DILocation(line: 126, column: 9, scope: !2039)
!2055 = !DILocation(line: 131, column: 7, scope: !2056)
!2056 = distinct !DILexicalBlock(scope: !2038, file: !3, line: 130, column: 5)
!2057 = !DILocation(line: 134, column: 19, scope: !2039)
!2058 = !DILocation(line: 134, column: 33, scope: !2039)
!2059 = !DILocation(line: 134, column: 12, scope: !2039)
!2060 = !DILocation(line: 134, column: 5, scope: !2039)
!2061 = !DILocation(line: 136, column: 10, scope: !2062)
!2062 = distinct !DILexicalBlock(scope: !2063, file: !3, line: 136, column: 9)
!2063 = distinct !DILexicalBlock(scope: !2035, file: !3, line: 135, column: 10)
!2064 = !DILocation(line: 136, column: 20, scope: !2062)
!2065 = !DILocation(line: 136, column: 26, scope: !2062)
!2066 = !DILocation(line: 136, column: 42, scope: !2062)
!2067 = !DILocation(line: 137, column: 10, scope: !2062)
!2068 = !DILocation(line: 137, column: 20, scope: !2062)
!2069 = !DILocation(line: 137, column: 29, scope: !2062)
!2070 = !DILocation(line: 137, column: 46, scope: !2062)
!2071 = !DILocation(line: 138, column: 10, scope: !2062)
!2072 = !DILocation(line: 138, column: 20, scope: !2062)
!2073 = !DILocation(line: 138, column: 29, scope: !2062)
!2074 = !DILocation(line: 138, column: 46, scope: !2062)
!2075 = !DILocation(line: 139, column: 10, scope: !2062)
!2076 = !DILocation(line: 139, column: 20, scope: !2062)
!2077 = !DILocation(line: 139, column: 31, scope: !2062)
!2078 = !DILocation(line: 136, column: 9, scope: !2063)
!2079 = !DILocation(line: 141, column: 7, scope: !2080)
!2080 = distinct !DILexicalBlock(scope: !2062, file: !3, line: 140, column: 5)
!2081 = !DILocation(line: 143, column: 19, scope: !2063)
!2082 = !DILocation(line: 143, column: 29, scope: !2063)
!2083 = !DILocation(line: 143, column: 12, scope: !2063)
!2084 = !DILocation(line: 143, column: 5, scope: !2063)
!2085 = !DILocation(line: 145, column: 1, scope: !2024)
!2086 = distinct !DISubprogram(name: "GetAccessVariableHeaderSize", scope: !3, file: !3, line: 157, type: !2087, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!2087 = !DISubroutineType(types: !2088)
!2088 = !{!67, !59}
!2089 = !DILocalVariable(name: "AuthFormat", arg: 1, scope: !2086, file: !3, line: 158, type: !59)
!2090 = !DILocation(line: 158, column: 39, scope: !2086)
!2091 = !DILocalVariable(name: "Value", scope: !2086, file: !3, line: 161, type: !67)
!2092 = !DILocation(line: 161, column: 10, scope: !2086)
!2093 = !DILocation(line: 163, column: 7, scope: !2094)
!2094 = distinct !DILexicalBlock(scope: !2086, file: !3, line: 163, column: 7)
!2095 = !DILocation(line: 163, column: 7, scope: !2086)
!2096 = !DILocation(line: 164, column: 11, scope: !2097)
!2097 = distinct !DILexicalBlock(scope: !2094, file: !3, line: 163, column: 19)
!2098 = !DILocation(line: 165, column: 3, scope: !2097)
!2099 = !DILocation(line: 166, column: 11, scope: !2100)
!2100 = distinct !DILexicalBlock(scope: !2094, file: !3, line: 165, column: 10)
!2101 = !DILocation(line: 168, column: 10, scope: !2086)
!2102 = !DILocation(line: 168, column: 3, scope: !2086)
!2103 = distinct !DISubprogram(name: "GetAccessVariableNamePtr", scope: !3, file: !3, line: 182, type: !2104, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!2104 = !DISubroutineType(types: !2105)
!2105 = !{!117, !120, !59}
!2106 = !DILocalVariable(name: "Variable", arg: 1, scope: !2103, file: !3, line: 183, type: !120)
!2107 = !DILocation(line: 183, column: 40, scope: !2103)
!2108 = !DILocalVariable(name: "AuthFormat", arg: 2, scope: !2103, file: !3, line: 184, type: !59)
!2109 = !DILocation(line: 184, column: 39, scope: !2103)
!2110 = !DILocation(line: 187, column: 28, scope: !2103)
!2111 = !DILocation(line: 187, column: 21, scope: !2103)
!2112 = !DILocation(line: 187, column: 68, scope: !2103)
!2113 = !DILocation(line: 187, column: 39, scope: !2103)
!2114 = !DILocation(line: 187, column: 37, scope: !2103)
!2115 = !DILocation(line: 187, column: 10, scope: !2103)
!2116 = !DILocation(line: 187, column: 3, scope: !2103)
!2117 = distinct !DISubprogram(name: "GetAccessVariableDataPtr", scope: !3, file: !3, line: 201, type: !2118, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!2118 = !DISubroutineType(types: !2119)
!2119 = !{!119, !120, !59}
!2120 = !DILocalVariable(name: "Variable", arg: 1, scope: !2117, file: !3, line: 202, type: !120)
!2121 = !DILocation(line: 202, column: 40, scope: !2117)
!2122 = !DILocalVariable(name: "AuthFormat", arg: 2, scope: !2117, file: !3, line: 203, type: !59)
!2123 = !DILocation(line: 203, column: 39, scope: !2117)
!2124 = !DILocalVariable(name: "Value", scope: !2117, file: !3, line: 206, type: !67)
!2125 = !DILocation(line: 206, column: 10, scope: !2117)
!2126 = !DILocation(line: 211, column: 46, scope: !2117)
!2127 = !DILocation(line: 211, column: 56, scope: !2117)
!2128 = !DILocation(line: 211, column: 20, scope: !2117)
!2129 = !DILocation(line: 211, column: 13, scope: !2117)
!2130 = !DILocation(line: 211, column: 10, scope: !2117)
!2131 = !DILocation(line: 212, column: 38, scope: !2117)
!2132 = !DILocation(line: 212, column: 48, scope: !2117)
!2133 = !DILocation(line: 212, column: 12, scope: !2117)
!2134 = !DILocation(line: 212, column: 9, scope: !2117)
!2135 = !DILocation(line: 213, column: 9, scope: !2117)
!2136 = !DILocation(line: 215, column: 19, scope: !2117)
!2137 = !DILocation(line: 215, column: 10, scope: !2117)
!2138 = !DILocation(line: 215, column: 3, scope: !2117)
!2139 = distinct !DISubprogram(name: "GetNextAccessVariablePtr", scope: !3, file: !3, line: 229, type: !2140, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!2140 = !DISubroutineType(types: !2141)
!2141 = !{!120, !120, !59}
!2142 = !DILocalVariable(name: "Variable", arg: 1, scope: !2139, file: !3, line: 230, type: !120)
!2143 = !DILocation(line: 230, column: 40, scope: !2139)
!2144 = !DILocalVariable(name: "AuthFormat", arg: 2, scope: !2139, file: !3, line: 231, type: !59)
!2145 = !DILocation(line: 231, column: 39, scope: !2139)
!2146 = !DILocalVariable(name: "Value", scope: !2139, file: !3, line: 234, type: !67)
!2147 = !DILocation(line: 234, column: 10, scope: !2139)
!2148 = !DILocation(line: 236, column: 46, scope: !2139)
!2149 = !DILocation(line: 236, column: 56, scope: !2139)
!2150 = !DILocation(line: 236, column: 20, scope: !2139)
!2151 = !DILocation(line: 236, column: 13, scope: !2139)
!2152 = !DILocation(line: 236, column: 10, scope: !2139)
!2153 = !DILocation(line: 237, column: 38, scope: !2139)
!2154 = !DILocation(line: 237, column: 48, scope: !2139)
!2155 = !DILocation(line: 237, column: 12, scope: !2139)
!2156 = !DILocation(line: 237, column: 9, scope: !2139)
!2157 = !DILocation(line: 238, column: 9, scope: !2139)
!2158 = !DILocation(line: 243, column: 36, scope: !2139)
!2159 = !DILocation(line: 243, column: 10, scope: !2139)
!2160 = !DILocation(line: 243, column: 3, scope: !2139)
!2161 = distinct !DISubprogram(name: "GetAccessStartPointer", scope: !3, file: !3, line: 255, type: !2162, scopeLine: 258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!2162 = !DISubroutineType(types: !2163)
!2163 = !{!120, !140}
!2164 = !DILocalVariable(name: "VarStoreHeader", arg: 1, scope: !2161, file: !3, line: 256, type: !140)
!2165 = !DILocation(line: 256, column: 40, scope: !2161)
!2166 = !DILocation(line: 262, column: 36, scope: !2161)
!2167 = !DILocation(line: 262, column: 10, scope: !2161)
!2168 = !DILocation(line: 262, column: 3, scope: !2161)
!2169 = distinct !DISubprogram(name: "GetAccessEndPointer", scope: !3, file: !3, line: 276, type: !2162, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!2170 = !DILocalVariable(name: "VarStoreHeader", arg: 1, scope: !2169, file: !3, line: 277, type: !140)
!2171 = !DILocation(line: 277, column: 40, scope: !2169)
!2172 = !DILocation(line: 283, column: 36, scope: !2169)
!2173 = !DILocation(line: 283, column: 10, scope: !2169)
!2174 = !DILocation(line: 283, column: 3, scope: !2169)
!2175 = distinct !DISubprogram(name: "mineInitEmuNonVolatileVariableStore", scope: !3, file: !3, line: 296, type: !2176, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!2176 = !DISubroutineType(types: !2177)
!2177 = !{!172, !327}
!2178 = !DILocalVariable(name: "VariableStoreBase", arg: 1, scope: !2175, file: !3, line: 297, type: !327)
!2179 = !DILocation(line: 297, column: 40, scope: !2175)
!2180 = !DILocalVariable(name: "VariableStore", scope: !2175, file: !3, line: 300, type: !140)
!2181 = !DILocation(line: 300, column: 27, scope: !2175)
!2182 = !DILocalVariable(name: "VariableStoreLength", scope: !2175, file: !3, line: 301, type: !82)
!2183 = !DILocation(line: 301, column: 26, scope: !2175)
!2184 = !DILocation(line: 302, column: 3, scope: !2185)
!2185 = distinct !DILexicalBlock(scope: !2186, file: !3, line: 302, column: 3)
!2186 = distinct !DILexicalBlock(scope: !2175, file: !3, line: 302, column: 3)
!2187 = !DILocation(line: 302, column: 3, scope: !2186)
!2188 = !DILocation(line: 308, column: 49, scope: !2175)
!2189 = !DILocation(line: 308, column: 42, scope: !2175)
!2190 = !DILocation(line: 308, column: 17, scope: !2175)
!2191 = !DILocation(line: 308, column: 15, scope: !2175)
!2192 = !DILocation(line: 310, column: 9, scope: !2193)
!2193 = distinct !DILexicalBlock(scope: !2175, file: !3, line: 310, column: 9)
!2194 = !DILocation(line: 310, column: 23, scope: !2193)
!2195 = !DILocation(line: 310, column: 9, scope: !2175)
!2196 = !DILocation(line: 311, column: 7, scope: !2197)
!2197 = distinct !DILexicalBlock(scope: !2193, file: !3, line: 310, column: 32)
!2198 = !DILocation(line: 314, column: 11, scope: !2175)
!2199 = !DILocation(line: 314, column: 3, scope: !2175)
!2200 = !DILocation(line: 314, column: 26, scope: !2175)
!2201 = !DILocation(line: 321, column: 30, scope: !2175)
!2202 = !DILocation(line: 321, column: 3, scope: !2175)
!2203 = !DILocation(line: 321, column: 18, scope: !2175)
!2204 = !DILocation(line: 321, column: 28, scope: !2175)
!2205 = !DILocation(line: 322, column: 3, scope: !2175)
!2206 = !DILocation(line: 322, column: 18, scope: !2175)
!2207 = !DILocation(line: 322, column: 28, scope: !2175)
!2208 = !DILocation(line: 323, column: 3, scope: !2175)
!2209 = !DILocation(line: 323, column: 18, scope: !2175)
!2210 = !DILocation(line: 323, column: 28, scope: !2175)
!2211 = !DILocation(line: 324, column: 3, scope: !2175)
!2212 = !DILocation(line: 324, column: 18, scope: !2175)
!2213 = !DILocation(line: 324, column: 28, scope: !2175)
!2214 = !DILocation(line: 325, column: 3, scope: !2175)
!2215 = !DILocation(line: 325, column: 18, scope: !2175)
!2216 = !DILocation(line: 325, column: 28, scope: !2175)
!2217 = !DILocation(line: 327, column: 53, scope: !2175)
!2218 = !DILocation(line: 327, column: 46, scope: !2175)
!2219 = !DILocation(line: 327, column: 4, scope: !2175)
!2220 = !DILocation(line: 327, column: 22, scope: !2175)
!2221 = !DILocation(line: 329, column: 3, scope: !2175)
!2222 = !DILocation(line: 330, column: 1, scope: !2175)
!2223 = distinct !DISubprogram(name: "mineInitNonVolatileVariableStore", scope: !3, file: !3, line: 341, type: !2224, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!2224 = !DISubroutineType(types: !2225)
!2225 = !{!172}
!2226 = !DILocalVariable(name: "Variable", scope: !2223, file: !3, line: 345, type: !120)
!2227 = !DILocation(line: 345, column: 33, scope: !2223)
!2228 = !DILocalVariable(name: "NextVariable", scope: !2223, file: !3, line: 346, type: !120)
!2229 = !DILocation(line: 346, column: 33, scope: !2223)
!2230 = !DILocalVariable(name: "VariableStoreBase", scope: !2223, file: !3, line: 347, type: !150)
!2231 = !DILocation(line: 347, column: 25, scope: !2223)
!2232 = !DILocalVariable(name: "VariableSize", scope: !2223, file: !3, line: 348, type: !67)
!2233 = !DILocation(line: 348, column: 25, scope: !2223)
!2234 = !DILocalVariable(name: "Status", scope: !2223, file: !3, line: 349, type: !172)
!2235 = !DILocation(line: 349, column: 25, scope: !2223)
!2236 = !DILocation(line: 351, column: 12, scope: !2223)
!2237 = !DILocation(line: 351, column: 10, scope: !2223)
!2238 = !DILocation(line: 352, column: 45, scope: !2223)
!2239 = !DILocation(line: 352, column: 3, scope: !2223)
!2240 = !DILocation(line: 353, column: 7, scope: !2241)
!2241 = distinct !DILexicalBlock(scope: !2223, file: !3, line: 353, column: 7)
!2242 = !DILocation(line: 353, column: 7, scope: !2223)
!2243 = !DILocation(line: 354, column: 5, scope: !2244)
!2244 = distinct !DILexicalBlock(scope: !2241, file: !3, line: 353, column: 27)
!2245 = !DILocation(line: 355, column: 12, scope: !2244)
!2246 = !DILocation(line: 355, column: 5, scope: !2244)
!2247 = !DILocation(line: 357, column: 3, scope: !2223)
!2248 = !DILocation(line: 357, column: 29, scope: !2223)
!2249 = !DILocation(line: 357, column: 44, scope: !2223)
!2250 = !DILocation(line: 357, column: 54, scope: !2223)
!2251 = !DILocation(line: 359, column: 70, scope: !2223)
!2252 = !DILocation(line: 359, column: 3, scope: !2223)
!2253 = !DILocation(line: 359, column: 29, scope: !2223)
!2254 = !DILocation(line: 359, column: 44, scope: !2223)
!2255 = !DILocation(line: 359, column: 68, scope: !2223)
!2256 = !DILocation(line: 360, column: 102, scope: !2223)
!2257 = !DILocation(line: 360, column: 70, scope: !2223)
!2258 = !DILocation(line: 360, column: 68, scope: !2223)
!2259 = !DILocation(line: 361, column: 3, scope: !2223)
!2260 = !DILocation(line: 361, column: 29, scope: !2223)
!2261 = !DILocation(line: 361, column: 44, scope: !2223)
!2262 = !DILocation(line: 361, column: 68, scope: !2223)
!2263 = !DILocation(line: 362, column: 3, scope: !2223)
!2264 = !DILocation(line: 362, column: 29, scope: !2223)
!2265 = !DILocation(line: 362, column: 49, scope: !2223)
!2266 = !DILocation(line: 363, column: 3, scope: !2223)
!2267 = !DILocation(line: 363, column: 29, scope: !2223)
!2268 = !DILocation(line: 363, column: 49, scope: !2223)
!2269 = !DILocation(line: 368, column: 37, scope: !2223)
!2270 = !DILocation(line: 368, column: 14, scope: !2223)
!2271 = !DILocation(line: 368, column: 12, scope: !2223)
!2272 = !DILocation(line: 369, column: 3, scope: !2223)
!2273 = !DILocation(line: 369, column: 39, scope: !2223)
!2274 = !DILocation(line: 369, column: 70, scope: !2223)
!2275 = !DILocation(line: 369, column: 49, scope: !2223)
!2276 = !DILocation(line: 369, column: 10, scope: !2223)
!2277 = !DILocation(line: 370, column: 46, scope: !2278)
!2278 = distinct !DILexicalBlock(scope: !2223, file: !3, line: 369, column: 93)
!2279 = !DILocation(line: 370, column: 56, scope: !2278)
!2280 = !DILocation(line: 370, column: 82, scope: !2278)
!2281 = !DILocation(line: 370, column: 97, scope: !2278)
!2282 = !DILocation(line: 370, column: 20, scope: !2278)
!2283 = !DILocation(line: 370, column: 18, scope: !2278)
!2284 = !DILocation(line: 371, column: 27, scope: !2278)
!2285 = !DILocation(line: 371, column: 20, scope: !2278)
!2286 = !DILocation(line: 371, column: 49, scope: !2278)
!2287 = !DILocation(line: 371, column: 42, scope: !2278)
!2288 = !DILocation(line: 371, column: 40, scope: !2278)
!2289 = !DILocation(line: 371, column: 18, scope: !2278)
!2290 = !DILocation(line: 372, column: 10, scope: !2291)
!2291 = distinct !DILexicalBlock(scope: !2278, file: !3, line: 372, column: 9)
!2292 = !DILocation(line: 372, column: 20, scope: !2291)
!2293 = !DILocation(line: 372, column: 31, scope: !2291)
!2294 = !DILocation(line: 372, column: 99, scope: !2291)
!2295 = !DILocation(line: 372, column: 9, scope: !2278)
!2296 = !DILocation(line: 373, column: 59, scope: !2297)
!2297 = distinct !DILexicalBlock(scope: !2291, file: !3, line: 372, column: 168)
!2298 = !DILocation(line: 373, column: 7, scope: !2297)
!2299 = !DILocation(line: 373, column: 33, scope: !2297)
!2300 = !DILocation(line: 373, column: 56, scope: !2297)
!2301 = !DILocation(line: 374, column: 5, scope: !2297)
!2302 = !DILocation(line: 375, column: 60, scope: !2303)
!2303 = distinct !DILexicalBlock(scope: !2291, file: !3, line: 374, column: 12)
!2304 = !DILocation(line: 375, column: 7, scope: !2303)
!2305 = !DILocation(line: 375, column: 33, scope: !2303)
!2306 = !DILocation(line: 375, column: 57, scope: !2303)
!2307 = !DILocation(line: 378, column: 16, scope: !2278)
!2308 = !DILocation(line: 378, column: 14, scope: !2278)
!2309 = distinct !{!2309, !2272, !2310}
!2310 = !DILocation(line: 379, column: 3, scope: !2223)
!2311 = !DILocation(line: 381, column: 68, scope: !2223)
!2312 = !DILocation(line: 381, column: 61, scope: !2223)
!2313 = !DILocation(line: 381, column: 86, scope: !2223)
!2314 = !DILocation(line: 381, column: 79, scope: !2223)
!2315 = !DILocation(line: 381, column: 77, scope: !2223)
!2316 = !DILocation(line: 381, column: 3, scope: !2223)
!2317 = !DILocation(line: 381, column: 29, scope: !2223)
!2318 = !DILocation(line: 381, column: 59, scope: !2223)
!2319 = !DILocation(line: 382, column: 3, scope: !2223)
!2320 = !DILocation(line: 383, column: 1, scope: !2223)
!2321 = distinct !DISubprogram(name: "GetAccessVendorGuidPtr", scope: !3, file: !3, line: 396, type: !2322, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!2322 = !DISubroutineType(types: !2323)
!2323 = !{!1575, !120, !59}
!2324 = !DILocalVariable(name: "Variable", arg: 1, scope: !2321, file: !3, line: 397, type: !120)
!2325 = !DILocation(line: 397, column: 40, scope: !2321)
!2326 = !DILocalVariable(name: "AuthFormat", arg: 2, scope: !2321, file: !3, line: 398, type: !59)
!2327 = !DILocation(line: 398, column: 39, scope: !2321)
!2328 = !DILocalVariable(name: "AuthVariable", scope: !2321, file: !3, line: 401, type: !70)
!2329 = !DILocation(line: 401, column: 35, scope: !2321)
!2330 = !DILocation(line: 403, column: 51, scope: !2321)
!2331 = !DILocation(line: 403, column: 18, scope: !2321)
!2332 = !DILocation(line: 403, column: 16, scope: !2321)
!2333 = !DILocation(line: 404, column: 7, scope: !2334)
!2334 = distinct !DILexicalBlock(scope: !2321, file: !3, line: 404, column: 7)
!2335 = !DILocation(line: 404, column: 7, scope: !2321)
!2336 = !DILocation(line: 405, column: 13, scope: !2337)
!2337 = distinct !DILexicalBlock(scope: !2334, file: !3, line: 404, column: 19)
!2338 = !DILocation(line: 405, column: 27, scope: !2337)
!2339 = !DILocation(line: 405, column: 5, scope: !2337)
!2340 = !DILocation(line: 407, column: 13, scope: !2341)
!2341 = distinct !DILexicalBlock(scope: !2334, file: !3, line: 406, column: 10)
!2342 = !DILocation(line: 407, column: 23, scope: !2341)
!2343 = !DILocation(line: 407, column: 5, scope: !2341)
!2344 = !DILocation(line: 409, column: 1, scope: !2321)
!2345 = distinct !DISubprogram(name: "AtRuntime", scope: !3, file: !3, line: 418, type: !1385, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!2346 = !DILocation(line: 422, column: 3, scope: !2345)
!2347 = distinct !DISubprogram(name: "UpdateAccessVariableInfo", scope: !3, file: !3, line: 447, type: !2348, scopeLine: 457, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!2348 = !DISubroutineType(types: !2349)
!2349 = !{null, !117, !1575, !59, !59, !59, !59, !59, !2350}
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64)
!2351 = !DILocalVariable(name: "VariableName", arg: 1, scope: !2347, file: !3, line: 448, type: !117)
!2352 = !DILocation(line: 448, column: 40, scope: !2347)
!2353 = !DILocalVariable(name: "VendorGuid", arg: 2, scope: !2347, file: !3, line: 449, type: !1575)
!2354 = !DILocation(line: 449, column: 40, scope: !2347)
!2355 = !DILocalVariable(name: "Volatile", arg: 3, scope: !2347, file: !3, line: 450, type: !59)
!2356 = !DILocation(line: 450, column: 39, scope: !2347)
!2357 = !DILocalVariable(name: "Read", arg: 4, scope: !2347, file: !3, line: 451, type: !59)
!2358 = !DILocation(line: 451, column: 39, scope: !2347)
!2359 = !DILocalVariable(name: "Write", arg: 5, scope: !2347, file: !3, line: 452, type: !59)
!2360 = !DILocation(line: 452, column: 39, scope: !2347)
!2361 = !DILocalVariable(name: "Delete", arg: 6, scope: !2347, file: !3, line: 453, type: !59)
!2362 = !DILocation(line: 453, column: 39, scope: !2347)
!2363 = !DILocalVariable(name: "Cache", arg: 7, scope: !2347, file: !3, line: 454, type: !59)
!2364 = !DILocation(line: 454, column: 39, scope: !2347)
!2365 = !DILocalVariable(name: "VariableInfo", arg: 8, scope: !2347, file: !3, line: 455, type: !2350)
!2366 = !DILocation(line: 455, column: 41, scope: !2347)
!2367 = !DILocalVariable(name: "Entry", scope: !2347, file: !3, line: 458, type: !224)
!2368 = !DILocation(line: 458, column: 25, scope: !2347)
!2369 = !DILocation(line: 461, column: 10, scope: !2370)
!2370 = distinct !DILexicalBlock(scope: !2371, file: !3, line: 461, column: 9)
!2371 = distinct !DILexicalBlock(scope: !2372, file: !3, line: 460, column: 13)
!2372 = distinct !DILexicalBlock(scope: !2347, file: !3, line: 460, column: 7)
!2373 = !DILocation(line: 461, column: 23, scope: !2370)
!2374 = !DILocation(line: 461, column: 32, scope: !2370)
!2375 = !DILocation(line: 461, column: 36, scope: !2370)
!2376 = !DILocation(line: 461, column: 47, scope: !2370)
!2377 = !DILocation(line: 461, column: 56, scope: !2370)
!2378 = !DILocation(line: 461, column: 60, scope: !2370)
!2379 = !DILocation(line: 461, column: 73, scope: !2370)
!2380 = !DILocation(line: 461, column: 9, scope: !2371)
!2381 = !DILocation(line: 462, column: 7, scope: !2382)
!2382 = distinct !DILexicalBlock(scope: !2370, file: !3, line: 461, column: 83)
!2383 = !DILocation(line: 465, column: 9, scope: !2384)
!2384 = distinct !DILexicalBlock(scope: !2371, file: !3, line: 465, column: 9)
!2385 = !DILocation(line: 465, column: 9, scope: !2371)
!2386 = !DILocation(line: 467, column: 7, scope: !2387)
!2387 = distinct !DILexicalBlock(scope: !2384, file: !3, line: 465, column: 23)
!2388 = !DILocation(line: 470, column: 10, scope: !2389)
!2389 = distinct !DILexicalBlock(scope: !2371, file: !3, line: 470, column: 9)
!2390 = !DILocation(line: 470, column: 9, scope: !2389)
!2391 = !DILocation(line: 470, column: 23, scope: !2389)
!2392 = !DILocation(line: 470, column: 9, scope: !2371)
!2393 = !DILocation(line: 475, column: 23, scope: !2394)
!2394 = distinct !DILexicalBlock(scope: !2389, file: !3, line: 470, column: 32)
!2395 = !DILocation(line: 475, column: 8, scope: !2394)
!2396 = !DILocation(line: 475, column: 21, scope: !2394)
!2397 = !DILocation(line: 476, column: 7, scope: !2398)
!2398 = distinct !DILexicalBlock(scope: !2399, file: !3, line: 476, column: 7)
!2399 = distinct !DILexicalBlock(scope: !2394, file: !3, line: 476, column: 7)
!2400 = !DILocation(line: 476, column: 7, scope: !2399)
!2401 = !DILocation(line: 478, column: 20, scope: !2394)
!2402 = !DILocation(line: 478, column: 19, scope: !2394)
!2403 = !DILocation(line: 478, column: 35, scope: !2394)
!2404 = !DILocation(line: 478, column: 47, scope: !2394)
!2405 = !DILocation(line: 478, column: 7, scope: !2394)
!2406 = !DILocation(line: 479, column: 58, scope: !2394)
!2407 = !DILocation(line: 479, column: 49, scope: !2394)
!2408 = !DILocation(line: 479, column: 31, scope: !2394)
!2409 = !DILocation(line: 479, column: 9, scope: !2394)
!2410 = !DILocation(line: 479, column: 8, scope: !2394)
!2411 = !DILocation(line: 479, column: 24, scope: !2394)
!2412 = !DILocation(line: 479, column: 29, scope: !2394)
!2413 = !DILocation(line: 480, column: 7, scope: !2414)
!2414 = distinct !DILexicalBlock(scope: !2415, file: !3, line: 480, column: 7)
!2415 = distinct !DILexicalBlock(scope: !2394, file: !3, line: 480, column: 7)
!2416 = !DILocation(line: 480, column: 7, scope: !2415)
!2417 = !DILocation(line: 481, column: 18, scope: !2394)
!2418 = !DILocation(line: 481, column: 17, scope: !2394)
!2419 = !DILocation(line: 481, column: 33, scope: !2394)
!2420 = !DILocation(line: 481, column: 48, scope: !2394)
!2421 = !DILocation(line: 481, column: 39, scope: !2394)
!2422 = !DILocation(line: 481, column: 61, scope: !2394)
!2423 = !DILocation(line: 481, column: 79, scope: !2394)
!2424 = !DILocation(line: 481, column: 7, scope: !2394)
!2425 = !DILocation(line: 482, column: 35, scope: !2394)
!2426 = !DILocation(line: 482, column: 9, scope: !2394)
!2427 = !DILocation(line: 482, column: 8, scope: !2394)
!2428 = !DILocation(line: 482, column: 24, scope: !2394)
!2429 = !DILocation(line: 482, column: 33, scope: !2394)
!2430 = !DILocation(line: 483, column: 5, scope: !2394)
!2431 = !DILocation(line: 485, column: 20, scope: !2432)
!2432 = distinct !DILexicalBlock(scope: !2371, file: !3, line: 485, column: 5)
!2433 = !DILocation(line: 485, column: 19, scope: !2432)
!2434 = !DILocation(line: 485, column: 16, scope: !2432)
!2435 = !DILocation(line: 485, column: 10, scope: !2432)
!2436 = !DILocation(line: 485, column: 35, scope: !2437)
!2437 = distinct !DILexicalBlock(scope: !2432, file: !3, line: 485, column: 5)
!2438 = !DILocation(line: 485, column: 41, scope: !2437)
!2439 = !DILocation(line: 485, column: 5, scope: !2432)
!2440 = !DILocation(line: 486, column: 24, scope: !2441)
!2441 = distinct !DILexicalBlock(scope: !2442, file: !3, line: 486, column: 11)
!2442 = distinct !DILexicalBlock(scope: !2437, file: !3, line: 485, column: 71)
!2443 = !DILocation(line: 486, column: 37, scope: !2441)
!2444 = !DILocation(line: 486, column: 44, scope: !2441)
!2445 = !DILocation(line: 486, column: 11, scope: !2441)
!2446 = !DILocation(line: 486, column: 11, scope: !2442)
!2447 = !DILocation(line: 487, column: 21, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2449, file: !3, line: 487, column: 13)
!2449 = distinct !DILexicalBlock(scope: !2441, file: !3, line: 486, column: 57)
!2450 = !DILocation(line: 487, column: 35, scope: !2448)
!2451 = !DILocation(line: 487, column: 42, scope: !2448)
!2452 = !DILocation(line: 487, column: 13, scope: !2448)
!2453 = !DILocation(line: 487, column: 48, scope: !2448)
!2454 = !DILocation(line: 487, column: 13, scope: !2449)
!2455 = !DILocation(line: 488, column: 15, scope: !2456)
!2456 = distinct !DILexicalBlock(scope: !2457, file: !3, line: 488, column: 15)
!2457 = distinct !DILexicalBlock(scope: !2448, file: !3, line: 487, column: 54)
!2458 = !DILocation(line: 488, column: 15, scope: !2457)
!2459 = !DILocation(line: 489, column: 13, scope: !2460)
!2460 = distinct !DILexicalBlock(scope: !2456, file: !3, line: 488, column: 21)
!2461 = !DILocation(line: 489, column: 20, scope: !2460)
!2462 = !DILocation(line: 489, column: 29, scope: !2460)
!2463 = !DILocation(line: 490, column: 11, scope: !2460)
!2464 = !DILocation(line: 492, column: 15, scope: !2465)
!2465 = distinct !DILexicalBlock(scope: !2457, file: !3, line: 492, column: 15)
!2466 = !DILocation(line: 492, column: 15, scope: !2457)
!2467 = !DILocation(line: 493, column: 13, scope: !2468)
!2468 = distinct !DILexicalBlock(scope: !2465, file: !3, line: 492, column: 22)
!2469 = !DILocation(line: 493, column: 20, scope: !2468)
!2470 = !DILocation(line: 493, column: 30, scope: !2468)
!2471 = !DILocation(line: 494, column: 11, scope: !2468)
!2472 = !DILocation(line: 496, column: 15, scope: !2473)
!2473 = distinct !DILexicalBlock(scope: !2457, file: !3, line: 496, column: 15)
!2474 = !DILocation(line: 496, column: 15, scope: !2457)
!2475 = !DILocation(line: 497, column: 13, scope: !2476)
!2476 = distinct !DILexicalBlock(scope: !2473, file: !3, line: 496, column: 23)
!2477 = !DILocation(line: 497, column: 20, scope: !2476)
!2478 = !DILocation(line: 497, column: 31, scope: !2476)
!2479 = !DILocation(line: 498, column: 11, scope: !2476)
!2480 = !DILocation(line: 500, column: 15, scope: !2481)
!2481 = distinct !DILexicalBlock(scope: !2457, file: !3, line: 500, column: 15)
!2482 = !DILocation(line: 500, column: 15, scope: !2457)
!2483 = !DILocation(line: 501, column: 13, scope: !2484)
!2484 = distinct !DILexicalBlock(scope: !2481, file: !3, line: 500, column: 22)
!2485 = !DILocation(line: 501, column: 20, scope: !2484)
!2486 = !DILocation(line: 501, column: 30, scope: !2484)
!2487 = !DILocation(line: 502, column: 11, scope: !2484)
!2488 = !DILocation(line: 504, column: 11, scope: !2457)
!2489 = !DILocation(line: 506, column: 7, scope: !2449)
!2490 = !DILocation(line: 508, column: 11, scope: !2491)
!2491 = distinct !DILexicalBlock(scope: !2442, file: !3, line: 508, column: 11)
!2492 = !DILocation(line: 508, column: 18, scope: !2491)
!2493 = !DILocation(line: 508, column: 23, scope: !2491)
!2494 = !DILocation(line: 508, column: 11, scope: !2442)
!2495 = !DILocation(line: 513, column: 23, scope: !2496)
!2496 = distinct !DILexicalBlock(scope: !2491, file: !3, line: 508, column: 32)
!2497 = !DILocation(line: 513, column: 9, scope: !2496)
!2498 = !DILocation(line: 513, column: 16, scope: !2496)
!2499 = !DILocation(line: 513, column: 21, scope: !2496)
!2500 = !DILocation(line: 514, column: 9, scope: !2501)
!2501 = distinct !DILexicalBlock(scope: !2502, file: !3, line: 514, column: 9)
!2502 = distinct !DILexicalBlock(scope: !2496, file: !3, line: 514, column: 9)
!2503 = !DILocation(line: 514, column: 9, scope: !2502)
!2504 = !DILocation(line: 516, column: 20, scope: !2496)
!2505 = !DILocation(line: 516, column: 27, scope: !2496)
!2506 = !DILocation(line: 516, column: 33, scope: !2496)
!2507 = !DILocation(line: 516, column: 45, scope: !2496)
!2508 = !DILocation(line: 516, column: 9, scope: !2496)
!2509 = !DILocation(line: 517, column: 56, scope: !2496)
!2510 = !DILocation(line: 517, column: 47, scope: !2496)
!2511 = !DILocation(line: 517, column: 29, scope: !2496)
!2512 = !DILocation(line: 517, column: 9, scope: !2496)
!2513 = !DILocation(line: 517, column: 16, scope: !2496)
!2514 = !DILocation(line: 517, column: 22, scope: !2496)
!2515 = !DILocation(line: 517, column: 27, scope: !2496)
!2516 = !DILocation(line: 518, column: 9, scope: !2517)
!2517 = distinct !DILexicalBlock(scope: !2518, file: !3, line: 518, column: 9)
!2518 = distinct !DILexicalBlock(scope: !2496, file: !3, line: 518, column: 9)
!2519 = !DILocation(line: 518, column: 9, scope: !2518)
!2520 = !DILocation(line: 519, column: 18, scope: !2496)
!2521 = !DILocation(line: 519, column: 25, scope: !2496)
!2522 = !DILocation(line: 519, column: 31, scope: !2496)
!2523 = !DILocation(line: 519, column: 46, scope: !2496)
!2524 = !DILocation(line: 519, column: 37, scope: !2496)
!2525 = !DILocation(line: 519, column: 59, scope: !2496)
!2526 = !DILocation(line: 519, column: 77, scope: !2496)
!2527 = !DILocation(line: 519, column: 9, scope: !2496)
!2528 = !DILocation(line: 520, column: 33, scope: !2496)
!2529 = !DILocation(line: 520, column: 9, scope: !2496)
!2530 = !DILocation(line: 520, column: 16, scope: !2496)
!2531 = !DILocation(line: 520, column: 22, scope: !2496)
!2532 = !DILocation(line: 520, column: 31, scope: !2496)
!2533 = !DILocation(line: 521, column: 7, scope: !2496)
!2534 = !DILocation(line: 522, column: 5, scope: !2442)
!2535 = !DILocation(line: 485, column: 58, scope: !2437)
!2536 = !DILocation(line: 485, column: 65, scope: !2437)
!2537 = !DILocation(line: 485, column: 56, scope: !2437)
!2538 = !DILocation(line: 485, column: 5, scope: !2437)
!2539 = distinct !{!2539, !2439, !2540}
!2540 = !DILocation(line: 522, column: 5, scope: !2432)
!2541 = !DILocation(line: 524, column: 1, scope: !2347)
!2542 = distinct !DISubprogram(name: "AccessVariableCompareTimeStampInternal", scope: !3, file: !3, line: 537, type: !2543, scopeLine: 541, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!2543 = !DISubroutineType(types: !2544)
!2544 = !{!59, !1526, !1526}
!2545 = !DILocalVariable(name: "FirstTime", arg: 1, scope: !2542, file: !3, line: 538, type: !1526)
!2546 = !DILocation(line: 538, column: 17, scope: !2542)
!2547 = !DILocalVariable(name: "SecondTime", arg: 2, scope: !2542, file: !3, line: 539, type: !1526)
!2548 = !DILocation(line: 539, column: 17, scope: !2542)
!2549 = !DILocation(line: 542, column: 7, scope: !2550)
!2550 = distinct !DILexicalBlock(scope: !2542, file: !3, line: 542, column: 7)
!2551 = !DILocation(line: 542, column: 18, scope: !2550)
!2552 = !DILocation(line: 542, column: 26, scope: !2550)
!2553 = !DILocation(line: 542, column: 38, scope: !2550)
!2554 = !DILocation(line: 542, column: 23, scope: !2550)
!2555 = !DILocation(line: 542, column: 7, scope: !2542)
!2556 = !DILocation(line: 543, column: 22, scope: !2557)
!2557 = distinct !DILexicalBlock(scope: !2550, file: !3, line: 542, column: 44)
!2558 = !DILocation(line: 543, column: 33, scope: !2557)
!2559 = !DILocation(line: 543, column: 40, scope: !2557)
!2560 = !DILocation(line: 543, column: 52, scope: !2557)
!2561 = !DILocation(line: 543, column: 38, scope: !2557)
!2562 = !DILocation(line: 543, column: 12, scope: !2557)
!2563 = !DILocation(line: 543, column: 5, scope: !2557)
!2564 = !DILocation(line: 544, column: 14, scope: !2565)
!2565 = distinct !DILexicalBlock(scope: !2550, file: !3, line: 544, column: 14)
!2566 = !DILocation(line: 544, column: 25, scope: !2565)
!2567 = !DILocation(line: 544, column: 34, scope: !2565)
!2568 = !DILocation(line: 544, column: 46, scope: !2565)
!2569 = !DILocation(line: 544, column: 31, scope: !2565)
!2570 = !DILocation(line: 544, column: 14, scope: !2550)
!2571 = !DILocation(line: 545, column: 22, scope: !2572)
!2572 = distinct !DILexicalBlock(scope: !2565, file: !3, line: 544, column: 53)
!2573 = !DILocation(line: 545, column: 33, scope: !2572)
!2574 = !DILocation(line: 545, column: 41, scope: !2572)
!2575 = !DILocation(line: 545, column: 53, scope: !2572)
!2576 = !DILocation(line: 545, column: 39, scope: !2572)
!2577 = !DILocation(line: 545, column: 12, scope: !2572)
!2578 = !DILocation(line: 545, column: 5, scope: !2572)
!2579 = !DILocation(line: 546, column: 14, scope: !2580)
!2580 = distinct !DILexicalBlock(scope: !2565, file: !3, line: 546, column: 14)
!2581 = !DILocation(line: 546, column: 25, scope: !2580)
!2582 = !DILocation(line: 546, column: 32, scope: !2580)
!2583 = !DILocation(line: 546, column: 44, scope: !2580)
!2584 = !DILocation(line: 546, column: 29, scope: !2580)
!2585 = !DILocation(line: 546, column: 14, scope: !2565)
!2586 = !DILocation(line: 547, column: 22, scope: !2587)
!2587 = distinct !DILexicalBlock(scope: !2580, file: !3, line: 546, column: 49)
!2588 = !DILocation(line: 547, column: 33, scope: !2587)
!2589 = !DILocation(line: 547, column: 39, scope: !2587)
!2590 = !DILocation(line: 547, column: 51, scope: !2587)
!2591 = !DILocation(line: 547, column: 37, scope: !2587)
!2592 = !DILocation(line: 547, column: 12, scope: !2587)
!2593 = !DILocation(line: 547, column: 5, scope: !2587)
!2594 = !DILocation(line: 548, column: 14, scope: !2595)
!2595 = distinct !DILexicalBlock(scope: !2580, file: !3, line: 548, column: 14)
!2596 = !DILocation(line: 548, column: 25, scope: !2595)
!2597 = !DILocation(line: 548, column: 33, scope: !2595)
!2598 = !DILocation(line: 548, column: 45, scope: !2595)
!2599 = !DILocation(line: 548, column: 30, scope: !2595)
!2600 = !DILocation(line: 548, column: 14, scope: !2580)
!2601 = !DILocation(line: 549, column: 22, scope: !2602)
!2602 = distinct !DILexicalBlock(scope: !2595, file: !3, line: 548, column: 51)
!2603 = !DILocation(line: 549, column: 33, scope: !2602)
!2604 = !DILocation(line: 549, column: 40, scope: !2602)
!2605 = !DILocation(line: 549, column: 52, scope: !2602)
!2606 = !DILocation(line: 549, column: 38, scope: !2602)
!2607 = !DILocation(line: 549, column: 12, scope: !2602)
!2608 = !DILocation(line: 549, column: 5, scope: !2602)
!2609 = !DILocation(line: 550, column: 14, scope: !2610)
!2610 = distinct !DILexicalBlock(scope: !2595, file: !3, line: 550, column: 14)
!2611 = !DILocation(line: 550, column: 25, scope: !2610)
!2612 = !DILocation(line: 550, column: 35, scope: !2610)
!2613 = !DILocation(line: 550, column: 47, scope: !2610)
!2614 = !DILocation(line: 550, column: 32, scope: !2610)
!2615 = !DILocation(line: 550, column: 14, scope: !2595)
!2616 = !DILocation(line: 551, column: 22, scope: !2617)
!2617 = distinct !DILexicalBlock(scope: !2610, file: !3, line: 550, column: 55)
!2618 = !DILocation(line: 551, column: 33, scope: !2617)
!2619 = !DILocation(line: 551, column: 42, scope: !2617)
!2620 = !DILocation(line: 551, column: 54, scope: !2617)
!2621 = !DILocation(line: 551, column: 40, scope: !2617)
!2622 = !DILocation(line: 551, column: 12, scope: !2617)
!2623 = !DILocation(line: 551, column: 5, scope: !2617)
!2624 = !DILocation(line: 554, column: 20, scope: !2542)
!2625 = !DILocation(line: 554, column: 31, scope: !2542)
!2626 = !DILocation(line: 554, column: 41, scope: !2542)
!2627 = !DILocation(line: 554, column: 53, scope: !2542)
!2628 = !DILocation(line: 554, column: 38, scope: !2542)
!2629 = !DILocation(line: 554, column: 10, scope: !2542)
!2630 = !DILocation(line: 554, column: 3, scope: !2542)
!2631 = !DILocation(line: 555, column: 1, scope: !2542)
!2632 = distinct !DISubprogram(name: "SetNameSizeOfAccessVariable", scope: !3, file: !3, line: 567, type: !2633, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!2633 = !DISubroutineType(types: !2634)
!2634 = !{null, !120, !67, !59}
!2635 = !DILocalVariable(name: "Variable", arg: 1, scope: !2632, file: !3, line: 568, type: !120)
!2636 = !DILocation(line: 568, column: 40, scope: !2632)
!2637 = !DILocalVariable(name: "NameSize", arg: 2, scope: !2632, file: !3, line: 569, type: !67)
!2638 = !DILocation(line: 569, column: 39, scope: !2632)
!2639 = !DILocalVariable(name: "AuthFormat", arg: 3, scope: !2632, file: !3, line: 570, type: !59)
!2640 = !DILocation(line: 570, column: 39, scope: !2632)
!2641 = !DILocalVariable(name: "AuthVariable", scope: !2632, file: !3, line: 573, type: !70)
!2642 = !DILocation(line: 573, column: 35, scope: !2632)
!2643 = !DILocation(line: 575, column: 51, scope: !2632)
!2644 = !DILocation(line: 575, column: 18, scope: !2632)
!2645 = !DILocation(line: 575, column: 16, scope: !2632)
!2646 = !DILocation(line: 576, column: 7, scope: !2647)
!2647 = distinct !DILexicalBlock(scope: !2632, file: !3, line: 576, column: 7)
!2648 = !DILocation(line: 576, column: 7, scope: !2632)
!2649 = !DILocation(line: 577, column: 38, scope: !2650)
!2650 = distinct !DILexicalBlock(scope: !2647, file: !3, line: 576, column: 19)
!2651 = !DILocation(line: 577, column: 30, scope: !2650)
!2652 = !DILocation(line: 577, column: 5, scope: !2650)
!2653 = !DILocation(line: 577, column: 19, scope: !2650)
!2654 = !DILocation(line: 577, column: 28, scope: !2650)
!2655 = !DILocation(line: 578, column: 3, scope: !2650)
!2656 = !DILocation(line: 579, column: 34, scope: !2657)
!2657 = distinct !DILexicalBlock(scope: !2647, file: !3, line: 578, column: 10)
!2658 = !DILocation(line: 579, column: 26, scope: !2657)
!2659 = !DILocation(line: 579, column: 5, scope: !2657)
!2660 = !DILocation(line: 579, column: 15, scope: !2657)
!2661 = !DILocation(line: 579, column: 24, scope: !2657)
!2662 = !DILocation(line: 581, column: 1, scope: !2632)
!2663 = distinct !DISubprogram(name: "SetDataSizeOfAccessVariable", scope: !3, file: !3, line: 593, type: !2633, scopeLine: 598, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!2664 = !DILocalVariable(name: "Variable", arg: 1, scope: !2663, file: !3, line: 594, type: !120)
!2665 = !DILocation(line: 594, column: 40, scope: !2663)
!2666 = !DILocalVariable(name: "DataSize", arg: 2, scope: !2663, file: !3, line: 595, type: !67)
!2667 = !DILocation(line: 595, column: 39, scope: !2663)
!2668 = !DILocalVariable(name: "AuthFormat", arg: 3, scope: !2663, file: !3, line: 596, type: !59)
!2669 = !DILocation(line: 596, column: 39, scope: !2663)
!2670 = !DILocalVariable(name: "AuthVariable", scope: !2663, file: !3, line: 599, type: !70)
!2671 = !DILocation(line: 599, column: 35, scope: !2663)
!2672 = !DILocation(line: 601, column: 51, scope: !2663)
!2673 = !DILocation(line: 601, column: 18, scope: !2663)
!2674 = !DILocation(line: 601, column: 16, scope: !2663)
!2675 = !DILocation(line: 602, column: 7, scope: !2676)
!2676 = distinct !DILexicalBlock(scope: !2663, file: !3, line: 602, column: 7)
!2677 = !DILocation(line: 602, column: 7, scope: !2663)
!2678 = !DILocation(line: 603, column: 38, scope: !2679)
!2679 = distinct !DILexicalBlock(scope: !2676, file: !3, line: 602, column: 19)
!2680 = !DILocation(line: 603, column: 30, scope: !2679)
!2681 = !DILocation(line: 603, column: 5, scope: !2679)
!2682 = !DILocation(line: 603, column: 19, scope: !2679)
!2683 = !DILocation(line: 603, column: 28, scope: !2679)
!2684 = !DILocation(line: 604, column: 3, scope: !2679)
!2685 = !DILocation(line: 605, column: 34, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2676, file: !3, line: 604, column: 10)
!2687 = !DILocation(line: 605, column: 26, scope: !2686)
!2688 = !DILocation(line: 605, column: 5, scope: !2686)
!2689 = !DILocation(line: 605, column: 15, scope: !2686)
!2690 = !DILocation(line: 605, column: 24, scope: !2686)
!2691 = !DILocation(line: 607, column: 1, scope: !2663)
!2692 = distinct !DISubprogram(name: "UpdateAccessVariableStore", scope: !3, file: !3, line: 631, type: !2693, scopeLine: 640, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!2693 = !DISubroutineType(types: !2694)
!2694 = !{!172, !2695, !59, !59, !304, !67, !82, !119}
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 64)
!2696 = !DILocalVariable(name: "Global", arg: 1, scope: !2692, file: !3, line: 632, type: !2695)
!2697 = !DILocation(line: 632, column: 44, scope: !2692)
!2698 = !DILocalVariable(name: "Volatile", arg: 2, scope: !2692, file: !3, line: 633, type: !59)
!2699 = !DILocation(line: 633, column: 43, scope: !2692)
!2700 = !DILocalVariable(name: "SetByIndex", arg: 3, scope: !2692, file: !3, line: 634, type: !59)
!2701 = !DILocation(line: 634, column: 43, scope: !2692)
!2702 = !DILocalVariable(name: "Fvb", arg: 4, scope: !2692, file: !3, line: 635, type: !304)
!2703 = !DILocation(line: 635, column: 44, scope: !2692)
!2704 = !DILocalVariable(name: "DataPtrIndex", arg: 5, scope: !2692, file: !3, line: 636, type: !67)
!2705 = !DILocation(line: 636, column: 43, scope: !2692)
!2706 = !DILocalVariable(name: "DataSize", arg: 6, scope: !2692, file: !3, line: 637, type: !82)
!2707 = !DILocation(line: 637, column: 43, scope: !2692)
!2708 = !DILocalVariable(name: "Buffer", arg: 7, scope: !2692, file: !3, line: 638, type: !119)
!2709 = !DILocation(line: 638, column: 44, scope: !2692)
!2710 = !DILocalVariable(name: "DataPtr", scope: !2692, file: !3, line: 641, type: !150)
!2711 = !DILocation(line: 641, column: 27, scope: !2692)
!2712 = !DILocation(line: 641, column: 37, scope: !2692)
!2713 = !DILocation(line: 646, column: 7, scope: !2714)
!2714 = distinct !DILexicalBlock(scope: !2692, file: !3, line: 646, column: 7)
!2715 = !DILocation(line: 646, column: 7, scope: !2692)
!2716 = !DILocation(line: 647, column: 23, scope: !2717)
!2717 = distinct !DILexicalBlock(scope: !2714, file: !3, line: 646, column: 19)
!2718 = !DILocation(line: 647, column: 16, scope: !2717)
!2719 = !DILocation(line: 647, column: 13, scope: !2717)
!2720 = !DILocation(line: 648, column: 3, scope: !2717)
!2721 = !DILocation(line: 650, column: 8, scope: !2722)
!2722 = distinct !DILexicalBlock(scope: !2692, file: !3, line: 650, column: 7)
!2723 = !DILocation(line: 650, column: 18, scope: !2722)
!2724 = !DILocation(line: 650, column: 16, scope: !2722)
!2725 = !DILocation(line: 650, column: 38, scope: !2722)
!2726 = !DILocation(line: 650, column: 31, scope: !2722)
!2727 = !DILocation(line: 650, column: 60, scope: !2722)
!2728 = !DILocation(line: 650, column: 81, scope: !2722)
!2729 = !DILocation(line: 650, column: 58, scope: !2722)
!2730 = !DILocation(line: 650, column: 28, scope: !2722)
!2731 = !DILocation(line: 650, column: 7, scope: !2692)
!2732 = !DILocation(line: 651, column: 5, scope: !2733)
!2733 = distinct !DILexicalBlock(scope: !2722, file: !3, line: 650, column: 88)
!2734 = !DILocation(line: 656, column: 28, scope: !2692)
!2735 = !DILocation(line: 656, column: 12, scope: !2692)
!2736 = !DILocation(line: 656, column: 37, scope: !2692)
!2737 = !DILocation(line: 656, column: 45, scope: !2692)
!2738 = !DILocation(line: 656, column: 3, scope: !2692)
!2739 = !DILocation(line: 657, column: 3, scope: !2692)
!2740 = !DILocation(line: 658, column: 1, scope: !2692)
!2741 = distinct !DISubprogram(name: "GetAccessVariableDataOffset", scope: !3, file: !3, line: 671, type: !1961, scopeLine: 675, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!2742 = !DILocalVariable(name: "Variable", arg: 1, scope: !2741, file: !3, line: 672, type: !120)
!2743 = !DILocation(line: 672, column: 40, scope: !2741)
!2744 = !DILocalVariable(name: "AuthFormat", arg: 2, scope: !2741, file: !3, line: 673, type: !59)
!2745 = !DILocation(line: 673, column: 39, scope: !2741)
!2746 = !DILocalVariable(name: "Value", scope: !2741, file: !3, line: 676, type: !67)
!2747 = !DILocation(line: 676, column: 10, scope: !2741)
!2748 = !DILocation(line: 681, column: 41, scope: !2741)
!2749 = !DILocation(line: 681, column: 12, scope: !2741)
!2750 = !DILocation(line: 681, column: 10, scope: !2741)
!2751 = !DILocation(line: 682, column: 38, scope: !2741)
!2752 = !DILocation(line: 682, column: 48, scope: !2741)
!2753 = !DILocation(line: 682, column: 12, scope: !2741)
!2754 = !DILocation(line: 682, column: 9, scope: !2741)
!2755 = !DILocation(line: 683, column: 9, scope: !2741)
!2756 = !DILocation(line: 685, column: 10, scope: !2741)
!2757 = !DILocation(line: 685, column: 3, scope: !2741)
!2758 = distinct !DISubprogram(name: "UpdateAccessVariable", scope: !3, file: !3, line: 709, type: !2759, scopeLine: 721, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!2759 = !DISubroutineType(types: !2760)
!2760 = !{!172, !117, !1575, !183, !58, !67, !82, !82, !68, !2761, !1526}
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2762, size: 64)
!2762 = !DIDerivedType(tag: DW_TAG_typedef, name: "ACCESS_VARIABLE_POINTER_TRACK", file: !241, line: 106, baseType: !2763)
!2763 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !241, line: 94, size: 320, elements: !2764)
!2764 = !{!2765, !2766, !2767, !2768, !2769}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPtr", scope: !2763, file: !241, line: 95, baseType: !120, size: 64)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "InDeletedTransitionPtr", scope: !2763, file: !241, line: 102, baseType: !120, size: 64, offset: 64)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "EndPtr", scope: !2763, file: !241, line: 103, baseType: !120, size: 64, offset: 128)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "StartPtr", scope: !2763, file: !241, line: 104, baseType: !120, size: 64, offset: 192)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "Volatile", scope: !2763, file: !241, line: 105, baseType: !59, size: 8, offset: 256)
!2770 = !DILocalVariable(name: "VariableName", arg: 1, scope: !2758, file: !3, line: 710, type: !117)
!2771 = !DILocation(line: 710, column: 44, scope: !2758)
!2772 = !DILocalVariable(name: "VendorGuid", arg: 2, scope: !2758, file: !3, line: 711, type: !1575)
!2773 = !DILocation(line: 711, column: 44, scope: !2758)
!2774 = !DILocalVariable(name: "AccessKey", arg: 3, scope: !2758, file: !3, line: 712, type: !183)
!2775 = !DILocation(line: 712, column: 44, scope: !2758)
!2776 = !DILocalVariable(name: "Data", arg: 4, scope: !2758, file: !3, line: 713, type: !58)
!2777 = !DILocation(line: 713, column: 44, scope: !2758)
!2778 = !DILocalVariable(name: "DataSize", arg: 5, scope: !2758, file: !3, line: 714, type: !67)
!2779 = !DILocation(line: 714, column: 43, scope: !2758)
!2780 = !DILocalVariable(name: "Attributes", arg: 6, scope: !2758, file: !3, line: 715, type: !82)
!2781 = !DILocation(line: 715, column: 43, scope: !2758)
!2782 = !DILocalVariable(name: "KeyIndex", arg: 7, scope: !2758, file: !3, line: 716, type: !82)
!2783 = !DILocation(line: 716, column: 43, scope: !2758)
!2784 = !DILocalVariable(name: "MonotonicCount", arg: 8, scope: !2758, file: !3, line: 717, type: !68)
!2785 = !DILocation(line: 717, column: 43, scope: !2758)
!2786 = !DILocalVariable(name: "CacheVariable", arg: 9, scope: !2758, file: !3, line: 718, type: !2761)
!2787 = !DILocation(line: 718, column: 44, scope: !2758)
!2788 = !DILocalVariable(name: "TimeStamp", arg: 10, scope: !2758, file: !3, line: 719, type: !1526)
!2789 = !DILocation(line: 719, column: 44, scope: !2758)
!2790 = !DILocalVariable(name: "Status", scope: !2758, file: !3, line: 722, type: !172)
!2791 = !DILocation(line: 722, column: 39, scope: !2758)
!2792 = !DILocalVariable(name: "NextVariable", scope: !2758, file: !3, line: 723, type: !120)
!2793 = !DILocation(line: 723, column: 40, scope: !2758)
!2794 = !DILocalVariable(name: "ScratchSize", scope: !2758, file: !3, line: 724, type: !67)
!2795 = !DILocation(line: 724, column: 39, scope: !2758)
!2796 = !DILocalVariable(name: "MaxDataSize", scope: !2758, file: !3, line: 725, type: !67)
!2797 = !DILocation(line: 725, column: 39, scope: !2758)
!2798 = !DILocalVariable(name: "VarNameOffset", scope: !2758, file: !3, line: 726, type: !67)
!2799 = !DILocation(line: 726, column: 39, scope: !2758)
!2800 = !DILocalVariable(name: "VarDataOffset", scope: !2758, file: !3, line: 727, type: !67)
!2801 = !DILocation(line: 727, column: 39, scope: !2758)
!2802 = !DILocalVariable(name: "VarNameSize", scope: !2758, file: !3, line: 728, type: !67)
!2803 = !DILocation(line: 728, column: 39, scope: !2758)
!2804 = !DILocalVariable(name: "VarSize", scope: !2758, file: !3, line: 729, type: !67)
!2805 = !DILocation(line: 729, column: 39, scope: !2758)
!2806 = !DILocalVariable(name: "Fvb", scope: !2758, file: !3, line: 730, type: !304)
!2807 = !DILocation(line: 730, column: 40, scope: !2758)
!2808 = !DILocalVariable(name: "State", scope: !2758, file: !3, line: 731, type: !79)
!2809 = !DILocation(line: 731, column: 39, scope: !2758)
!2810 = !DILocalVariable(name: "Variable", scope: !2758, file: !3, line: 732, type: !2761)
!2811 = !DILocation(line: 732, column: 40, scope: !2758)
!2812 = !DILocalVariable(name: "NvVariable", scope: !2758, file: !3, line: 733, type: !2762)
!2813 = !DILocation(line: 733, column: 39, scope: !2758)
!2814 = !DILocalVariable(name: "VariableStoreHeader", scope: !2758, file: !3, line: 734, type: !140)
!2815 = !DILocation(line: 734, column: 40, scope: !2758)
!2816 = !DILocalVariable(name: "BufferForMerge", scope: !2758, file: !3, line: 735, type: !119)
!2817 = !DILocation(line: 735, column: 40, scope: !2758)
!2818 = !DILocalVariable(name: "MergedBufSize", scope: !2758, file: !3, line: 736, type: !67)
!2819 = !DILocation(line: 736, column: 39, scope: !2758)
!2820 = !DILocalVariable(name: "DataReady", scope: !2758, file: !3, line: 737, type: !59)
!2821 = !DILocation(line: 737, column: 39, scope: !2758)
!2822 = !DILocalVariable(name: "DataOffset", scope: !2758, file: !3, line: 738, type: !67)
!2823 = !DILocation(line: 738, column: 39, scope: !2758)
!2824 = !DILocalVariable(name: "AuthVariable", scope: !2758, file: !3, line: 739, type: !70)
!2825 = !DILocation(line: 739, column: 40, scope: !2758)
!2826 = !DILocalVariable(name: "AuthFormat", scope: !2758, file: !3, line: 740, type: !59)
!2827 = !DILocation(line: 740, column: 39, scope: !2758)
!2828 = !DILocation(line: 742, column: 7, scope: !2829)
!2829 = distinct !DILexicalBlock(scope: !2758, file: !3, line: 742, column: 7)
!2830 = !DILocation(line: 742, column: 17, scope: !2829)
!2831 = !DILocation(line: 742, column: 7, scope: !2758)
!2832 = !DILocation(line: 744, column: 5, scope: !2833)
!2833 = distinct !DILexicalBlock(scope: !2829, file: !3, line: 742, column: 26)
!2834 = !DILocation(line: 747, column: 8, scope: !2835)
!2835 = distinct !DILexicalBlock(scope: !2758, file: !3, line: 747, column: 7)
!2836 = !DILocation(line: 747, column: 19, scope: !2835)
!2837 = !DILocation(line: 747, column: 39, scope: !2835)
!2838 = !DILocation(line: 747, column: 55, scope: !2835)
!2839 = !DILocation(line: 747, column: 7, scope: !2758)
!2840 = !DILocation(line: 748, column: 5, scope: !2841)
!2841 = distinct !DILexicalBlock(scope: !2835, file: !3, line: 747, column: 71)
!2842 = !DILocation(line: 751, column: 16, scope: !2758)
!2843 = !DILocation(line: 751, column: 42, scope: !2758)
!2844 = !DILocation(line: 751, column: 57, scope: !2758)
!2845 = !DILocation(line: 751, column: 14, scope: !2758)
!2846 = !DILocation(line: 752, column: 8, scope: !2847)
!2847 = distinct !DILexicalBlock(scope: !2758, file: !3, line: 752, column: 7)
!2848 = !DILocation(line: 752, column: 23, scope: !2847)
!2849 = !DILocation(line: 752, column: 31, scope: !2847)
!2850 = !DILocation(line: 752, column: 7, scope: !2758)
!2851 = !DILocation(line: 754, column: 16, scope: !2852)
!2852 = distinct !DILexicalBlock(scope: !2847, file: !3, line: 753, column: 3)
!2853 = !DILocation(line: 754, column: 14, scope: !2852)
!2854 = !DILocation(line: 755, column: 3, scope: !2852)
!2855 = !DILocation(line: 763, column: 60, scope: !2856)
!2856 = distinct !DILexicalBlock(scope: !2847, file: !3, line: 757, column: 3)
!2857 = !DILocation(line: 763, column: 86, scope: !2856)
!2858 = !DILocation(line: 763, column: 101, scope: !2856)
!2859 = !DILocation(line: 763, column: 27, scope: !2856)
!2860 = !DILocation(line: 763, column: 25, scope: !2856)
!2861 = !DILocation(line: 764, column: 25, scope: !2856)
!2862 = !DILocation(line: 765, column: 50, scope: !2856)
!2863 = !DILocation(line: 765, column: 27, scope: !2856)
!2864 = !DILocation(line: 765, column: 5, scope: !2856)
!2865 = !DILocation(line: 765, column: 15, scope: !2856)
!2866 = !DILocation(line: 765, column: 25, scope: !2856)
!2867 = !DILocation(line: 766, column: 61, scope: !2856)
!2868 = !DILocation(line: 766, column: 71, scope: !2856)
!2869 = !DILocation(line: 766, column: 54, scope: !2856)
!2870 = !DILocation(line: 766, column: 90, scope: !2856)
!2871 = !DILocation(line: 766, column: 105, scope: !2856)
!2872 = !DILocation(line: 766, column: 83, scope: !2856)
!2873 = !DILocation(line: 766, column: 121, scope: !2856)
!2874 = !DILocation(line: 766, column: 136, scope: !2856)
!2875 = !DILocation(line: 766, column: 114, scope: !2856)
!2876 = !DILocation(line: 766, column: 112, scope: !2856)
!2877 = !DILocation(line: 766, column: 80, scope: !2856)
!2878 = !DILocation(line: 766, column: 27, scope: !2856)
!2879 = !DILocation(line: 766, column: 5, scope: !2856)
!2880 = !DILocation(line: 766, column: 15, scope: !2856)
!2881 = !DILocation(line: 766, column: 25, scope: !2856)
!2882 = !DILocation(line: 768, column: 59, scope: !2856)
!2883 = !DILocation(line: 768, column: 69, scope: !2856)
!2884 = !DILocation(line: 768, column: 52, scope: !2856)
!2885 = !DILocation(line: 768, column: 88, scope: !2856)
!2886 = !DILocation(line: 768, column: 103, scope: !2856)
!2887 = !DILocation(line: 768, column: 81, scope: !2856)
!2888 = !DILocation(line: 768, column: 120, scope: !2856)
!2889 = !DILocation(line: 768, column: 135, scope: !2856)
!2890 = !DILocation(line: 768, column: 113, scope: !2856)
!2891 = !DILocation(line: 768, column: 111, scope: !2856)
!2892 = !DILocation(line: 768, column: 78, scope: !2856)
!2893 = !DILocation(line: 768, column: 25, scope: !2856)
!2894 = !DILocation(line: 768, column: 5, scope: !2856)
!2895 = !DILocation(line: 768, column: 15, scope: !2856)
!2896 = !DILocation(line: 768, column: 23, scope: !2856)
!2897 = !DILocation(line: 769, column: 9, scope: !2898)
!2898 = distinct !DILexicalBlock(scope: !2856, file: !3, line: 769, column: 9)
!2899 = !DILocation(line: 769, column: 24, scope: !2898)
!2900 = !DILocation(line: 769, column: 47, scope: !2898)
!2901 = !DILocation(line: 769, column: 9, scope: !2856)
!2902 = !DILocation(line: 770, column: 76, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2898, file: !3, line: 769, column: 56)
!2904 = !DILocation(line: 770, column: 86, scope: !2903)
!2905 = !DILocation(line: 770, column: 69, scope: !2903)
!2906 = !DILocation(line: 770, column: 105, scope: !2903)
!2907 = !DILocation(line: 770, column: 120, scope: !2903)
!2908 = !DILocation(line: 770, column: 98, scope: !2903)
!2909 = !DILocation(line: 770, column: 152, scope: !2903)
!2910 = !DILocation(line: 770, column: 167, scope: !2903)
!2911 = !DILocation(line: 770, column: 145, scope: !2903)
!2912 = !DILocation(line: 770, column: 143, scope: !2903)
!2913 = !DILocation(line: 770, column: 95, scope: !2903)
!2914 = !DILocation(line: 770, column: 42, scope: !2903)
!2915 = !DILocation(line: 770, column: 7, scope: !2903)
!2916 = !DILocation(line: 770, column: 17, scope: !2903)
!2917 = !DILocation(line: 770, column: 40, scope: !2903)
!2918 = !DILocation(line: 771, column: 5, scope: !2903)
!2919 = !DILocation(line: 772, column: 7, scope: !2920)
!2920 = distinct !DILexicalBlock(scope: !2898, file: !3, line: 771, column: 12)
!2921 = !DILocation(line: 772, column: 17, scope: !2920)
!2922 = !DILocation(line: 772, column: 40, scope: !2920)
!2923 = !DILocation(line: 775, column: 5, scope: !2856)
!2924 = !DILocation(line: 775, column: 15, scope: !2856)
!2925 = !DILocation(line: 775, column: 24, scope: !2856)
!2926 = !DILocation(line: 777, column: 9, scope: !2758)
!2927 = !DILocation(line: 777, column: 35, scope: !2758)
!2928 = !DILocation(line: 777, column: 7, scope: !2758)
!2929 = !DILocation(line: 783, column: 72, scope: !2758)
!2930 = !DILocation(line: 783, column: 98, scope: !2758)
!2931 = !DILocation(line: 783, column: 113, scope: !2758)
!2932 = !DILocation(line: 783, column: 39, scope: !2758)
!2933 = !DILocation(line: 783, column: 18, scope: !2758)
!2934 = !DILocation(line: 783, column: 16, scope: !2758)
!2935 = !DILocation(line: 784, column: 18, scope: !2758)
!2936 = !DILocation(line: 784, column: 44, scope: !2758)
!2937 = !DILocation(line: 784, column: 16, scope: !2758)
!2938 = !DILocation(line: 785, column: 11, scope: !2758)
!2939 = !DILocation(line: 785, column: 3, scope: !2758)
!2940 = !DILocation(line: 785, column: 25, scope: !2758)
!2941 = !DILocation(line: 786, column: 13, scope: !2758)
!2942 = !DILocation(line: 788, column: 7, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2758, file: !3, line: 788, column: 7)
!2944 = !DILocation(line: 788, column: 17, scope: !2943)
!2945 = !DILocation(line: 788, column: 25, scope: !2943)
!2946 = !DILocation(line: 788, column: 7, scope: !2758)
!2947 = !DILocation(line: 797, column: 36, scope: !2948)
!2948 = distinct !DILexicalBlock(scope: !2949, file: !3, line: 797, column: 9)
!2949 = distinct !DILexicalBlock(scope: !2943, file: !3, line: 789, column: 3)
!2950 = !DILocation(line: 797, column: 51, scope: !2948)
!2951 = !DILocation(line: 797, column: 60, scope: !2948)
!2952 = !DILocation(line: 797, column: 10, scope: !2948)
!2953 = !DILocation(line: 797, column: 75, scope: !2948)
!2954 = !DILocation(line: 797, column: 72, scope: !2948)
!2955 = !DILocation(line: 797, column: 85, scope: !2948)
!2956 = !DILocation(line: 798, column: 22, scope: !2948)
!2957 = !DILocation(line: 798, column: 54, scope: !2948)
!2958 = !DILocation(line: 798, column: 69, scope: !2948)
!2959 = !DILocation(line: 798, column: 78, scope: !2948)
!2960 = !DILocation(line: 798, column: 28, scope: !2948)
!2961 = !DILocation(line: 798, column: 91, scope: !2948)
!2962 = !DILocation(line: 798, column: 10, scope: !2948)
!2963 = !DILocation(line: 798, column: 101, scope: !2948)
!2964 = !DILocation(line: 798, column: 107, scope: !2948)
!2965 = !DILocation(line: 799, column: 11, scope: !2948)
!2966 = !DILocation(line: 799, column: 22, scope: !2948)
!2967 = !DILocation(line: 799, column: 51, scope: !2948)
!2968 = !DILocation(line: 799, column: 57, scope: !2948)
!2969 = !DILocation(line: 800, column: 10, scope: !2948)
!2970 = !DILocation(line: 800, column: 20, scope: !2948)
!2971 = !DILocation(line: 797, column: 9, scope: !2949)
!2972 = !DILocation(line: 805, column: 33, scope: !2973)
!2973 = distinct !DILexicalBlock(scope: !2948, file: !3, line: 801, column: 5)
!2974 = !DILocation(line: 805, column: 47, scope: !2973)
!2975 = !DILocation(line: 805, column: 59, scope: !2973)
!2976 = !DILocation(line: 805, column: 69, scope: !2973)
!2977 = !DILocation(line: 805, column: 7, scope: !2973)
!2978 = !DILocation(line: 806, column: 14, scope: !2973)
!2979 = !DILocation(line: 807, column: 7, scope: !2973)
!2980 = !DILocation(line: 809, column: 15, scope: !2981)
!2981 = distinct !DILexicalBlock(scope: !2948, file: !3, line: 809, column: 14)
!2982 = !DILocation(line: 809, column: 30, scope: !2981)
!2983 = !DILocation(line: 809, column: 39, scope: !2981)
!2984 = !DILocation(line: 809, column: 45, scope: !2981)
!2985 = !DILocation(line: 809, column: 59, scope: !2981)
!2986 = !DILocation(line: 810, column: 17, scope: !2981)
!2987 = !DILocation(line: 810, column: 32, scope: !2981)
!2988 = !DILocation(line: 810, column: 41, scope: !2981)
!2989 = !DILocation(line: 810, column: 47, scope: !2981)
!2990 = !DILocation(line: 809, column: 14, scope: !2948)
!2991 = !DILocation(line: 815, column: 12, scope: !2992)
!2992 = distinct !DILexicalBlock(scope: !2993, file: !3, line: 815, column: 11)
!2993 = distinct !DILexicalBlock(scope: !2981, file: !3, line: 811, column: 5)
!2994 = !DILocation(line: 815, column: 23, scope: !2992)
!2995 = !DILocation(line: 815, column: 52, scope: !2992)
!2996 = !DILocation(line: 815, column: 11, scope: !2993)
!2997 = !DILocation(line: 820, column: 55, scope: !2998)
!2998 = distinct !DILexicalBlock(scope: !2992, file: !3, line: 815, column: 58)
!2999 = !DILocation(line: 820, column: 70, scope: !2998)
!3000 = !DILocation(line: 820, column: 79, scope: !2998)
!3001 = !DILocation(line: 820, column: 26, scope: !2998)
!3002 = !DILocation(line: 820, column: 24, scope: !2998)
!3003 = !DILocation(line: 821, column: 43, scope: !2998)
!3004 = !DILocation(line: 821, column: 36, scope: !2998)
!3005 = !DILocation(line: 821, column: 58, scope: !2998)
!3006 = !DILocation(line: 821, column: 56, scope: !2998)
!3007 = !DILocation(line: 821, column: 26, scope: !2998)
!3008 = !DILocation(line: 821, column: 24, scope: !2998)
!3009 = !DILocation(line: 823, column: 11, scope: !2998)
!3010 = !DILocation(line: 824, column: 28, scope: !2998)
!3011 = !DILocation(line: 824, column: 43, scope: !2998)
!3012 = !DILocation(line: 824, column: 21, scope: !2998)
!3013 = !DILocation(line: 824, column: 53, scope: !2998)
!3014 = !DILocation(line: 824, column: 51, scope: !2998)
!3015 = !DILocation(line: 824, column: 11, scope: !2998)
!3016 = !DILocation(line: 825, column: 37, scope: !2998)
!3017 = !DILocation(line: 825, column: 52, scope: !2998)
!3018 = !DILocation(line: 825, column: 61, scope: !2998)
!3019 = !DILocation(line: 825, column: 11, scope: !2998)
!3020 = !DILocation(line: 822, column: 9, scope: !2998)
!3021 = !DILocation(line: 831, column: 14, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !2998, file: !3, line: 831, column: 13)
!3023 = !DILocation(line: 831, column: 25, scope: !3022)
!3024 = !DILocation(line: 831, column: 53, scope: !3022)
!3025 = !DILocation(line: 831, column: 13, scope: !2998)
!3026 = !DILocation(line: 832, column: 25, scope: !3027)
!3027 = distinct !DILexicalBlock(scope: !3022, file: !3, line: 831, column: 59)
!3028 = !DILocation(line: 832, column: 51, scope: !3027)
!3029 = !DILocation(line: 832, column: 73, scope: !3027)
!3030 = !DILocation(line: 832, column: 71, scope: !3027)
!3031 = !DILocation(line: 832, column: 23, scope: !3027)
!3032 = !DILocation(line: 833, column: 9, scope: !3027)
!3033 = !DILocation(line: 833, column: 21, scope: !3034)
!3034 = distinct !DILexicalBlock(scope: !3022, file: !3, line: 833, column: 20)
!3035 = !DILocation(line: 833, column: 32, scope: !3034)
!3036 = !DILocation(line: 833, column: 61, scope: !3034)
!3037 = !DILocation(line: 833, column: 20, scope: !3022)
!3038 = !DILocation(line: 834, column: 25, scope: !3039)
!3039 = distinct !DILexicalBlock(scope: !3034, file: !3, line: 833, column: 67)
!3040 = !DILocation(line: 834, column: 51, scope: !3039)
!3041 = !DILocation(line: 834, column: 69, scope: !3039)
!3042 = !DILocation(line: 834, column: 67, scope: !3039)
!3043 = !DILocation(line: 834, column: 23, scope: !3039)
!3044 = !DILocation(line: 835, column: 9, scope: !3039)
!3045 = !DILocation(line: 836, column: 25, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !3034, file: !3, line: 835, column: 16)
!3047 = !DILocation(line: 836, column: 51, scope: !3046)
!3048 = !DILocation(line: 836, column: 77, scope: !3046)
!3049 = !DILocation(line: 836, column: 75, scope: !3046)
!3050 = !DILocation(line: 836, column: 23, scope: !3046)
!3051 = !DILocation(line: 843, column: 14, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !2998, file: !3, line: 843, column: 13)
!3053 = !DILocation(line: 843, column: 25, scope: !3052)
!3054 = !DILocation(line: 843, column: 63, scope: !3052)
!3055 = !DILocation(line: 843, column: 13, scope: !2998)
!3056 = !DILocation(line: 844, column: 29, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !3052, file: !3, line: 843, column: 102)
!3058 = !DILocation(line: 844, column: 27, scope: !3057)
!3059 = !DILocation(line: 844, column: 23, scope: !3057)
!3060 = !DILocation(line: 845, column: 9, scope: !3057)
!3061 = !DILocation(line: 847, column: 39, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !2998, file: !3, line: 847, column: 13)
!3063 = !DILocation(line: 847, column: 54, scope: !3062)
!3064 = !DILocation(line: 847, column: 63, scope: !3062)
!3065 = !DILocation(line: 847, column: 13, scope: !3062)
!3066 = !DILocation(line: 847, column: 77, scope: !3062)
!3067 = !DILocation(line: 847, column: 75, scope: !3062)
!3068 = !DILocation(line: 847, column: 88, scope: !3062)
!3069 = !DILocation(line: 847, column: 86, scope: !3062)
!3070 = !DILocation(line: 847, column: 13, scope: !2998)
!3071 = !DILocation(line: 851, column: 18, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !3062, file: !3, line: 847, column: 101)
!3073 = !DILocation(line: 852, column: 11, scope: !3072)
!3074 = !DILocation(line: 854, column: 35, scope: !2998)
!3075 = !DILocation(line: 854, column: 28, scope: !2998)
!3076 = !DILocation(line: 854, column: 78, scope: !2998)
!3077 = !DILocation(line: 854, column: 93, scope: !2998)
!3078 = !DILocation(line: 854, column: 102, scope: !2998)
!3079 = !DILocation(line: 854, column: 52, scope: !2998)
!3080 = !DILocation(line: 854, column: 50, scope: !2998)
!3081 = !DILocation(line: 854, column: 18, scope: !2998)
!3082 = !DILocation(line: 854, column: 116, scope: !2998)
!3083 = !DILocation(line: 854, column: 122, scope: !2998)
!3084 = !DILocation(line: 854, column: 9, scope: !2998)
!3085 = !DILocation(line: 855, column: 51, scope: !2998)
!3086 = !DILocation(line: 855, column: 66, scope: !2998)
!3087 = !DILocation(line: 855, column: 75, scope: !2998)
!3088 = !DILocation(line: 855, column: 25, scope: !2998)
!3089 = !DILocation(line: 855, column: 89, scope: !2998)
!3090 = !DILocation(line: 855, column: 87, scope: !2998)
!3091 = !DILocation(line: 855, column: 23, scope: !2998)
!3092 = !DILocation(line: 860, column: 21, scope: !2998)
!3093 = !DILocation(line: 860, column: 19, scope: !2998)
!3094 = !DILocation(line: 861, column: 21, scope: !2998)
!3095 = !DILocation(line: 861, column: 19, scope: !2998)
!3096 = !DILocation(line: 862, column: 19, scope: !2998)
!3097 = !DILocation(line: 863, column: 7, scope: !2998)
!3098 = !DILocation(line: 868, column: 16, scope: !2993)
!3099 = !DILocation(line: 868, column: 31, scope: !2993)
!3100 = !DILocation(line: 868, column: 40, scope: !2993)
!3101 = !DILocation(line: 868, column: 14, scope: !2993)
!3102 = !DILocation(line: 869, column: 13, scope: !2993)
!3103 = !DILocation(line: 871, column: 44, scope: !2993)
!3104 = !DILocation(line: 871, column: 70, scope: !2993)
!3105 = !DILocation(line: 871, column: 86, scope: !2993)
!3106 = !DILocation(line: 871, column: 96, scope: !2993)
!3107 = !DILocation(line: 871, column: 113, scope: !2993)
!3108 = !DILocation(line: 871, column: 126, scope: !2993)
!3109 = !DILocation(line: 871, column: 136, scope: !2993)
!3110 = !DILocation(line: 871, column: 145, scope: !2993)
!3111 = !DILocation(line: 871, column: 118, scope: !2993)
!3112 = !DILocation(line: 871, column: 16, scope: !2993)
!3113 = !DILocation(line: 871, column: 14, scope: !2993)
!3114 = !DILocation(line: 872, column: 11, scope: !3115)
!3115 = distinct !DILexicalBlock(scope: !2993, file: !3, line: 872, column: 11)
!3116 = !DILocation(line: 872, column: 11, scope: !2993)
!3117 = !DILocation(line: 873, column: 9, scope: !3118)
!3118 = distinct !DILexicalBlock(scope: !3115, file: !3, line: 872, column: 31)
!3119 = !DILocation(line: 876, column: 12, scope: !3120)
!3120 = distinct !DILexicalBlock(scope: !2993, file: !3, line: 876, column: 11)
!3121 = !DILocation(line: 876, column: 22, scope: !3120)
!3122 = !DILocation(line: 876, column: 11, scope: !2993)
!3123 = !DILocation(line: 877, column: 41, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3120, file: !3, line: 876, column: 32)
!3125 = !DILocation(line: 877, column: 9, scope: !3124)
!3126 = !DILocation(line: 877, column: 24, scope: !3124)
!3127 = !DILocation(line: 877, column: 33, scope: !3124)
!3128 = !DILocation(line: 877, column: 39, scope: !3124)
!3129 = !DILocation(line: 878, column: 7, scope: !3124)
!3130 = !DILocation(line: 879, column: 5, scope: !2993)
!3131 = !DILocation(line: 880, column: 3, scope: !2949)
!3132 = !DILocation(line: 886, column: 10, scope: !3133)
!3133 = distinct !DILexicalBlock(scope: !3134, file: !3, line: 886, column: 9)
!3134 = distinct !DILexicalBlock(scope: !2943, file: !3, line: 882, column: 3)
!3135 = !DILocation(line: 886, column: 19, scope: !3133)
!3136 = !DILocation(line: 886, column: 25, scope: !3133)
!3137 = !DILocation(line: 886, column: 30, scope: !3133)
!3138 = !DILocation(line: 886, column: 41, scope: !3133)
!3139 = !DILocation(line: 886, column: 70, scope: !3133)
!3140 = !DILocation(line: 886, column: 9, scope: !3134)
!3141 = !DILocation(line: 887, column: 14, scope: !3142)
!3142 = distinct !DILexicalBlock(scope: !3133, file: !3, line: 886, column: 77)
!3143 = !DILocation(line: 888, column: 7, scope: !3142)
!3144 = !DILocation(line: 894, column: 10, scope: !3145)
!3145 = distinct !DILexicalBlock(scope: !3134, file: !3, line: 894, column: 9)
!3146 = !DILocation(line: 894, column: 19, scope: !3145)
!3147 = !DILocation(line: 894, column: 25, scope: !3145)
!3148 = !DILocation(line: 894, column: 30, scope: !3145)
!3149 = !DILocation(line: 894, column: 41, scope: !3145)
!3150 = !DILocation(line: 894, column: 108, scope: !3145)
!3151 = !DILocation(line: 894, column: 9, scope: !3134)
!3152 = !DILocation(line: 895, column: 14, scope: !3153)
!3153 = distinct !DILexicalBlock(scope: !3145, file: !3, line: 894, column: 115)
!3154 = !DILocation(line: 896, column: 7, scope: !3153)
!3155 = !DILocation(line: 898, column: 15, scope: !3134)
!3156 = !DILocation(line: 898, column: 29, scope: !3134)
!3157 = !DILocation(line: 898, column: 13, scope: !3134)
!3158 = !DILocation(line: 898, column: 45, scope: !3134)
!3159 = !DILocation(line: 898, column: 5, scope: !3134)
!3160 = !DILocation(line: 904, column: 3, scope: !2758)
!3161 = !DILocation(line: 904, column: 17, scope: !2758)
!3162 = !DILocation(line: 904, column: 25, scope: !2758)
!3163 = !DILocation(line: 905, column: 3, scope: !2758)
!3164 = !DILocation(line: 905, column: 17, scope: !2758)
!3165 = !DILocation(line: 905, column: 26, scope: !2758)
!3166 = !DILocation(line: 907, column: 7, scope: !3167)
!3167 = distinct !DILexicalBlock(scope: !2758, file: !3, line: 907, column: 7)
!3168 = !DILocation(line: 907, column: 33, scope: !3167)
!3169 = !DILocation(line: 907, column: 48, scope: !3167)
!3170 = !DILocation(line: 907, column: 7, scope: !2758)
!3171 = !DILocation(line: 909, column: 69, scope: !3172)
!3172 = distinct !DILexicalBlock(scope: !3167, file: !3, line: 908, column: 3)
!3173 = !DILocation(line: 909, column: 36, scope: !3172)
!3174 = !DILocation(line: 909, column: 34, scope: !3172)
!3175 = !DILocation(line: 910, column: 36, scope: !3172)
!3176 = !DILocation(line: 910, column: 5, scope: !3172)
!3177 = !DILocation(line: 910, column: 19, scope: !3172)
!3178 = !DILocation(line: 910, column: 34, scope: !3172)
!3179 = !DILocation(line: 911, column: 36, scope: !3172)
!3180 = !DILocation(line: 911, column: 5, scope: !3172)
!3181 = !DILocation(line: 911, column: 19, scope: !3172)
!3182 = !DILocation(line: 911, column: 34, scope: !3172)
!3183 = !DILocation(line: 912, column: 15, scope: !3172)
!3184 = !DILocation(line: 912, column: 29, scope: !3172)
!3185 = !DILocation(line: 912, column: 14, scope: !3172)
!3186 = !DILocation(line: 912, column: 5, scope: !3172)
!3187 = !DILocation(line: 914, column: 11, scope: !3188)
!3188 = distinct !DILexicalBlock(scope: !3172, file: !3, line: 914, column: 9)
!3189 = !DILocation(line: 914, column: 22, scope: !3188)
!3190 = !DILocation(line: 914, column: 76, scope: !3188)
!3191 = !DILocation(line: 914, column: 82, scope: !3188)
!3192 = !DILocation(line: 915, column: 10, scope: !3188)
!3193 = !DILocation(line: 915, column: 20, scope: !3188)
!3194 = !DILocation(line: 914, column: 9, scope: !3172)
!3195 = !DILocation(line: 917, column: 12, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !3197, file: !3, line: 917, column: 11)
!3197 = distinct !DILexicalBlock(scope: !3188, file: !3, line: 916, column: 5)
!3198 = !DILocation(line: 917, column: 23, scope: !3196)
!3199 = !DILocation(line: 917, column: 52, scope: !3196)
!3200 = !DILocation(line: 917, column: 11, scope: !3197)
!3201 = !DILocation(line: 918, column: 19, scope: !3202)
!3202 = distinct !DILexicalBlock(scope: !3196, file: !3, line: 917, column: 58)
!3203 = !DILocation(line: 918, column: 33, scope: !3202)
!3204 = !DILocation(line: 918, column: 18, scope: !3202)
!3205 = !DILocation(line: 918, column: 44, scope: !3202)
!3206 = !DILocation(line: 918, column: 9, scope: !3202)
!3207 = !DILocation(line: 919, column: 7, scope: !3202)
!3208 = !DILocation(line: 925, column: 13, scope: !3209)
!3209 = distinct !DILexicalBlock(scope: !3210, file: !3, line: 925, column: 13)
!3210 = distinct !DILexicalBlock(scope: !3196, file: !3, line: 919, column: 14)
!3211 = !DILocation(line: 925, column: 23, scope: !3209)
!3212 = !DILocation(line: 925, column: 31, scope: !3209)
!3213 = !DILocation(line: 925, column: 13, scope: !3210)
!3214 = !DILocation(line: 926, column: 91, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3216, file: !3, line: 926, column: 15)
!3216 = distinct !DILexicalBlock(scope: !3209, file: !3, line: 925, column: 40)
!3217 = !DILocation(line: 926, column: 106, scope: !3215)
!3218 = !DILocation(line: 926, column: 116, scope: !3215)
!3219 = !DILocation(line: 926, column: 128, scope: !3215)
!3220 = !DILocation(line: 926, column: 15, scope: !3215)
!3221 = !DILocation(line: 926, column: 15, scope: !3216)
!3222 = !DILocation(line: 927, column: 23, scope: !3223)
!3223 = distinct !DILexicalBlock(scope: !3215, file: !3, line: 926, column: 140)
!3224 = !DILocation(line: 927, column: 37, scope: !3223)
!3225 = !DILocation(line: 927, column: 22, scope: !3223)
!3226 = !DILocation(line: 927, column: 48, scope: !3223)
!3227 = !DILocation(line: 927, column: 13, scope: !3223)
!3228 = !DILocation(line: 928, column: 11, scope: !3223)
!3229 = !DILocation(line: 929, column: 23, scope: !3230)
!3230 = distinct !DILexicalBlock(scope: !3215, file: !3, line: 928, column: 18)
!3231 = !DILocation(line: 929, column: 37, scope: !3230)
!3232 = !DILocation(line: 929, column: 22, scope: !3230)
!3233 = !DILocation(line: 929, column: 84, scope: !3230)
!3234 = !DILocation(line: 929, column: 99, scope: !3230)
!3235 = !DILocation(line: 929, column: 109, scope: !3230)
!3236 = !DILocation(line: 929, column: 48, scope: !3230)
!3237 = !DILocation(line: 929, column: 13, scope: !3230)
!3238 = !DILocation(line: 931, column: 9, scope: !3216)
!3239 = !DILocation(line: 933, column: 5, scope: !3197)
!3240 = !DILocation(line: 934, column: 3, scope: !3172)
!3241 = !DILocation(line: 940, column: 30, scope: !2758)
!3242 = !DILocation(line: 940, column: 41, scope: !2758)
!3243 = !DILocation(line: 940, column: 3, scope: !2758)
!3244 = !DILocation(line: 940, column: 17, scope: !2758)
!3245 = !DILocation(line: 940, column: 28, scope: !2758)
!3246 = !DILocation(line: 942, column: 48, scope: !2758)
!3247 = !DILocation(line: 942, column: 19, scope: !2758)
!3248 = !DILocation(line: 942, column: 17, scope: !2758)
!3249 = !DILocation(line: 943, column: 27, scope: !2758)
!3250 = !DILocation(line: 943, column: 19, scope: !2758)
!3251 = !DILocation(line: 943, column: 17, scope: !2758)
!3252 = !DILocation(line: 944, column: 29, scope: !2758)
!3253 = !DILocation(line: 944, column: 22, scope: !2758)
!3254 = !DILocation(line: 944, column: 44, scope: !2758)
!3255 = !DILocation(line: 944, column: 42, scope: !2758)
!3256 = !DILocation(line: 944, column: 12, scope: !2758)
!3257 = !DILocation(line: 944, column: 60, scope: !2758)
!3258 = !DILocation(line: 944, column: 74, scope: !2758)
!3259 = !DILocation(line: 944, column: 3, scope: !2758)
!3260 = !DILocation(line: 945, column: 19, scope: !2758)
!3261 = !DILocation(line: 945, column: 35, scope: !2758)
!3262 = !DILocation(line: 945, column: 33, scope: !2758)
!3263 = !DILocation(line: 945, column: 47, scope: !2758)
!3264 = !DILocation(line: 945, column: 17, scope: !2758)
!3265 = !DILocation(line: 951, column: 8, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !2758, file: !3, line: 951, column: 7)
!3267 = !DILocation(line: 951, column: 7, scope: !2758)
!3268 = !DILocation(line: 953, column: 31, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3266, file: !3, line: 952, column: 3)
!3270 = !DILocation(line: 953, column: 24, scope: !3269)
!3271 = !DILocation(line: 953, column: 46, scope: !3269)
!3272 = !DILocation(line: 953, column: 44, scope: !3269)
!3273 = !DILocation(line: 953, column: 14, scope: !3269)
!3274 = !DILocation(line: 953, column: 62, scope: !3269)
!3275 = !DILocation(line: 953, column: 68, scope: !3269)
!3276 = !DILocation(line: 953, column: 5, scope: !3269)
!3277 = !DILocation(line: 954, column: 3, scope: !3269)
!3278 = !DILocation(line: 956, column: 36, scope: !2758)
!3279 = !DILocation(line: 956, column: 50, scope: !2758)
!3280 = !DILocation(line: 956, column: 12, scope: !2758)
!3281 = !DILocation(line: 956, column: 63, scope: !2758)
!3282 = !DILocation(line: 956, column: 3, scope: !2758)
!3283 = !DILocation(line: 963, column: 32, scope: !2758)
!3284 = !DILocation(line: 963, column: 46, scope: !2758)
!3285 = !DILocation(line: 963, column: 59, scope: !2758)
!3286 = !DILocation(line: 963, column: 3, scope: !2758)
!3287 = !DILocation(line: 964, column: 32, scope: !2758)
!3288 = !DILocation(line: 964, column: 46, scope: !2758)
!3289 = !DILocation(line: 964, column: 56, scope: !2758)
!3290 = !DILocation(line: 964, column: 3, scope: !2758)
!3291 = !DILocation(line: 970, column: 13, scope: !2758)
!3292 = !DILocation(line: 970, column: 29, scope: !2758)
!3293 = !DILocation(line: 970, column: 27, scope: !2758)
!3294 = !DILocation(line: 970, column: 38, scope: !2758)
!3295 = !DILocation(line: 970, column: 11, scope: !2758)
!3296 = !DILocation(line: 971, column: 8, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !2758, file: !3, line: 971, column: 7)
!3298 = !DILocation(line: 971, column: 19, scope: !3297)
!3299 = !DILocation(line: 971, column: 48, scope: !3297)
!3300 = !DILocation(line: 971, column: 7, scope: !2758)
!3301 = !DILocation(line: 976, column: 5, scope: !3302)
!3302 = distinct !DILexicalBlock(scope: !3297, file: !3, line: 972, column: 3)
!3303 = !DILocation(line: 976, column: 19, scope: !3302)
!3304 = !DILocation(line: 976, column: 25, scope: !3302)
!3305 = !DILocation(line: 978, column: 30, scope: !3302)
!3306 = !DILocation(line: 978, column: 56, scope: !3302)
!3307 = !DILocation(line: 981, column: 29, scope: !3302)
!3308 = !DILocation(line: 982, column: 29, scope: !3302)
!3309 = !DILocation(line: 982, column: 55, scope: !3302)
!3310 = !DILocation(line: 983, column: 37, scope: !3302)
!3311 = !DILocation(line: 983, column: 29, scope: !3302)
!3312 = !DILocation(line: 984, column: 38, scope: !3302)
!3313 = !DILocation(line: 984, column: 29, scope: !3302)
!3314 = !DILocation(line: 977, column: 27, scope: !3302)
!3315 = !DILocation(line: 977, column: 25, scope: !3302)
!3316 = !DILocation(line: 986, column: 9, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3302, file: !3, line: 986, column: 9)
!3318 = !DILocation(line: 986, column: 9, scope: !3302)
!3319 = !DILocation(line: 987, column: 7, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3317, file: !3, line: 986, column: 29)
!3321 = !DILocation(line: 990, column: 64, scope: !3302)
!3322 = !DILocation(line: 990, column: 5, scope: !3302)
!3323 = !DILocation(line: 990, column: 31, scope: !3302)
!3324 = !DILocation(line: 990, column: 61, scope: !3302)
!3325 = !DILocation(line: 992, column: 10, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3302, file: !3, line: 992, column: 9)
!3327 = !DILocation(line: 992, column: 21, scope: !3326)
!3328 = !DILocation(line: 992, column: 59, scope: !3326)
!3329 = !DILocation(line: 992, column: 9, scope: !3302)
!3330 = !DILocation(line: 993, column: 59, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3326, file: !3, line: 992, column: 65)
!3332 = !DILocation(line: 993, column: 7, scope: !3331)
!3333 = !DILocation(line: 993, column: 33, scope: !3331)
!3334 = !DILocation(line: 993, column: 56, scope: !3331)
!3335 = !DILocation(line: 994, column: 5, scope: !3331)
!3336 = !DILocation(line: 995, column: 60, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3326, file: !3, line: 994, column: 12)
!3338 = !DILocation(line: 995, column: 7, scope: !3337)
!3339 = !DILocation(line: 995, column: 33, scope: !3337)
!3340 = !DILocation(line: 995, column: 57, scope: !3337)
!3341 = !DILocation(line: 997, column: 3, scope: !3302)
!3342 = !DILocation(line: 1000, column: 5, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3297, file: !3, line: 999, column: 3)
!3344 = !DILocation(line: 971, column: 51, scope: !3297)
!3345 = !DILabel(scope: !2758, name: "Done", file: !3, line: 1003)
!3346 = !DILocation(line: 1003, column: 1, scope: !2758)
!3347 = !DILocation(line: 1004, column: 10, scope: !2758)
!3348 = !DILocation(line: 1004, column: 3, scope: !2758)
!3349 = !DILocation(line: 1005, column: 1, scope: !2758)
!3350 = distinct !DISubprogram(name: "FindAccessVariableEx", scope: !3, file: !3, line: 1023, type: !3351, scopeLine: 1030, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!3351 = !DISubroutineType(types: !3352)
!3352 = !{!172, !117, !1575, !59, !2761, !59}
!3353 = !DILocalVariable(name: "VariableName", arg: 1, scope: !3350, file: !3, line: 1024, type: !117)
!3354 = !DILocation(line: 1024, column: 44, scope: !3350)
!3355 = !DILocalVariable(name: "VendorGuid", arg: 2, scope: !3350, file: !3, line: 1025, type: !1575)
!3356 = !DILocation(line: 1025, column: 44, scope: !3350)
!3357 = !DILocalVariable(name: "IgnoreRtCheck", arg: 3, scope: !3350, file: !3, line: 1026, type: !59)
!3358 = !DILocation(line: 1026, column: 43, scope: !3350)
!3359 = !DILocalVariable(name: "PtrTrack", arg: 4, scope: !3350, file: !3, line: 1027, type: !2761)
!3360 = !DILocation(line: 1027, column: 44, scope: !3350)
!3361 = !DILocalVariable(name: "AuthFormat", arg: 5, scope: !3350, file: !3, line: 1028, type: !59)
!3362 = !DILocation(line: 1028, column: 43, scope: !3350)
!3363 = !DILocalVariable(name: "InDeletedVariable", scope: !3350, file: !3, line: 1031, type: !120)
!3364 = !DILocation(line: 1031, column: 28, scope: !3350)
!3365 = !DILocalVariable(name: "Point", scope: !3350, file: !3, line: 1032, type: !58)
!3366 = !DILocation(line: 1032, column: 21, scope: !3350)
!3367 = !DILocation(line: 1034, column: 3, scope: !3350)
!3368 = !DILocation(line: 1034, column: 13, scope: !3350)
!3369 = !DILocation(line: 1034, column: 36, scope: !3350)
!3370 = !DILocation(line: 1039, column: 21, scope: !3350)
!3371 = !DILocation(line: 1041, column: 29, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3350, file: !3, line: 1041, column: 3)
!3373 = !DILocation(line: 1041, column: 39, scope: !3372)
!3374 = !DILocation(line: 1041, column: 9, scope: !3372)
!3375 = !DILocation(line: 1041, column: 19, scope: !3372)
!3376 = !DILocation(line: 1041, column: 27, scope: !3372)
!3377 = !DILocation(line: 1042, column: 40, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3372, file: !3, line: 1041, column: 3)
!3379 = !DILocation(line: 1042, column: 50, scope: !3378)
!3380 = !DILocation(line: 1042, column: 59, scope: !3378)
!3381 = !DILocation(line: 1042, column: 69, scope: !3378)
!3382 = !DILocation(line: 1042, column: 11, scope: !3378)
!3383 = !DILocation(line: 1041, column: 3, scope: !3372)
!3384 = !DILocation(line: 1046, column: 10, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3386, file: !3, line: 1046, column: 9)
!3386 = distinct !DILexicalBlock(scope: !3378, file: !3, line: 1045, column: 3)
!3387 = !DILocation(line: 1046, column: 20, scope: !3385)
!3388 = !DILocation(line: 1046, column: 29, scope: !3385)
!3389 = !DILocation(line: 1046, column: 35, scope: !3385)
!3390 = !DILocation(line: 1046, column: 49, scope: !3385)
!3391 = !DILocation(line: 1047, column: 10, scope: !3385)
!3392 = !DILocation(line: 1047, column: 20, scope: !3385)
!3393 = !DILocation(line: 1047, column: 29, scope: !3385)
!3394 = !DILocation(line: 1047, column: 35, scope: !3385)
!3395 = !DILocation(line: 1046, column: 9, scope: !3386)
!3396 = !DILocation(line: 1050, column: 11, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3398, file: !3, line: 1050, column: 11)
!3398 = distinct !DILexicalBlock(scope: !3385, file: !3, line: 1049, column: 5)
!3399 = !DILocation(line: 1050, column: 25, scope: !3397)
!3400 = !DILocation(line: 1050, column: 29, scope: !3397)
!3401 = !DILocation(line: 1050, column: 42, scope: !3397)
!3402 = !DILocation(line: 1050, column: 47, scope: !3397)
!3403 = !DILocation(line: 1050, column: 57, scope: !3397)
!3404 = !DILocation(line: 1050, column: 66, scope: !3397)
!3405 = !DILocation(line: 1050, column: 77, scope: !3397)
!3406 = !DILocation(line: 1050, column: 108, scope: !3397)
!3407 = !DILocation(line: 1050, column: 11, scope: !3398)
!3408 = !DILocation(line: 1051, column: 13, scope: !3409)
!3409 = distinct !DILexicalBlock(scope: !3410, file: !3, line: 1051, column: 13)
!3410 = distinct !DILexicalBlock(scope: !3397, file: !3, line: 1050, column: 115)
!3411 = !DILocation(line: 1051, column: 29, scope: !3409)
!3412 = !DILocation(line: 1051, column: 13, scope: !3410)
!3413 = !DILocation(line: 1052, column: 15, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3415, file: !3, line: 1052, column: 15)
!3415 = distinct !DILexicalBlock(scope: !3409, file: !3, line: 1051, column: 35)
!3416 = !DILocation(line: 1052, column: 25, scope: !3414)
!3417 = !DILocation(line: 1052, column: 34, scope: !3414)
!3418 = !DILocation(line: 1052, column: 40, scope: !3414)
!3419 = !DILocation(line: 1052, column: 15, scope: !3415)
!3420 = !DILocation(line: 1053, column: 33, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !3414, file: !3, line: 1052, column: 84)
!3422 = !DILocation(line: 1053, column: 43, scope: !3421)
!3423 = !DILocation(line: 1053, column: 31, scope: !3421)
!3424 = !DILocation(line: 1054, column: 11, scope: !3421)
!3425 = !DILocation(line: 1055, column: 48, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3414, file: !3, line: 1054, column: 18)
!3427 = !DILocation(line: 1055, column: 13, scope: !3426)
!3428 = !DILocation(line: 1055, column: 23, scope: !3426)
!3429 = !DILocation(line: 1055, column: 46, scope: !3426)
!3430 = !DILocation(line: 1056, column: 13, scope: !3426)
!3431 = !DILocation(line: 1058, column: 9, scope: !3415)
!3432 = !DILocation(line: 1059, column: 28, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3434, file: !3, line: 1059, column: 15)
!3434 = distinct !DILexicalBlock(scope: !3409, file: !3, line: 1058, column: 16)
!3435 = !DILocation(line: 1059, column: 64, scope: !3433)
!3436 = !DILocation(line: 1059, column: 74, scope: !3433)
!3437 = !DILocation(line: 1059, column: 83, scope: !3433)
!3438 = !DILocation(line: 1059, column: 40, scope: !3433)
!3439 = !DILocation(line: 1059, column: 15, scope: !3433)
!3440 = !DILocation(line: 1059, column: 15, scope: !3434)
!3441 = !DILocation(line: 1060, column: 55, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !3433, file: !3, line: 1059, column: 97)
!3443 = !DILocation(line: 1060, column: 65, scope: !3442)
!3444 = !DILocation(line: 1060, column: 74, scope: !3442)
!3445 = !DILocation(line: 1060, column: 29, scope: !3442)
!3446 = !DILocation(line: 1060, column: 21, scope: !3442)
!3447 = !DILocation(line: 1060, column: 19, scope: !3442)
!3448 = !DILocation(line: 1062, column: 13, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3450, file: !3, line: 1062, column: 13)
!3450 = distinct !DILexicalBlock(scope: !3442, file: !3, line: 1062, column: 13)
!3451 = !DILocation(line: 1062, column: 13, scope: !3450)
!3452 = !DILocation(line: 1063, column: 29, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3442, file: !3, line: 1063, column: 17)
!3454 = !DILocation(line: 1063, column: 43, scope: !3453)
!3455 = !DILocation(line: 1063, column: 76, scope: !3453)
!3456 = !DILocation(line: 1063, column: 86, scope: !3453)
!3457 = !DILocation(line: 1063, column: 95, scope: !3453)
!3458 = !DILocation(line: 1063, column: 50, scope: !3453)
!3459 = !DILocation(line: 1063, column: 17, scope: !3453)
!3460 = !DILocation(line: 1063, column: 108, scope: !3453)
!3461 = !DILocation(line: 1063, column: 17, scope: !3442)
!3462 = !DILocation(line: 1064, column: 19, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3464, file: !3, line: 1064, column: 19)
!3464 = distinct !DILexicalBlock(scope: !3453, file: !3, line: 1063, column: 114)
!3465 = !DILocation(line: 1064, column: 29, scope: !3463)
!3466 = !DILocation(line: 1064, column: 38, scope: !3463)
!3467 = !DILocation(line: 1064, column: 44, scope: !3463)
!3468 = !DILocation(line: 1064, column: 19, scope: !3464)
!3469 = !DILocation(line: 1065, column: 37, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3463, file: !3, line: 1064, column: 88)
!3471 = !DILocation(line: 1065, column: 47, scope: !3470)
!3472 = !DILocation(line: 1065, column: 35, scope: !3470)
!3473 = !DILocation(line: 1066, column: 15, scope: !3470)
!3474 = !DILocation(line: 1067, column: 52, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3463, file: !3, line: 1066, column: 22)
!3476 = !DILocation(line: 1067, column: 17, scope: !3475)
!3477 = !DILocation(line: 1067, column: 27, scope: !3475)
!3478 = !DILocation(line: 1067, column: 50, scope: !3475)
!3479 = !DILocation(line: 1068, column: 17, scope: !3475)
!3480 = !DILocation(line: 1070, column: 13, scope: !3464)
!3481 = !DILocation(line: 1071, column: 11, scope: !3442)
!3482 = !DILocation(line: 1073, column: 7, scope: !3410)
!3483 = !DILocation(line: 1074, column: 5, scope: !3398)
!3484 = !DILocation(line: 1075, column: 3, scope: !3386)
!3485 = !DILocation(line: 1043, column: 57, scope: !3378)
!3486 = !DILocation(line: 1043, column: 67, scope: !3378)
!3487 = !DILocation(line: 1043, column: 76, scope: !3378)
!3488 = !DILocation(line: 1043, column: 31, scope: !3378)
!3489 = !DILocation(line: 1043, column: 11, scope: !3378)
!3490 = !DILocation(line: 1043, column: 21, scope: !3378)
!3491 = !DILocation(line: 1043, column: 29, scope: !3378)
!3492 = !DILocation(line: 1041, column: 3, scope: !3378)
!3493 = distinct !{!3493, !3383, !3494}
!3494 = !DILocation(line: 1075, column: 3, scope: !3372)
!3495 = !DILocation(line: 1077, column: 23, scope: !3350)
!3496 = !DILocation(line: 1077, column: 3, scope: !3350)
!3497 = !DILocation(line: 1077, column: 13, scope: !3350)
!3498 = !DILocation(line: 1077, column: 21, scope: !3350)
!3499 = !DILocation(line: 1078, column: 11, scope: !3350)
!3500 = !DILocation(line: 1078, column: 21, scope: !3350)
!3501 = !DILocation(line: 1078, column: 30, scope: !3350)
!3502 = !DILocation(line: 1078, column: 10, scope: !3350)
!3503 = !DILocation(line: 1078, column: 3, scope: !3350)
!3504 = !DILocation(line: 1079, column: 1, scope: !3350)
!3505 = distinct !DISubprogram(name: "FindAccessVariable", scope: !3, file: !3, line: 1108, type: !3506, scopeLine: 1115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!3506 = !DISubroutineType(types: !3507)
!3507 = !{!172, !117, !1575, !2761, !2695, !59}
!3508 = !DILocalVariable(name: "VariableName", arg: 1, scope: !3505, file: !3, line: 1109, type: !117)
!3509 = !DILocation(line: 1109, column: 40, scope: !3505)
!3510 = !DILocalVariable(name: "VendorGuid", arg: 2, scope: !3505, file: !3, line: 1110, type: !1575)
!3511 = !DILocation(line: 1110, column: 40, scope: !3505)
!3512 = !DILocalVariable(name: "PtrTrack", arg: 3, scope: !3505, file: !3, line: 1111, type: !2761)
!3513 = !DILocation(line: 1111, column: 40, scope: !3505)
!3514 = !DILocalVariable(name: "Global", arg: 4, scope: !3505, file: !3, line: 1112, type: !2695)
!3515 = !DILocation(line: 1112, column: 40, scope: !3505)
!3516 = !DILocalVariable(name: "IgnoreRtCheck", arg: 5, scope: !3505, file: !3, line: 1113, type: !59)
!3517 = !DILocation(line: 1113, column: 39, scope: !3505)
!3518 = !DILocalVariable(name: "Status", scope: !3505, file: !3, line: 1116, type: !172)
!3519 = !DILocation(line: 1116, column: 26, scope: !3505)
!3520 = !DILocation(line: 1118, column: 8, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3505, file: !3, line: 1118, column: 7)
!3522 = !DILocation(line: 1118, column: 24, scope: !3521)
!3523 = !DILocation(line: 1118, column: 30, scope: !3521)
!3524 = !DILocation(line: 1118, column: 34, scope: !3521)
!3525 = !DILocation(line: 1118, column: 45, scope: !3521)
!3526 = !DILocation(line: 1118, column: 7, scope: !3505)
!3527 = !DILocation(line: 1119, column: 5, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3521, file: !3, line: 1118, column: 55)
!3529 = !DILocation(line: 1122, column: 47, scope: !3505)
!3530 = !DILocation(line: 1122, column: 24, scope: !3505)
!3531 = !DILocation(line: 1122, column: 3, scope: !3505)
!3532 = !DILocation(line: 1122, column: 13, scope: !3505)
!3533 = !DILocation(line: 1122, column: 22, scope: !3505)
!3534 = !DILocation(line: 1123, column: 45, scope: !3505)
!3535 = !DILocation(line: 1123, column: 24, scope: !3505)
!3536 = !DILocation(line: 1123, column: 3, scope: !3505)
!3537 = !DILocation(line: 1123, column: 13, scope: !3505)
!3538 = !DILocation(line: 1123, column: 22, scope: !3505)
!3539 = !DILocation(line: 1124, column: 3, scope: !3505)
!3540 = !DILocation(line: 1124, column: 13, scope: !3505)
!3541 = !DILocation(line: 1124, column: 22, scope: !3505)
!3542 = !DILocation(line: 1126, column: 35, scope: !3505)
!3543 = !DILocation(line: 1126, column: 49, scope: !3505)
!3544 = !DILocation(line: 1126, column: 61, scope: !3505)
!3545 = !DILocation(line: 1126, column: 76, scope: !3505)
!3546 = !DILocation(line: 1126, column: 86, scope: !3505)
!3547 = !DILocation(line: 1126, column: 112, scope: !3505)
!3548 = !DILocation(line: 1126, column: 127, scope: !3505)
!3549 = !DILocation(line: 1126, column: 13, scope: !3505)
!3550 = !DILocation(line: 1126, column: 10, scope: !3505)
!3551 = !DILocation(line: 1127, column: 8, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3505, file: !3, line: 1127, column: 7)
!3553 = !DILocation(line: 1127, column: 7, scope: !3505)
!3554 = !DILocation(line: 1128, column: 12, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3552, file: !3, line: 1127, column: 28)
!3556 = !DILocation(line: 1128, column: 5, scope: !3555)
!3557 = !DILocation(line: 1130, column: 3, scope: !3505)
!3558 = !DILocation(line: 1131, column: 1, scope: !3505)
!3559 = distinct !DISubprogram(name: "mineVariableServiceSetVariable", scope: !3, file: !3, line: 1160, type: !1595, scopeLine: 1168, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!3560 = !DILocalVariable(name: "VariableName", arg: 1, scope: !3559, file: !3, line: 1161, type: !117)
!3561 = !DILocation(line: 1161, column: 40, scope: !3559)
!3562 = !DILocalVariable(name: "VendorGuid", arg: 2, scope: !3559, file: !3, line: 1162, type: !1575)
!3563 = !DILocation(line: 1162, column: 40, scope: !3559)
!3564 = !DILocalVariable(name: "Attributes", arg: 3, scope: !3559, file: !3, line: 1163, type: !82)
!3565 = !DILocation(line: 1163, column: 39, scope: !3559)
!3566 = !DILocalVariable(name: "AccessKey", arg: 4, scope: !3559, file: !3, line: 1164, type: !183)
!3567 = !DILocation(line: 1164, column: 40, scope: !3559)
!3568 = !DILocalVariable(name: "DataSize", arg: 5, scope: !3559, file: !3, line: 1165, type: !67)
!3569 = !DILocation(line: 1165, column: 39, scope: !3559)
!3570 = !DILocalVariable(name: "Data", arg: 6, scope: !3559, file: !3, line: 1166, type: !58)
!3571 = !DILocation(line: 1166, column: 40, scope: !3559)
!3572 = !DILocalVariable(name: "Variable", scope: !3559, file: !3, line: 1169, type: !2762)
!3573 = !DILocation(line: 1169, column: 35, scope: !3559)
!3574 = !DILocalVariable(name: "Status", scope: !3559, file: !3, line: 1170, type: !172)
!3575 = !DILocation(line: 1170, column: 35, scope: !3559)
!3576 = !DILocalVariable(name: "NextVariable", scope: !3559, file: !3, line: 1171, type: !120)
!3577 = !DILocation(line: 1171, column: 36, scope: !3559)
!3578 = !DILocalVariable(name: "Point", scope: !3559, file: !3, line: 1172, type: !150)
!3579 = !DILocation(line: 1172, column: 35, scope: !3559)
!3580 = !DILocalVariable(name: "PayloadSize", scope: !3559, file: !3, line: 1173, type: !67)
!3581 = !DILocation(line: 1173, column: 35, scope: !3559)
!3582 = !DILocalVariable(name: "AuthFormat", scope: !3559, file: !3, line: 1174, type: !59)
!3583 = !DILocation(line: 1174, column: 35, scope: !3559)
!3584 = !DILocalVariable(name: "ValidKey", scope: !3559, file: !3, line: 1175, type: !59)
!3585 = !DILocation(line: 1175, column: 35, scope: !3559)
!3586 = !DILocation(line: 1177, column: 16, scope: !3559)
!3587 = !DILocation(line: 1177, column: 42, scope: !3559)
!3588 = !DILocation(line: 1177, column: 57, scope: !3559)
!3589 = !DILocation(line: 1177, column: 14, scope: !3559)
!3590 = !DILocation(line: 1180, column: 8, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3559, file: !3, line: 1180, column: 7)
!3592 = !DILocation(line: 1180, column: 21, scope: !3591)
!3593 = !DILocation(line: 1180, column: 30, scope: !3591)
!3594 = !DILocation(line: 1180, column: 34, scope: !3591)
!3595 = !DILocation(line: 1180, column: 50, scope: !3591)
!3596 = !DILocation(line: 1180, column: 56, scope: !3591)
!3597 = !DILocation(line: 1180, column: 60, scope: !3591)
!3598 = !DILocation(line: 1180, column: 71, scope: !3591)
!3599 = !DILocation(line: 1180, column: 7, scope: !3559)
!3600 = !DILocation(line: 1181, column: 5, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3591, file: !3, line: 1180, column: 81)
!3602 = !DILocation(line: 1184, column: 8, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3559, file: !3, line: 1184, column: 7)
!3604 = !DILocation(line: 1184, column: 17, scope: !3603)
!3605 = !DILocation(line: 1184, column: 23, scope: !3603)
!3606 = !DILocation(line: 1184, column: 27, scope: !3603)
!3607 = !DILocation(line: 1184, column: 32, scope: !3603)
!3608 = !DILocation(line: 1184, column: 7, scope: !3559)
!3609 = !DILocation(line: 1185, column: 5, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3603, file: !3, line: 1184, column: 42)
!3611 = !DILocation(line: 1188, column: 17, scope: !3559)
!3612 = !DILocation(line: 1188, column: 15, scope: !3559)
!3613 = !DILocation(line: 1189, column: 21, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3559, file: !3, line: 1189, column: 7)
!3615 = !DILocation(line: 1189, column: 19, scope: !3614)
!3616 = !DILocation(line: 1189, column: 43, scope: !3614)
!3617 = !DILocation(line: 1189, column: 35, scope: !3614)
!3618 = !DILocation(line: 1189, column: 33, scope: !3614)
!3619 = !DILocation(line: 1189, column: 7, scope: !3559)
!3620 = !DILocation(line: 1191, column: 5, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3614, file: !3, line: 1189, column: 58)
!3622 = !DILocation(line: 1194, column: 15, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3559, file: !3, line: 1194, column: 7)
!3624 = !DILocation(line: 1194, column: 7, scope: !3623)
!3625 = !DILocation(line: 1194, column: 31, scope: !3623)
!3626 = !DILocation(line: 1194, column: 29, scope: !3623)
!3627 = !DILocation(line: 1194, column: 45, scope: !3623)
!3628 = !DILocation(line: 1194, column: 71, scope: !3623)
!3629 = !DILocation(line: 1194, column: 118, scope: !3623)
!3630 = !DILocation(line: 1194, column: 89, scope: !3623)
!3631 = !DILocation(line: 1194, column: 87, scope: !3623)
!3632 = !DILocation(line: 1194, column: 43, scope: !3623)
!3633 = !DILocation(line: 1194, column: 7, scope: !3559)
!3634 = !DILocation(line: 1197, column: 5, scope: !3635)
!3635 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 1194, column: 131)
!3636 = !DILocation(line: 1203, column: 11, scope: !3559)
!3637 = !DILocation(line: 1203, column: 37, scope: !3559)
!3638 = !DILocation(line: 1203, column: 52, scope: !3559)
!3639 = !DILocation(line: 1203, column: 9, scope: !3559)
!3640 = !DILocation(line: 1204, column: 73, scope: !3559)
!3641 = !DILocation(line: 1204, column: 41, scope: !3559)
!3642 = !DILocation(line: 1204, column: 18, scope: !3559)
!3643 = !DILocation(line: 1204, column: 16, scope: !3559)
!3644 = !DILocation(line: 1205, column: 3, scope: !3559)
!3645 = !DILocation(line: 1205, column: 39, scope: !3559)
!3646 = !DILocation(line: 1205, column: 106, scope: !3559)
!3647 = !DILocation(line: 1205, column: 74, scope: !3559)
!3648 = !DILocation(line: 1205, column: 53, scope: !3559)
!3649 = !DILocation(line: 1205, column: 10, scope: !3559)
!3650 = !DILocation(line: 1206, column: 46, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3559, file: !3, line: 1205, column: 115)
!3652 = !DILocation(line: 1206, column: 60, scope: !3651)
!3653 = !DILocation(line: 1206, column: 20, scope: !3651)
!3654 = !DILocation(line: 1206, column: 18, scope: !3651)
!3655 = distinct !{!3655, !3644, !3656}
!3656 = !DILocation(line: 1207, column: 3, scope: !3559)
!3657 = !DILocation(line: 1208, column: 68, scope: !3559)
!3658 = !DILocation(line: 1208, column: 61, scope: !3559)
!3659 = !DILocation(line: 1208, column: 90, scope: !3559)
!3660 = !DILocation(line: 1208, column: 81, scope: !3559)
!3661 = !DILocation(line: 1208, column: 3, scope: !3559)
!3662 = !DILocation(line: 1208, column: 29, scope: !3559)
!3663 = !DILocation(line: 1208, column: 59, scope: !3559)
!3664 = !DILocation(line: 1210, column: 30, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3559, file: !3, line: 1210, column: 7)
!3666 = !DILocation(line: 1210, column: 55, scope: !3665)
!3667 = !DILocation(line: 1210, column: 7, scope: !3665)
!3668 = !DILocation(line: 1210, column: 83, scope: !3665)
!3669 = !DILocation(line: 1210, column: 7, scope: !3559)
!3670 = !DILocation(line: 1211, column: 5, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3665, file: !3, line: 1210, column: 98)
!3672 = !DILocation(line: 1213, column: 8, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !3559, file: !3, line: 1213, column: 7)
!3674 = !DILocation(line: 1213, column: 7, scope: !3559)
!3675 = !DILocation(line: 1214, column: 5, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 1213, column: 17)
!3677 = !DILocation(line: 1216, column: 3, scope: !3559)
!3678 = !DILocation(line: 1220, column: 1, scope: !3559)
!3679 = distinct !DISubprogram(name: "mineVariableServiceGetVariable", scope: !3, file: !3, line: 1244, type: !1590, scopeLine: 1252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!3680 = !DILocalVariable(name: "VariableName", arg: 1, scope: !3679, file: !3, line: 1245, type: !117)
!3681 = !DILocation(line: 1245, column: 40, scope: !3679)
!3682 = !DILocalVariable(name: "VendorGuid", arg: 2, scope: !3679, file: !3, line: 1246, type: !1575)
!3683 = !DILocation(line: 1246, column: 40, scope: !3679)
!3684 = !DILocalVariable(name: "Attributes", arg: 3, scope: !3679, file: !3, line: 1247, type: !1576)
!3685 = !DILocation(line: 1247, column: 40, scope: !3679)
!3686 = !DILocalVariable(name: "AccessKey", arg: 4, scope: !3679, file: !3, line: 1248, type: !183)
!3687 = !DILocation(line: 1248, column: 40, scope: !3679)
!3688 = !DILocalVariable(name: "DataSize", arg: 5, scope: !3679, file: !3, line: 1249, type: !173)
!3689 = !DILocation(line: 1249, column: 40, scope: !3679)
!3690 = !DILocalVariable(name: "Data", arg: 6, scope: !3679, file: !3, line: 1250, type: !58)
!3691 = !DILocation(line: 1250, column: 40, scope: !3679)
!3692 = !DILocalVariable(name: "Status", scope: !3679, file: !3, line: 1253, type: !172)
!3693 = !DILocation(line: 1253, column: 35, scope: !3679)
!3694 = !DILocalVariable(name: "Variable", scope: !3679, file: !3, line: 1254, type: !2762)
!3695 = !DILocation(line: 1254, column: 35, scope: !3679)
!3696 = !DILocalVariable(name: "VarDataSize", scope: !3679, file: !3, line: 1255, type: !67)
!3697 = !DILocation(line: 1255, column: 35, scope: !3679)
!3698 = !DILocalVariable(name: "ValidKey", scope: !3679, file: !3, line: 1256, type: !59)
!3699 = !DILocation(line: 1256, column: 35, scope: !3679)
!3700 = !DILocation(line: 1258, column: 8, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3679, file: !3, line: 1258, column: 7)
!3702 = !DILocation(line: 1258, column: 21, scope: !3701)
!3703 = !DILocation(line: 1258, column: 30, scope: !3701)
!3704 = !DILocation(line: 1258, column: 34, scope: !3701)
!3705 = !DILocation(line: 1258, column: 45, scope: !3701)
!3706 = !DILocation(line: 1258, column: 54, scope: !3701)
!3707 = !DILocation(line: 1258, column: 58, scope: !3701)
!3708 = !DILocation(line: 1258, column: 67, scope: !3701)
!3709 = !DILocation(line: 1258, column: 7, scope: !3679)
!3710 = !DILocation(line: 1259, column: 5, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3701, file: !3, line: 1258, column: 77)
!3712 = !DILocation(line: 1262, column: 7, scope: !3713)
!3713 = distinct !DILexicalBlock(scope: !3679, file: !3, line: 1262, column: 7)
!3714 = !DILocation(line: 1262, column: 23, scope: !3713)
!3715 = !DILocation(line: 1262, column: 7, scope: !3679)
!3716 = !DILocation(line: 1263, column: 5, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3713, file: !3, line: 1262, column: 29)
!3718 = !DILocation(line: 1266, column: 30, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3679, file: !3, line: 1266, column: 7)
!3720 = !DILocation(line: 1266, column: 55, scope: !3719)
!3721 = !DILocation(line: 1266, column: 7, scope: !3719)
!3722 = !DILocation(line: 1266, column: 84, scope: !3719)
!3723 = !DILocation(line: 1266, column: 7, scope: !3679)
!3724 = !DILocation(line: 1267, column: 5, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3719, file: !3, line: 1266, column: 99)
!3726 = !DILocation(line: 1269, column: 8, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3679, file: !3, line: 1269, column: 7)
!3728 = !DILocation(line: 1269, column: 7, scope: !3679)
!3729 = !DILocation(line: 1270, column: 5, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 1269, column: 17)
!3731 = !DILocation(line: 1273, column: 44, scope: !3679)
!3732 = !DILocation(line: 1273, column: 58, scope: !3679)
!3733 = !DILocation(line: 1273, column: 82, scope: !3679)
!3734 = !DILocation(line: 1273, column: 108, scope: !3679)
!3735 = !DILocation(line: 1273, column: 12, scope: !3679)
!3736 = !DILocation(line: 1273, column: 10, scope: !3679)
!3737 = !DILocation(line: 1274, column: 17, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3679, file: !3, line: 1274, column: 7)
!3739 = !DILocation(line: 1274, column: 25, scope: !3738)
!3740 = !DILocation(line: 1274, column: 34, scope: !3738)
!3741 = !DILocation(line: 1274, column: 37, scope: !3738)
!3742 = !DILocation(line: 1274, column: 7, scope: !3679)
!3743 = !DILocation(line: 1275, column: 5, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3738, file: !3, line: 1274, column: 57)
!3745 = !DILocation(line: 1281, column: 52, scope: !3679)
!3746 = !DILocation(line: 1281, column: 61, scope: !3679)
!3747 = !DILocation(line: 1281, column: 87, scope: !3679)
!3748 = !DILocation(line: 1281, column: 102, scope: !3679)
!3749 = !DILocation(line: 1281, column: 17, scope: !3679)
!3750 = !DILocation(line: 1281, column: 15, scope: !3679)
!3751 = !DILocation(line: 1282, column: 3, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3753, file: !3, line: 1282, column: 3)
!3753 = distinct !DILexicalBlock(scope: !3679, file: !3, line: 1282, column: 3)
!3754 = !DILocation(line: 1282, column: 3, scope: !3753)
!3755 = !DILocation(line: 1284, column: 8, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3679, file: !3, line: 1284, column: 7)
!3757 = !DILocation(line: 1284, column: 7, scope: !3756)
!3758 = !DILocation(line: 1284, column: 20, scope: !3756)
!3759 = !DILocation(line: 1284, column: 17, scope: !3756)
!3760 = !DILocation(line: 1284, column: 7, scope: !3679)
!3761 = !DILocation(line: 1285, column: 9, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3763, file: !3, line: 1285, column: 9)
!3763 = distinct !DILexicalBlock(scope: !3756, file: !3, line: 1284, column: 33)
!3764 = !DILocation(line: 1285, column: 14, scope: !3762)
!3765 = !DILocation(line: 1285, column: 9, scope: !3763)
!3766 = !DILocation(line: 1286, column: 14, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3762, file: !3, line: 1285, column: 23)
!3768 = !DILocation(line: 1287, column: 7, scope: !3767)
!3769 = !DILocation(line: 1290, column: 14, scope: !3763)
!3770 = !DILocation(line: 1290, column: 55, scope: !3763)
!3771 = !DILocation(line: 1290, column: 64, scope: !3763)
!3772 = !DILocation(line: 1290, column: 90, scope: !3763)
!3773 = !DILocation(line: 1290, column: 105, scope: !3763)
!3774 = !DILocation(line: 1290, column: 20, scope: !3763)
!3775 = !DILocation(line: 1290, column: 118, scope: !3763)
!3776 = !DILocation(line: 1290, column: 5, scope: !3763)
!3777 = !DILocation(line: 1292, column: 17, scope: !3763)
!3778 = !DILocation(line: 1292, column: 6, scope: !3763)
!3779 = !DILocation(line: 1292, column: 15, scope: !3763)
!3780 = !DILocation(line: 1293, column: 31, scope: !3763)
!3781 = !DILocation(line: 1293, column: 45, scope: !3763)
!3782 = !DILocation(line: 1293, column: 66, scope: !3763)
!3783 = !DILocation(line: 1293, column: 5, scope: !3763)
!3784 = !DILocation(line: 1295, column: 12, scope: !3763)
!3785 = !DILocation(line: 1296, column: 5, scope: !3763)
!3786 = !DILocation(line: 1298, column: 17, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !3756, file: !3, line: 1297, column: 10)
!3788 = !DILocation(line: 1298, column: 6, scope: !3787)
!3789 = !DILocation(line: 1298, column: 15, scope: !3787)
!3790 = !DILocation(line: 1299, column: 15, scope: !3787)
!3791 = !DILocation(line: 1300, column: 5, scope: !3787)
!3792 = !DILabel(scope: !3679, name: "Done", file: !3, line: 1303)
!3793 = !DILocation(line: 1303, column: 1, scope: !3679)
!3794 = !DILocation(line: 1304, column: 8, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3679, file: !3, line: 1304, column: 7)
!3796 = !DILocation(line: 1304, column: 15, scope: !3795)
!3797 = !DILocation(line: 1304, column: 31, scope: !3795)
!3798 = !DILocation(line: 1304, column: 35, scope: !3795)
!3799 = !DILocation(line: 1304, column: 42, scope: !3795)
!3800 = !DILocation(line: 1304, column: 7, scope: !3679)
!3801 = !DILocation(line: 1305, column: 10, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3803, file: !3, line: 1305, column: 9)
!3803 = distinct !DILexicalBlock(scope: !3795, file: !3, line: 1304, column: 68)
!3804 = !DILocation(line: 1305, column: 21, scope: !3802)
!3805 = !DILocation(line: 1305, column: 30, scope: !3802)
!3806 = !DILocation(line: 1305, column: 43, scope: !3802)
!3807 = !DILocation(line: 1305, column: 51, scope: !3802)
!3808 = !DILocation(line: 1305, column: 9, scope: !3803)
!3809 = !DILocation(line: 1306, column: 30, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3802, file: !3, line: 1305, column: 61)
!3811 = !DILocation(line: 1306, column: 39, scope: !3810)
!3812 = !DILocation(line: 1306, column: 8, scope: !3810)
!3813 = !DILocation(line: 1306, column: 19, scope: !3810)
!3814 = !DILocation(line: 1307, column: 5, scope: !3810)
!3815 = !DILocation(line: 1308, column: 3, scope: !3803)
!3816 = !DILocation(line: 1310, column: 10, scope: !3679)
!3817 = !DILocation(line: 1310, column: 3, scope: !3679)
!3818 = !DILocation(line: 1311, column: 1, scope: !3679)
!3819 = distinct !DISubprogram(name: "Demo1VariableInit", scope: !3, file: !3, line: 1325, type: !1417, scopeLine: 1329, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!3820 = !DILocalVariable(name: "ImageHandle", arg: 1, scope: !3819, file: !3, line: 1326, type: !217)
!3821 = !DILocation(line: 1326, column: 39, scope: !3819)
!3822 = !DILocalVariable(name: "SystemTable", arg: 2, scope: !3819, file: !3, line: 1327, type: !1419)
!3823 = !DILocation(line: 1327, column: 40, scope: !3819)
!3824 = !DILocalVariable(name: "Status", scope: !3819, file: !3, line: 1330, type: !172)
!3825 = !DILocation(line: 1330, column: 14, scope: !3819)
!3826 = !DILocation(line: 1336, column: 7, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3819, file: !3, line: 1336, column: 7)
!3828 = !DILocation(line: 1336, column: 26, scope: !3827)
!3829 = !DILocation(line: 1336, column: 30, scope: !3827)
!3830 = !DILocation(line: 1336, column: 48, scope: !3827)
!3831 = !DILocation(line: 1336, column: 7, scope: !3819)
!3832 = !DILocation(line: 1339, column: 12, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3827, file: !3, line: 1336, column: 58)
!3834 = !DILocation(line: 1339, column: 5, scope: !3833)
!3835 = !DILocation(line: 1345, column: 30, scope: !3819)
!3836 = !DILocation(line: 1345, column: 28, scope: !3819)
!3837 = !DILocation(line: 1346, column: 7, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3819, file: !3, line: 1346, column: 7)
!3839 = !DILocation(line: 1346, column: 32, scope: !3838)
!3840 = !DILocation(line: 1346, column: 7, scope: !3819)
!3841 = !DILocation(line: 1347, column: 5, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3838, file: !3, line: 1346, column: 41)
!3843 = !DILocation(line: 1353, column: 12, scope: !3819)
!3844 = !DILocation(line: 1353, column: 10, scope: !3819)
!3845 = !DILocation(line: 1354, column: 7, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !3819, file: !3, line: 1354, column: 7)
!3847 = !DILocation(line: 1354, column: 7, scope: !3819)
!3848 = !DILocation(line: 1355, column: 15, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3846, file: !3, line: 1354, column: 27)
!3850 = !DILocation(line: 1355, column: 5, scope: !3849)
!3851 = !DILocation(line: 1356, column: 12, scope: !3849)
!3852 = !DILocation(line: 1356, column: 5, scope: !3849)
!3853 = !DILocation(line: 1359, column: 3, scope: !3819)
!3854 = !DILocation(line: 1359, column: 16, scope: !3819)
!3855 = !DILocation(line: 1359, column: 33, scope: !3819)
!3856 = !DILocation(line: 1359, column: 51, scope: !3819)
!3857 = !DILocation(line: 1360, column: 3, scope: !3819)
!3858 = !DILocation(line: 1360, column: 16, scope: !3819)
!3859 = !DILocation(line: 1360, column: 33, scope: !3819)
!3860 = !DILocation(line: 1360, column: 51, scope: !3819)
!3861 = !DILocation(line: 1361, column: 3, scope: !3819)
!3862 = !DILocation(line: 1362, column: 1, scope: !3819)
!3863 = distinct !DISubprogram(name: "Demo1_Variable_Unload", scope: !3, file: !3, line: 1373, type: !1780, scopeLine: 1376, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !157)
!3864 = !DILocalVariable(name: "ImageHandle", arg: 1, scope: !3863, file: !3, line: 1374, type: !217)
!3865 = !DILocation(line: 1374, column: 39, scope: !3863)
!3866 = !DILocation(line: 1379, column: 12, scope: !3863)
!3867 = !DILocation(line: 1379, column: 3, scope: !3863)
!3868 = !DILocation(line: 1380, column: 3, scope: !3863)
!3869 = !DILocalVariable(name: "VariableName", scope: !153, file: !3, line: 1425, type: !117)
!3870 = !DILocation(line: 1425, column: 37, scope: !153)
!3871 = !DILocalVariable(name: "VendorGuid", scope: !153, file: !3, line: 1426, type: !1575)
!3872 = !DILocation(line: 1426, column: 37, scope: !153)
!3873 = !DILocalVariable(name: "Attributes", scope: !153, file: !3, line: 1427, type: !82)
!3874 = !DILocation(line: 1427, column: 36, scope: !153)
!3875 = !DILocalVariable(name: "DataSize", scope: !153, file: !3, line: 1428, type: !67)
!3876 = !DILocation(line: 1428, column: 36, scope: !153)
!3877 = !DILocalVariable(name: "Data", scope: !153, file: !3, line: 1429, type: !58)
!3878 = !DILocation(line: 1429, column: 37, scope: !153)
!3879 = !DILocalVariable(name: "AccessKey", scope: !153, file: !3, line: 1431, type: !183)
!3880 = !DILocation(line: 1431, column: 22, scope: !153)
!3881 = !DILocation(line: 1432, column: 41, scope: !153)
!3882 = !DILocation(line: 1432, column: 15, scope: !153)
!3883 = !DILocation(line: 1432, column: 13, scope: !153)
!3884 = !DILocation(line: 1433, column: 22, scope: !153)
!3885 = !DILocation(line: 1433, column: 3, scope: !153)
!3886 = !DILocation(line: 1434, column: 15, scope: !153)
!3887 = !DILocation(line: 1434, column: 26, scope: !153)
!3888 = !DILocation(line: 1434, column: 46, scope: !153)
!3889 = !DILocation(line: 1434, column: 3, scope: !153)
!3890 = !DILocation(line: 1437, column: 22, scope: !153)
!3891 = !DILocation(line: 1437, column: 3, scope: !153)
!3892 = !DILocation(line: 1445, column: 30, scope: !153)
!3893 = !DILocation(line: 1445, column: 28, scope: !153)
!3894 = !DILocation(line: 1446, column: 3, scope: !153)
!3895 = !DILocation(line: 1447, column: 16, scope: !153)
!3896 = !DILocalVariable(name: "ExampleVar_Value", scope: !153, file: !3, line: 1448, type: !67)
!3897 = !DILocation(line: 1448, column: 9, scope: !153)
!3898 = !DILocation(line: 1449, column: 34, scope: !153)
!3899 = !DILocation(line: 1449, column: 48, scope: !153)
!3900 = !DILocation(line: 1449, column: 151, scope: !153)
!3901 = !DILocation(line: 1449, column: 190, scope: !153)
!3902 = !DILocation(line: 1449, column: 3, scope: !153)
!3903 = !DILocation(line: 1450, column: 3, scope: !153)
!3904 = distinct !DISubprogram(name: "klee_init_fds", scope: !354, file: !354, line: 105, type: !3905, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !349, retainedNodes: !157)
!3905 = !DISubroutineType(types: !3906)
!3906 = !{null, !7, !7, !7, !156, !156, !7}
!3907 = !DILocalVariable(name: "n_files", arg: 1, scope: !3904, file: !354, line: 105, type: !7)
!3908 = !DILocation(line: 105, column: 29, scope: !3904)
!3909 = !DILocalVariable(name: "file_length", arg: 2, scope: !3904, file: !354, line: 105, type: !7)
!3910 = !DILocation(line: 105, column: 47, scope: !3904)
!3911 = !DILocalVariable(name: "stdin_length", arg: 3, scope: !3904, file: !354, line: 106, type: !7)
!3912 = !DILocation(line: 106, column: 29, scope: !3904)
!3913 = !DILocalVariable(name: "sym_stdout_flag", arg: 4, scope: !3904, file: !354, line: 106, type: !156)
!3914 = !DILocation(line: 106, column: 47, scope: !3904)
!3915 = !DILocalVariable(name: "save_all_writes_flag", arg: 5, scope: !3904, file: !354, line: 107, type: !156)
!3916 = !DILocation(line: 107, column: 24, scope: !3904)
!3917 = !DILocalVariable(name: "max_failures", arg: 6, scope: !3904, file: !354, line: 107, type: !7)
!3918 = !DILocation(line: 107, column: 55, scope: !3904)
!3919 = !DILocalVariable(name: "k", scope: !3904, file: !354, line: 108, type: !7)
!3920 = !DILocation(line: 108, column: 12, scope: !3904)
!3921 = !DILocalVariable(name: "name", scope: !3904, file: !354, line: 109, type: !3922)
!3922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 56, elements: !3923)
!3923 = !{!3924}
!3924 = !DISubrange(count: 7)
!3925 = !DILocation(line: 109, column: 8, scope: !3904)
!3926 = !DILocalVariable(name: "s", scope: !3904, file: !354, line: 110, type: !370)
!3927 = !DILocation(line: 110, column: 17, scope: !3904)
!3928 = !DILocation(line: 112, column: 3, scope: !3904)
!3929 = !DILocation(line: 114, column: 26, scope: !3904)
!3930 = !DILocation(line: 114, column: 24, scope: !3904)
!3931 = !DILocation(line: 115, column: 61, scope: !3904)
!3932 = !DILocation(line: 115, column: 59, scope: !3904)
!3933 = !DILocation(line: 115, column: 24, scope: !3904)
!3934 = !DILocation(line: 115, column: 22, scope: !3904)
!3935 = !DILocation(line: 116, column: 7, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3904, file: !354, line: 116, column: 7)
!3937 = !DILocation(line: 116, column: 15, scope: !3936)
!3938 = !DILocation(line: 117, column: 5, scope: !3936)
!3939 = !DILocation(line: 119, column: 9, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3904, file: !354, line: 119, column: 3)
!3941 = !DILocation(line: 119, column: 8, scope: !3940)
!3942 = !DILocation(line: 119, column: 13, scope: !3943)
!3943 = distinct !DILexicalBlock(scope: !3940, file: !354, line: 119, column: 3)
!3944 = !DILocation(line: 119, column: 17, scope: !3943)
!3945 = !DILocation(line: 119, column: 15, scope: !3943)
!3946 = !DILocation(line: 119, column: 3, scope: !3940)
!3947 = !DILocation(line: 120, column: 21, scope: !3948)
!3948 = distinct !DILexicalBlock(scope: !3943, file: !354, line: 119, column: 31)
!3949 = !DILocation(line: 120, column: 19, scope: !3948)
!3950 = !DILocation(line: 120, column: 15, scope: !3948)
!3951 = !DILocation(line: 120, column: 5, scope: !3948)
!3952 = !DILocation(line: 120, column: 13, scope: !3948)
!3953 = !DILocation(line: 121, column: 34, scope: !3948)
!3954 = !DILocation(line: 121, column: 44, scope: !3948)
!3955 = !DILocation(line: 121, column: 25, scope: !3948)
!3956 = !DILocation(line: 121, column: 48, scope: !3948)
!3957 = !DILocation(line: 121, column: 61, scope: !3948)
!3958 = !DILocation(line: 121, column: 5, scope: !3948)
!3959 = !DILocation(line: 119, column: 27, scope: !3943)
!3960 = !DILocation(line: 119, column: 3, scope: !3943)
!3961 = distinct !{!3961, !3946, !3962}
!3962 = !DILocation(line: 122, column: 3, scope: !3940)
!3963 = !DILocation(line: 125, column: 7, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3904, file: !354, line: 125, column: 7)
!3965 = !DILocation(line: 125, column: 7, scope: !3904)
!3966 = !DILocation(line: 126, column: 26, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3964, file: !354, line: 125, column: 21)
!3968 = !DILocation(line: 126, column: 24, scope: !3967)
!3969 = !DILocation(line: 127, column: 19, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3967, file: !354, line: 127, column: 9)
!3971 = !DILocation(line: 127, column: 10, scope: !3970)
!3972 = !DILocation(line: 127, column: 9, scope: !3967)
!3973 = !DILocation(line: 128, column: 7, scope: !3970)
!3974 = !DILocation(line: 129, column: 33, scope: !3967)
!3975 = !DILocation(line: 129, column: 44, scope: !3967)
!3976 = !DILocation(line: 129, column: 5, scope: !3967)
!3977 = !DILocation(line: 130, column: 39, scope: !3967)
!3978 = !DILocation(line: 130, column: 28, scope: !3967)
!3979 = !DILocation(line: 131, column: 3, scope: !3967)
!3980 = !DILocation(line: 132, column: 27, scope: !3964)
!3981 = !DILocation(line: 134, column: 27, scope: !3904)
!3982 = !DILocation(line: 134, column: 25, scope: !3904)
!3983 = !DILocation(line: 135, column: 16, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3904, file: !354, line: 135, column: 7)
!3985 = !DILocation(line: 135, column: 7, scope: !3984)
!3986 = !DILocation(line: 135, column: 7, scope: !3904)
!3987 = !DILocation(line: 136, column: 26, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3984, file: !354, line: 135, column: 30)
!3989 = !DILocation(line: 136, column: 24, scope: !3988)
!3990 = !DILocation(line: 137, column: 27, scope: !3988)
!3991 = !DILocation(line: 137, column: 25, scope: !3988)
!3992 = !DILocation(line: 138, column: 27, scope: !3988)
!3993 = !DILocation(line: 138, column: 25, scope: !3988)
!3994 = !DILocation(line: 139, column: 31, scope: !3988)
!3995 = !DILocation(line: 139, column: 29, scope: !3988)
!3996 = !DILocation(line: 140, column: 28, scope: !3988)
!3997 = !DILocation(line: 140, column: 26, scope: !3988)
!3998 = !DILocation(line: 141, column: 20, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !3988, file: !354, line: 141, column: 9)
!4000 = !DILocation(line: 141, column: 11, scope: !3999)
!4001 = !DILocation(line: 141, column: 30, scope: !3999)
!4002 = !DILocation(line: 143, column: 7, scope: !3999)
!4003 = !DILocation(line: 145, column: 33, scope: !3988)
!4004 = !DILocation(line: 145, column: 24, scope: !3988)
!4005 = !DILocation(line: 145, column: 5, scope: !3988)
!4006 = !DILocation(line: 146, column: 33, scope: !3988)
!4007 = !DILocation(line: 146, column: 24, scope: !3988)
!4008 = !DILocation(line: 146, column: 5, scope: !3988)
!4009 = !DILocation(line: 147, column: 33, scope: !3988)
!4010 = !DILocation(line: 147, column: 24, scope: !3988)
!4011 = !DILocation(line: 147, column: 5, scope: !3988)
!4012 = !DILocation(line: 148, column: 33, scope: !3988)
!4013 = !DILocation(line: 148, column: 24, scope: !3988)
!4014 = !DILocation(line: 148, column: 5, scope: !3988)
!4015 = !DILocation(line: 149, column: 33, scope: !3988)
!4016 = !DILocation(line: 149, column: 24, scope: !3988)
!4017 = !DILocation(line: 149, column: 5, scope: !3988)
!4018 = !DILocation(line: 150, column: 3, scope: !3988)
!4019 = !DILocation(line: 153, column: 7, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !3904, file: !354, line: 153, column: 7)
!4021 = !DILocation(line: 153, column: 7, scope: !3904)
!4022 = !DILocation(line: 154, column: 27, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !4020, file: !354, line: 153, column: 24)
!4024 = !DILocation(line: 154, column: 25, scope: !4023)
!4025 = !DILocation(line: 155, column: 19, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !4023, file: !354, line: 155, column: 9)
!4027 = !DILocation(line: 155, column: 10, scope: !4026)
!4028 = !DILocation(line: 155, column: 9, scope: !4023)
!4029 = !DILocation(line: 156, column: 7, scope: !4026)
!4030 = !DILocation(line: 157, column: 33, scope: !4023)
!4031 = !DILocation(line: 157, column: 5, scope: !4023)
!4032 = !DILocation(line: 158, column: 39, scope: !4023)
!4033 = !DILocation(line: 158, column: 28, scope: !4023)
!4034 = !DILocation(line: 159, column: 28, scope: !4023)
!4035 = !DILocation(line: 160, column: 3, scope: !4023)
!4036 = !DILocation(line: 161, column: 28, scope: !4020)
!4037 = !DILocation(line: 163, column: 31, scope: !3904)
!4038 = !DILocation(line: 163, column: 29, scope: !3904)
!4039 = !DILocation(line: 164, column: 1, scope: !3904)
!4040 = distinct !DISubprogram(name: "__create_new_dfile", scope: !354, file: !354, line: 42, type: !4041, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !349, retainedNodes: !157)
!4041 = !DISubroutineType(types: !4042)
!4042 = !{null, !361, !7, !533, !369}
!4043 = !DILocalVariable(name: "dfile", arg: 1, scope: !4040, file: !354, line: 42, type: !361)
!4044 = !DILocation(line: 42, column: 49, scope: !4040)
!4045 = !DILocalVariable(name: "size", arg: 2, scope: !4040, file: !354, line: 42, type: !7)
!4046 = !DILocation(line: 42, column: 65, scope: !4040)
!4047 = !DILocalVariable(name: "name", arg: 3, scope: !4040, file: !354, line: 43, type: !533)
!4048 = !DILocation(line: 43, column: 44, scope: !4040)
!4049 = !DILocalVariable(name: "defaults", arg: 4, scope: !4040, file: !354, line: 43, type: !369)
!4050 = !DILocation(line: 43, column: 65, scope: !4040)
!4051 = !DILocalVariable(name: "s", scope: !4040, file: !354, line: 44, type: !369)
!4052 = !DILocation(line: 44, column: 18, scope: !4040)
!4053 = !DILocation(line: 44, column: 22, scope: !4040)
!4054 = !DILocation(line: 45, column: 8, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4040, file: !354, line: 45, column: 7)
!4056 = !DILocation(line: 45, column: 7, scope: !4040)
!4057 = !DILocation(line: 46, column: 5, scope: !4055)
!4058 = !DILocalVariable(name: "sp", scope: !4040, file: !354, line: 48, type: !533)
!4059 = !DILocation(line: 48, column: 15, scope: !4040)
!4060 = !DILocalVariable(name: "sname", scope: !4040, file: !354, line: 49, type: !4061)
!4061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 512, elements: !4062)
!4062 = !{!4063}
!4063 = !DISubrange(count: 64)
!4064 = !DILocation(line: 49, column: 8, scope: !4040)
!4065 = !DILocation(line: 50, column: 11, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4040, file: !354, line: 50, column: 3)
!4067 = !DILocation(line: 50, column: 10, scope: !4066)
!4068 = !DILocation(line: 50, column: 8, scope: !4066)
!4069 = !DILocation(line: 50, column: 18, scope: !4070)
!4070 = distinct !DILexicalBlock(scope: !4066, file: !354, line: 50, column: 3)
!4071 = !DILocation(line: 50, column: 17, scope: !4070)
!4072 = !DILocation(line: 50, column: 3, scope: !4066)
!4073 = !DILocation(line: 51, column: 23, scope: !4070)
!4074 = !DILocation(line: 51, column: 22, scope: !4070)
!4075 = !DILocation(line: 51, column: 11, scope: !4070)
!4076 = !DILocation(line: 51, column: 14, scope: !4070)
!4077 = !DILocation(line: 51, column: 13, scope: !4070)
!4078 = !DILocation(line: 51, column: 5, scope: !4070)
!4079 = !DILocation(line: 51, column: 20, scope: !4070)
!4080 = !DILocation(line: 50, column: 22, scope: !4070)
!4081 = !DILocation(line: 50, column: 3, scope: !4070)
!4082 = distinct !{!4082, !4072, !4083}
!4083 = !DILocation(line: 51, column: 23, scope: !4066)
!4084 = !DILocation(line: 52, column: 17, scope: !4040)
!4085 = !DILocation(line: 52, column: 20, scope: !4040)
!4086 = !DILocation(line: 52, column: 19, scope: !4040)
!4087 = !DILocation(line: 52, column: 11, scope: !4040)
!4088 = !DILocation(line: 52, column: 3, scope: !4040)
!4089 = !DILocation(line: 54, column: 3, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4091, file: !354, line: 54, column: 3)
!4091 = distinct !DILexicalBlock(scope: !4040, file: !354, line: 54, column: 3)
!4092 = !DILocation(line: 54, column: 3, scope: !4091)
!4093 = !DILocation(line: 56, column: 17, scope: !4040)
!4094 = !DILocation(line: 56, column: 3, scope: !4040)
!4095 = !DILocation(line: 56, column: 10, scope: !4040)
!4096 = !DILocation(line: 56, column: 15, scope: !4040)
!4097 = !DILocation(line: 57, column: 28, scope: !4040)
!4098 = !DILocation(line: 57, column: 35, scope: !4040)
!4099 = !DILocation(line: 57, column: 21, scope: !4040)
!4100 = !DILocation(line: 57, column: 3, scope: !4040)
!4101 = !DILocation(line: 57, column: 10, scope: !4040)
!4102 = !DILocation(line: 57, column: 19, scope: !4040)
!4103 = !DILocation(line: 58, column: 8, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4040, file: !354, line: 58, column: 7)
!4105 = !DILocation(line: 58, column: 15, scope: !4104)
!4106 = !DILocation(line: 58, column: 7, scope: !4040)
!4107 = !DILocation(line: 59, column: 5, scope: !4104)
!4108 = !DILocation(line: 60, column: 22, scope: !4040)
!4109 = !DILocation(line: 60, column: 29, scope: !4040)
!4110 = !DILocation(line: 60, column: 39, scope: !4040)
!4111 = !DILocation(line: 60, column: 46, scope: !4040)
!4112 = !DILocation(line: 60, column: 52, scope: !4040)
!4113 = !DILocation(line: 60, column: 3, scope: !4040)
!4114 = !DILocation(line: 62, column: 22, scope: !4040)
!4115 = !DILocation(line: 62, column: 37, scope: !4040)
!4116 = !DILocation(line: 62, column: 3, scope: !4040)
!4117 = !DILocation(line: 65, column: 25, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4040, file: !354, line: 65, column: 7)
!4119 = !DILocation(line: 65, column: 28, scope: !4118)
!4120 = !DILocation(line: 65, column: 8, scope: !4118)
!4121 = !DILocation(line: 65, column: 36, scope: !4118)
!4122 = !DILocation(line: 66, column: 8, scope: !4118)
!4123 = !DILocation(line: 66, column: 11, scope: !4118)
!4124 = !DILocation(line: 66, column: 18, scope: !4118)
!4125 = !DILocation(line: 66, column: 32, scope: !4118)
!4126 = !DILocation(line: 65, column: 7, scope: !4040)
!4127 = !DILocation(line: 67, column: 17, scope: !4118)
!4128 = !DILocation(line: 67, column: 27, scope: !4118)
!4129 = !DILocation(line: 67, column: 5, scope: !4118)
!4130 = !DILocation(line: 67, column: 8, scope: !4118)
!4131 = !DILocation(line: 67, column: 15, scope: !4118)
!4132 = !DILocation(line: 72, column: 16, scope: !4040)
!4133 = !DILocation(line: 72, column: 19, scope: !4040)
!4134 = !DILocation(line: 72, column: 26, scope: !4040)
!4135 = !DILocation(line: 72, column: 40, scope: !4040)
!4136 = !DILocation(line: 72, column: 15, scope: !4040)
!4137 = !DILocation(line: 72, column: 3, scope: !4040)
!4138 = !DILocation(line: 76, column: 16, scope: !4040)
!4139 = !DILocation(line: 76, column: 19, scope: !4040)
!4140 = !DILocation(line: 76, column: 30, scope: !4040)
!4141 = !DILocation(line: 76, column: 41, scope: !4040)
!4142 = !DILocation(line: 76, column: 15, scope: !4040)
!4143 = !DILocation(line: 76, column: 3, scope: !4040)
!4144 = !DILocation(line: 78, column: 19, scope: !4040)
!4145 = !DILocation(line: 78, column: 24, scope: !4040)
!4146 = !DILocation(line: 78, column: 27, scope: !4040)
!4147 = !DILocation(line: 78, column: 35, scope: !4040)
!4148 = !DILocation(line: 78, column: 22, scope: !4040)
!4149 = !DILocation(line: 78, column: 3, scope: !4040)
!4150 = !DILocation(line: 79, column: 19, scope: !4040)
!4151 = !DILocation(line: 79, column: 22, scope: !4040)
!4152 = !DILocation(line: 79, column: 25, scope: !4040)
!4153 = !DILocation(line: 79, column: 35, scope: !4040)
!4154 = !DILocation(line: 79, column: 45, scope: !4040)
!4155 = !DILocation(line: 79, column: 32, scope: !4040)
!4156 = !DILocation(line: 79, column: 3, scope: !4040)
!4157 = !DILocation(line: 80, column: 19, scope: !4040)
!4158 = !DILocation(line: 80, column: 22, scope: !4040)
!4159 = !DILocation(line: 80, column: 25, scope: !4040)
!4160 = !DILocation(line: 80, column: 36, scope: !4040)
!4161 = !DILocation(line: 80, column: 46, scope: !4040)
!4162 = !DILocation(line: 80, column: 33, scope: !4040)
!4163 = !DILocation(line: 80, column: 3, scope: !4040)
!4164 = !DILocation(line: 81, column: 19, scope: !4040)
!4165 = !DILocation(line: 81, column: 23, scope: !4040)
!4166 = !DILocation(line: 81, column: 26, scope: !4040)
!4167 = !DILocation(line: 81, column: 33, scope: !4040)
!4168 = !DILocation(line: 81, column: 40, scope: !4040)
!4169 = !DILocation(line: 81, column: 22, scope: !4040)
!4170 = !DILocation(line: 81, column: 3, scope: !4040)
!4171 = !DILocation(line: 82, column: 19, scope: !4040)
!4172 = !DILocation(line: 82, column: 23, scope: !4040)
!4173 = !DILocation(line: 82, column: 26, scope: !4040)
!4174 = !DILocation(line: 82, column: 33, scope: !4040)
!4175 = !DILocation(line: 82, column: 40, scope: !4040)
!4176 = !DILocation(line: 82, column: 22, scope: !4040)
!4177 = !DILocation(line: 82, column: 3, scope: !4040)
!4178 = !DILocation(line: 83, column: 19, scope: !4040)
!4179 = !DILocation(line: 83, column: 23, scope: !4040)
!4180 = !DILocation(line: 83, column: 26, scope: !4040)
!4181 = !DILocation(line: 83, column: 33, scope: !4040)
!4182 = !DILocation(line: 83, column: 40, scope: !4040)
!4183 = !DILocation(line: 83, column: 22, scope: !4040)
!4184 = !DILocation(line: 83, column: 3, scope: !4040)
!4185 = !DILocation(line: 84, column: 19, scope: !4040)
!4186 = !DILocation(line: 84, column: 23, scope: !4040)
!4187 = !DILocation(line: 84, column: 26, scope: !4040)
!4188 = !DILocation(line: 84, column: 33, scope: !4040)
!4189 = !DILocation(line: 84, column: 42, scope: !4040)
!4190 = !DILocation(line: 84, column: 22, scope: !4040)
!4191 = !DILocation(line: 84, column: 3, scope: !4040)
!4192 = !DILocation(line: 85, column: 19, scope: !4040)
!4193 = !DILocation(line: 85, column: 22, scope: !4040)
!4194 = !DILocation(line: 85, column: 25, scope: !4040)
!4195 = !DILocation(line: 85, column: 34, scope: !4040)
!4196 = !DILocation(line: 85, column: 3, scope: !4040)
!4197 = !DILocation(line: 86, column: 19, scope: !4040)
!4198 = !DILocation(line: 86, column: 22, scope: !4040)
!4199 = !DILocation(line: 86, column: 25, scope: !4040)
!4200 = !DILocation(line: 86, column: 35, scope: !4040)
!4201 = !DILocation(line: 86, column: 45, scope: !4040)
!4202 = !DILocation(line: 86, column: 32, scope: !4040)
!4203 = !DILocation(line: 86, column: 3, scope: !4040)
!4204 = !DILocation(line: 87, column: 19, scope: !4040)
!4205 = !DILocation(line: 87, column: 22, scope: !4040)
!4206 = !DILocation(line: 87, column: 25, scope: !4040)
!4207 = !DILocation(line: 87, column: 35, scope: !4040)
!4208 = !DILocation(line: 87, column: 45, scope: !4040)
!4209 = !DILocation(line: 87, column: 32, scope: !4040)
!4210 = !DILocation(line: 87, column: 3, scope: !4040)
!4211 = !DILocation(line: 88, column: 19, scope: !4040)
!4212 = !DILocation(line: 88, column: 22, scope: !4040)
!4213 = !DILocation(line: 88, column: 25, scope: !4040)
!4214 = !DILocation(line: 88, column: 36, scope: !4040)
!4215 = !DILocation(line: 88, column: 3, scope: !4040)
!4216 = !DILocation(line: 89, column: 19, scope: !4040)
!4217 = !DILocation(line: 89, column: 22, scope: !4040)
!4218 = !DILocation(line: 89, column: 25, scope: !4040)
!4219 = !DILocation(line: 89, column: 37, scope: !4040)
!4220 = !DILocation(line: 89, column: 47, scope: !4040)
!4221 = !DILocation(line: 89, column: 34, scope: !4040)
!4222 = !DILocation(line: 89, column: 3, scope: !4040)
!4223 = !DILocation(line: 90, column: 19, scope: !4040)
!4224 = !DILocation(line: 90, column: 22, scope: !4040)
!4225 = !DILocation(line: 90, column: 25, scope: !4040)
!4226 = !DILocation(line: 90, column: 37, scope: !4040)
!4227 = !DILocation(line: 90, column: 47, scope: !4040)
!4228 = !DILocation(line: 90, column: 34, scope: !4040)
!4229 = !DILocation(line: 90, column: 3, scope: !4040)
!4230 = !DILocation(line: 91, column: 19, scope: !4040)
!4231 = !DILocation(line: 91, column: 22, scope: !4040)
!4232 = !DILocation(line: 91, column: 25, scope: !4040)
!4233 = !DILocation(line: 91, column: 37, scope: !4040)
!4234 = !DILocation(line: 91, column: 47, scope: !4040)
!4235 = !DILocation(line: 91, column: 34, scope: !4040)
!4236 = !DILocation(line: 91, column: 3, scope: !4040)
!4237 = !DILocation(line: 93, column: 16, scope: !4040)
!4238 = !DILocation(line: 93, column: 23, scope: !4040)
!4239 = !DILocation(line: 93, column: 3, scope: !4040)
!4240 = !DILocation(line: 93, column: 6, scope: !4040)
!4241 = !DILocation(line: 93, column: 14, scope: !4040)
!4242 = !DILocation(line: 94, column: 3, scope: !4040)
!4243 = !DILocation(line: 94, column: 6, scope: !4040)
!4244 = !DILocation(line: 94, column: 16, scope: !4040)
!4245 = !DILocation(line: 95, column: 17, scope: !4040)
!4246 = !DILocation(line: 95, column: 3, scope: !4040)
!4247 = !DILocation(line: 95, column: 10, scope: !4040)
!4248 = !DILocation(line: 95, column: 15, scope: !4040)
!4249 = !DILocation(line: 96, column: 1, scope: !4040)
!4250 = distinct !DISubprogram(name: "klee_range", scope: !4251, file: !4251, line: 14, type: !4252, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !549, retainedNodes: !157)
!4251 = !DIFile(filename: "klee/runtime/Intrinsic/klee_range.c", directory: "/home/laboni/kleeEnv")
!4252 = !DISubroutineType(types: !4253)
!4253 = !{!156, !156, !156, !533}
!4254 = !DILocalVariable(name: "start", arg: 1, scope: !4250, file: !4251, line: 14, type: !156)
!4255 = !DILocation(line: 14, column: 20, scope: !4250)
!4256 = !DILocalVariable(name: "end", arg: 2, scope: !4250, file: !4251, line: 14, type: !156)
!4257 = !DILocation(line: 14, column: 31, scope: !4250)
!4258 = !DILocalVariable(name: "name", arg: 3, scope: !4250, file: !4251, line: 14, type: !533)
!4259 = !DILocation(line: 14, column: 48, scope: !4250)
!4260 = !DILocalVariable(name: "x", scope: !4250, file: !4251, line: 15, type: !156)
!4261 = !DILocation(line: 15, column: 7, scope: !4250)
!4262 = !DILocation(line: 17, column: 7, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4250, file: !4251, line: 17, column: 7)
!4264 = !DILocation(line: 17, column: 16, scope: !4263)
!4265 = !DILocation(line: 17, column: 13, scope: !4263)
!4266 = !DILocation(line: 17, column: 7, scope: !4250)
!4267 = !DILocation(line: 18, column: 5, scope: !4263)
!4268 = !DILocation(line: 20, column: 7, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4250, file: !4251, line: 20, column: 7)
!4270 = !DILocation(line: 20, column: 12, scope: !4269)
!4271 = !DILocation(line: 20, column: 16, scope: !4269)
!4272 = !DILocation(line: 20, column: 14, scope: !4269)
!4273 = !DILocation(line: 20, column: 7, scope: !4250)
!4274 = !DILocation(line: 21, column: 12, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4269, file: !4251, line: 20, column: 21)
!4276 = !DILocation(line: 21, column: 5, scope: !4275)
!4277 = !DILocation(line: 23, column: 24, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4269, file: !4251, line: 22, column: 10)
!4279 = !DILocation(line: 23, column: 38, scope: !4278)
!4280 = !DILocation(line: 23, column: 5, scope: !4278)
!4281 = !DILocation(line: 26, column: 9, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4278, file: !4251, line: 26, column: 9)
!4283 = !DILocation(line: 26, column: 14, scope: !4282)
!4284 = !DILocation(line: 26, column: 9, scope: !4278)
!4285 = !DILocation(line: 27, column: 30, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4282, file: !4251, line: 26, column: 19)
!4287 = !DILocation(line: 27, column: 45, scope: !4286)
!4288 = !DILocation(line: 27, column: 32, scope: !4286)
!4289 = !DILocation(line: 27, column: 19, scope: !4286)
!4290 = !DILocation(line: 27, column: 7, scope: !4286)
!4291 = !DILocation(line: 28, column: 5, scope: !4286)
!4292 = !DILocation(line: 29, column: 19, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4282, file: !4251, line: 28, column: 12)
!4294 = !DILocation(line: 29, column: 28, scope: !4293)
!4295 = !DILocation(line: 29, column: 25, scope: !4293)
!4296 = !DILocation(line: 29, column: 7, scope: !4293)
!4297 = !DILocation(line: 30, column: 19, scope: !4293)
!4298 = !DILocation(line: 30, column: 23, scope: !4293)
!4299 = !DILocation(line: 30, column: 21, scope: !4293)
!4300 = !DILocation(line: 30, column: 7, scope: !4293)
!4301 = !DILocation(line: 33, column: 12, scope: !4278)
!4302 = !DILocation(line: 33, column: 5, scope: !4278)
!4303 = !DILocation(line: 35, column: 1, scope: !4250)
!4304 = distinct !DISubprogram(name: "open", linkageName: "open64", scope: !4305, file: !4305, line: 48, type: !4306, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !552, retainedNodes: !157)
!4305 = !DIFile(filename: "klee/runtime/POSIX/fd_64.c", directory: "/home/laboni/kleeEnv")
!4306 = !DISubroutineType(types: !4307)
!4307 = !{!156, !533, !156, null}
!4308 = !DILocalVariable(name: "pathname", arg: 1, scope: !4304, file: !4305, line: 48, type: !533)
!4309 = !DILocation(line: 48, column: 22, scope: !4304)
!4310 = !DILocalVariable(name: "flags", arg: 2, scope: !4304, file: !4305, line: 48, type: !156)
!4311 = !DILocation(line: 48, column: 36, scope: !4304)
!4312 = !DILocalVariable(name: "mode", scope: !4304, file: !4305, line: 49, type: !440)
!4313 = !DILocation(line: 49, column: 10, scope: !4304)
!4314 = !DILocation(line: 51, column: 7, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4304, file: !4305, line: 51, column: 7)
!4316 = !DILocation(line: 51, column: 13, scope: !4315)
!4317 = !DILocation(line: 51, column: 7, scope: !4304)
!4318 = !DILocalVariable(name: "ap", scope: !4319, file: !4305, line: 53, type: !4320)
!4319 = distinct !DILexicalBlock(scope: !4315, file: !4305, line: 51, column: 24)
!4320 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4321, line: 52, baseType: !4322)
!4321 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!4322 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4323, line: 32, baseType: !4324)
!4323 = !DIFile(filename: "/usr/lib/llvm-12/lib/clang/12.0.0/include/stdarg.h", directory: "")
!4324 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !4305, baseType: !4325)
!4325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4326, size: 192, elements: !4332)
!4326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", size: 192, elements: !4327)
!4327 = !{!4328, !4329, !4330, !4331}
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !4326, file: !4305, line: 53, baseType: !7, size: 32)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !4326, file: !4305, line: 53, baseType: !7, size: 32, offset: 32)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !4326, file: !4305, line: 53, baseType: !58, size: 64, offset: 64)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !4326, file: !4305, line: 53, baseType: !58, size: 64, offset: 128)
!4332 = !{!4333}
!4333 = !DISubrange(count: 1)
!4334 = !DILocation(line: 53, column: 13, scope: !4319)
!4335 = !DILocation(line: 54, column: 5, scope: !4319)
!4336 = !DILocation(line: 55, column: 12, scope: !4319)
!4337 = !DILocation(line: 55, column: 10, scope: !4319)
!4338 = !DILocation(line: 56, column: 5, scope: !4319)
!4339 = !DILocation(line: 57, column: 3, scope: !4319)
!4340 = !DILocation(line: 59, column: 20, scope: !4304)
!4341 = !DILocation(line: 59, column: 30, scope: !4304)
!4342 = !DILocation(line: 59, column: 37, scope: !4304)
!4343 = !DILocation(line: 59, column: 10, scope: !4304)
!4344 = !DILocation(line: 59, column: 3, scope: !4304)
!4345 = distinct !DISubprogram(name: "openat", linkageName: "openat64", scope: !4305, file: !4305, line: 62, type: !4346, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !552, retainedNodes: !157)
!4346 = !DISubroutineType(types: !4347)
!4347 = !{!156, !156, !533, !156, null}
!4348 = !DILocalVariable(name: "fd", arg: 1, scope: !4345, file: !4305, line: 62, type: !156)
!4349 = !DILocation(line: 62, column: 16, scope: !4345)
!4350 = !DILocalVariable(name: "pathname", arg: 2, scope: !4345, file: !4305, line: 62, type: !533)
!4351 = !DILocation(line: 62, column: 32, scope: !4345)
!4352 = !DILocalVariable(name: "flags", arg: 3, scope: !4345, file: !4305, line: 62, type: !156)
!4353 = !DILocation(line: 62, column: 46, scope: !4345)
!4354 = !DILocalVariable(name: "mode", scope: !4345, file: !4305, line: 63, type: !440)
!4355 = !DILocation(line: 63, column: 10, scope: !4345)
!4356 = !DILocation(line: 65, column: 7, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4345, file: !4305, line: 65, column: 7)
!4358 = !DILocation(line: 65, column: 13, scope: !4357)
!4359 = !DILocation(line: 65, column: 7, scope: !4345)
!4360 = !DILocalVariable(name: "ap", scope: !4361, file: !4305, line: 67, type: !4320)
!4361 = distinct !DILexicalBlock(scope: !4357, file: !4305, line: 65, column: 24)
!4362 = !DILocation(line: 67, column: 13, scope: !4361)
!4363 = !DILocation(line: 68, column: 5, scope: !4361)
!4364 = !DILocation(line: 69, column: 12, scope: !4361)
!4365 = !DILocation(line: 69, column: 10, scope: !4361)
!4366 = !DILocation(line: 70, column: 5, scope: !4361)
!4367 = !DILocation(line: 71, column: 3, scope: !4361)
!4368 = !DILocation(line: 73, column: 22, scope: !4345)
!4369 = !DILocation(line: 73, column: 26, scope: !4345)
!4370 = !DILocation(line: 73, column: 36, scope: !4345)
!4371 = !DILocation(line: 73, column: 43, scope: !4345)
!4372 = !DILocation(line: 73, column: 10, scope: !4345)
!4373 = !DILocation(line: 73, column: 3, scope: !4345)
!4374 = distinct !DISubprogram(name: "lseek", linkageName: "lseek64", scope: !4305, file: !4305, line: 86, type: !4375, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !552, retainedNodes: !157)
!4375 = !DISubroutineType(types: !4376)
!4376 = !{!435, !156, !433, !156}
!4377 = !DILocalVariable(name: "fd", arg: 1, scope: !4374, file: !4305, line: 86, type: !156)
!4378 = !DILocation(line: 86, column: 19, scope: !4374)
!4379 = !DILocalVariable(name: "offset", arg: 2, scope: !4374, file: !4305, line: 86, type: !433)
!4380 = !DILocation(line: 86, column: 31, scope: !4374)
!4381 = !DILocalVariable(name: "whence", arg: 3, scope: !4374, file: !4305, line: 86, type: !156)
!4382 = !DILocation(line: 86, column: 43, scope: !4374)
!4383 = !DILocation(line: 87, column: 21, scope: !4374)
!4384 = !DILocation(line: 87, column: 25, scope: !4374)
!4385 = !DILocation(line: 87, column: 33, scope: !4374)
!4386 = !DILocation(line: 87, column: 10, scope: !4374)
!4387 = !DILocation(line: 87, column: 3, scope: !4374)
!4388 = distinct !DISubprogram(name: "__xstat", linkageName: "__xstat64", scope: !4305, file: !4305, line: 90, type: !4389, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !552, retainedNodes: !157)
!4389 = !DISubroutineType(types: !4390)
!4390 = !{!156, !156, !533, !4391}
!4391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4392, size: 64)
!4392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !371, line: 46, size: 1152, elements: !4393)
!4393 = !{!4394, !4395, !4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408}
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !4392, file: !371, line: 48, baseType: !374, size: 64)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !4392, file: !371, line: 53, baseType: !489, size: 64, offset: 64)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !4392, file: !371, line: 61, baseType: !380, size: 64, offset: 128)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !4392, file: !371, line: 62, baseType: !382, size: 32, offset: 192)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !4392, file: !371, line: 64, baseType: !384, size: 32, offset: 224)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !4392, file: !371, line: 65, baseType: !386, size: 32, offset: 256)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !4392, file: !371, line: 67, baseType: !156, size: 32, offset: 288)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !4392, file: !371, line: 69, baseType: !374, size: 64, offset: 320)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !4392, file: !371, line: 74, baseType: !390, size: 64, offset: 384)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !4392, file: !371, line: 78, baseType: !393, size: 64, offset: 448)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !4392, file: !371, line: 80, baseType: !499, size: 64, offset: 512)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !4392, file: !371, line: 91, baseType: !570, size: 128, offset: 576)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !4392, file: !371, line: 92, baseType: !570, size: 128, offset: 704)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !4392, file: !371, line: 93, baseType: !570, size: 128, offset: 832)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !4392, file: !371, line: 106, baseType: !407, size: 192, offset: 960)
!4409 = !DILocalVariable(name: "vers", arg: 1, scope: !4388, file: !4305, line: 90, type: !156)
!4410 = !DILocation(line: 90, column: 17, scope: !4388)
!4411 = !DILocalVariable(name: "path", arg: 2, scope: !4388, file: !4305, line: 90, type: !533)
!4412 = !DILocation(line: 90, column: 35, scope: !4388)
!4413 = !DILocalVariable(name: "buf", arg: 3, scope: !4388, file: !4305, line: 90, type: !4391)
!4414 = !DILocation(line: 90, column: 54, scope: !4388)
!4415 = !DILocation(line: 91, column: 20, scope: !4388)
!4416 = !DILocation(line: 91, column: 43, scope: !4388)
!4417 = !DILocation(line: 91, column: 26, scope: !4388)
!4418 = !DILocation(line: 91, column: 10, scope: !4388)
!4419 = !DILocation(line: 91, column: 3, scope: !4388)
!4420 = distinct !DISubprogram(name: "stat", linkageName: "stat64", scope: !4305, file: !4305, line: 94, type: !4421, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !552, retainedNodes: !157)
!4421 = !DISubroutineType(types: !4422)
!4422 = !{!156, !533, !4391}
!4423 = !DILocalVariable(name: "path", arg: 1, scope: !4420, file: !4305, line: 94, type: !533)
!4424 = !DILocation(line: 94, column: 22, scope: !4420)
!4425 = !DILocalVariable(name: "buf", arg: 2, scope: !4420, file: !4305, line: 94, type: !4391)
!4426 = !DILocation(line: 94, column: 41, scope: !4420)
!4427 = !DILocation(line: 95, column: 20, scope: !4420)
!4428 = !DILocation(line: 95, column: 43, scope: !4420)
!4429 = !DILocation(line: 95, column: 26, scope: !4420)
!4430 = !DILocation(line: 95, column: 10, scope: !4420)
!4431 = !DILocation(line: 95, column: 3, scope: !4420)
!4432 = distinct !DISubprogram(name: "__lxstat", linkageName: "__lxstat64", scope: !4305, file: !4305, line: 98, type: !4389, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !552, retainedNodes: !157)
!4433 = !DILocalVariable(name: "vers", arg: 1, scope: !4432, file: !4305, line: 98, type: !156)
!4434 = !DILocation(line: 98, column: 18, scope: !4432)
!4435 = !DILocalVariable(name: "path", arg: 2, scope: !4432, file: !4305, line: 98, type: !533)
!4436 = !DILocation(line: 98, column: 36, scope: !4432)
!4437 = !DILocalVariable(name: "buf", arg: 3, scope: !4432, file: !4305, line: 98, type: !4391)
!4438 = !DILocation(line: 98, column: 55, scope: !4432)
!4439 = !DILocation(line: 99, column: 21, scope: !4432)
!4440 = !DILocation(line: 99, column: 44, scope: !4432)
!4441 = !DILocation(line: 99, column: 27, scope: !4432)
!4442 = !DILocation(line: 99, column: 10, scope: !4432)
!4443 = !DILocation(line: 99, column: 3, scope: !4432)
!4444 = distinct !DISubprogram(name: "lstat", linkageName: "lstat64", scope: !4305, file: !4305, line: 102, type: !4421, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !552, retainedNodes: !157)
!4445 = !DILocalVariable(name: "path", arg: 1, scope: !4444, file: !4305, line: 102, type: !533)
!4446 = !DILocation(line: 102, column: 23, scope: !4444)
!4447 = !DILocalVariable(name: "buf", arg: 2, scope: !4444, file: !4305, line: 102, type: !4391)
!4448 = !DILocation(line: 102, column: 42, scope: !4444)
!4449 = !DILocation(line: 103, column: 21, scope: !4444)
!4450 = !DILocation(line: 103, column: 44, scope: !4444)
!4451 = !DILocation(line: 103, column: 27, scope: !4444)
!4452 = !DILocation(line: 103, column: 10, scope: !4444)
!4453 = !DILocation(line: 103, column: 3, scope: !4444)
!4454 = distinct !DISubprogram(name: "__fxstat", linkageName: "__fxstat64", scope: !4305, file: !4305, line: 106, type: !4455, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !552, retainedNodes: !157)
!4455 = !DISubroutineType(types: !4456)
!4456 = !{!156, !156, !156, !4391}
!4457 = !DILocalVariable(name: "vers", arg: 1, scope: !4454, file: !4305, line: 106, type: !156)
!4458 = !DILocation(line: 106, column: 18, scope: !4454)
!4459 = !DILocalVariable(name: "fd", arg: 2, scope: !4454, file: !4305, line: 106, type: !156)
!4460 = !DILocation(line: 106, column: 28, scope: !4454)
!4461 = !DILocalVariable(name: "buf", arg: 3, scope: !4454, file: !4305, line: 106, type: !4391)
!4462 = !DILocation(line: 106, column: 45, scope: !4454)
!4463 = !DILocation(line: 107, column: 21, scope: !4454)
!4464 = !DILocation(line: 107, column: 42, scope: !4454)
!4465 = !DILocation(line: 107, column: 25, scope: !4454)
!4466 = !DILocation(line: 107, column: 10, scope: !4454)
!4467 = !DILocation(line: 107, column: 3, scope: !4454)
!4468 = distinct !DISubprogram(name: "fstat", linkageName: "fstat64", scope: !4305, file: !4305, line: 110, type: !4469, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !552, retainedNodes: !157)
!4469 = !DISubroutineType(types: !4470)
!4470 = !{!156, !156, !4391}
!4471 = !DILocalVariable(name: "fd", arg: 1, scope: !4468, file: !4305, line: 110, type: !156)
!4472 = !DILocation(line: 110, column: 15, scope: !4468)
!4473 = !DILocalVariable(name: "buf", arg: 2, scope: !4468, file: !4305, line: 110, type: !4391)
!4474 = !DILocation(line: 110, column: 32, scope: !4468)
!4475 = !DILocation(line: 111, column: 21, scope: !4468)
!4476 = !DILocation(line: 111, column: 42, scope: !4468)
!4477 = !DILocation(line: 111, column: 25, scope: !4468)
!4478 = !DILocation(line: 111, column: 10, scope: !4468)
!4479 = !DILocation(line: 111, column: 3, scope: !4468)
!4480 = distinct !DISubprogram(name: "ftruncate64", scope: !4305, file: !4305, line: 114, type: !543, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !552, retainedNodes: !157)
!4481 = !DILocalVariable(name: "fd", arg: 1, scope: !4480, file: !4305, line: 114, type: !156)
!4482 = !DILocation(line: 114, column: 21, scope: !4480)
!4483 = !DILocalVariable(name: "length", arg: 2, scope: !4480, file: !4305, line: 114, type: !433)
!4484 = !DILocation(line: 114, column: 33, scope: !4480)
!4485 = !DILocation(line: 115, column: 25, scope: !4480)
!4486 = !DILocation(line: 115, column: 29, scope: !4480)
!4487 = !DILocation(line: 115, column: 10, scope: !4480)
!4488 = !DILocation(line: 115, column: 3, scope: !4480)
!4489 = distinct !DISubprogram(name: "statfs", linkageName: "statfs64", scope: !4305, file: !4305, line: 119, type: !4490, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !552, retainedNodes: !157)
!4490 = !DISubroutineType(types: !4491)
!4491 = !{!156, !533, !4492}
!4492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4493, size: 64)
!4493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "statfs", file: !4494, line: 24, size: 960, elements: !4495)
!4494 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/statfs.h", directory: "")
!4495 = !{!4496, !4498, !4499, !4501, !4502, !4503, !4505, !4506, !4512, !4513, !4514, !4515}
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "f_type", scope: !4493, file: !4494, line: 26, baseType: !4497, size: 64)
!4497 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsword_t", file: !375, line: 191, baseType: !391)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "f_bsize", scope: !4493, file: !4494, line: 27, baseType: !4497, size: 64, offset: 64)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "f_blocks", scope: !4493, file: !4494, line: 35, baseType: !4500, size: 64, offset: 128)
!4500 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsblkcnt64_t", file: !375, line: 184, baseType: !376)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "f_bfree", scope: !4493, file: !4494, line: 36, baseType: !4500, size: 64, offset: 192)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "f_bavail", scope: !4493, file: !4494, line: 37, baseType: !4500, size: 64, offset: 256)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "f_files", scope: !4493, file: !4494, line: 38, baseType: !4504, size: 64, offset: 320)
!4504 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsfilcnt64_t", file: !375, line: 188, baseType: !376)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "f_ffree", scope: !4493, file: !4494, line: 39, baseType: !4504, size: 64, offset: 384)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "f_fsid", scope: !4493, file: !4494, line: 41, baseType: !4507, size: 64, offset: 448)
!4507 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsid_t", file: !375, line: 155, baseType: !4508)
!4508 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !375, line: 155, size: 64, elements: !4509)
!4509 = !{!4510}
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !4508, file: !375, line: 155, baseType: !4511, size: 64)
!4511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 64, elements: !138)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "f_namelen", scope: !4493, file: !4494, line: 42, baseType: !4497, size: 64, offset: 512)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "f_frsize", scope: !4493, file: !4494, line: 43, baseType: !4497, size: 64, offset: 576)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !4493, file: !4494, line: 44, baseType: !4497, size: 64, offset: 640)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "f_spare", scope: !4493, file: !4494, line: 45, baseType: !4516, size: 256, offset: 704)
!4516 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4497, size: 256, elements: !301)
!4517 = !DILocalVariable(name: "path", arg: 1, scope: !4489, file: !4305, line: 119, type: !533)
!4518 = !DILocation(line: 119, column: 24, scope: !4489)
!4519 = !DILocalVariable(name: "buf", arg: 2, scope: !4489, file: !4305, line: 119, type: !4492)
!4520 = !DILocation(line: 119, column: 45, scope: !4489)
!4521 = !DILocation(line: 120, column: 22, scope: !4489)
!4522 = !DILocation(line: 120, column: 28, scope: !4489)
!4523 = !DILocation(line: 120, column: 10, scope: !4489)
!4524 = !DILocation(line: 120, column: 3, scope: !4489)
!4525 = distinct !DISubprogram(name: "getdents64", scope: !4305, file: !4305, line: 123, type: !4526, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !552, retainedNodes: !157)
!4526 = !DISubroutineType(types: !4527)
!4527 = !{!520, !156, !58, !448}
!4528 = !DILocalVariable(name: "fd", arg: 1, scope: !4525, file: !4305, line: 123, type: !156)
!4529 = !DILocation(line: 123, column: 24, scope: !4525)
!4530 = !DILocalVariable(name: "dirp", arg: 2, scope: !4525, file: !4305, line: 123, type: !58)
!4531 = !DILocation(line: 123, column: 34, scope: !4525)
!4532 = !DILocalVariable(name: "count", arg: 3, scope: !4525, file: !4305, line: 123, type: !448)
!4533 = !DILocation(line: 123, column: 47, scope: !4525)
!4534 = !DILocation(line: 124, column: 24, scope: !4525)
!4535 = !DILocation(line: 124, column: 47, scope: !4525)
!4536 = !DILocation(line: 124, column: 28, scope: !4525)
!4537 = !DILocation(line: 124, column: 53, scope: !4525)
!4538 = !DILocation(line: 124, column: 10, scope: !4525)
!4539 = !DILocation(line: 124, column: 3, scope: !4525)
!4540 = distinct !DISubprogram(name: "access", scope: !445, file: !445, line: 90, type: !4541, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!4541 = !DISubroutineType(types: !4542)
!4542 = !{!156, !533, !156}
!4543 = !DILocalVariable(name: "pathname", arg: 1, scope: !4540, file: !445, line: 90, type: !533)
!4544 = !DILocation(line: 90, column: 24, scope: !4540)
!4545 = !DILocalVariable(name: "mode", arg: 2, scope: !4540, file: !445, line: 90, type: !156)
!4546 = !DILocation(line: 90, column: 38, scope: !4540)
!4547 = !DILocalVariable(name: "dfile", scope: !4540, file: !445, line: 91, type: !4548)
!4548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4549, size: 64)
!4549 = !DIDerivedType(tag: DW_TAG_typedef, name: "exe_disk_file_t", file: !356, line: 56, baseType: !4550)
!4550 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 52, size: 192, elements: !4551)
!4551 = !{!4552, !4553, !4554}
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4550, file: !356, line: 53, baseType: !7, size: 32)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !4550, file: !356, line: 54, baseType: !367, size: 64, offset: 64)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !4550, file: !356, line: 55, baseType: !4555, size: 64, offset: 128)
!4555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4556, size: 64)
!4556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !371, line: 119, size: 1152, elements: !4557)
!4557 = !{!4558, !4559, !4560, !4561, !4562, !4563, !4564, !4565, !4566, !4567, !4568, !4569, !4570, !4571, !4572}
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !4556, file: !371, line: 121, baseType: !374, size: 64)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !4556, file: !371, line: 123, baseType: !378, size: 64, offset: 64)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !4556, file: !371, line: 124, baseType: !380, size: 64, offset: 128)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !4556, file: !371, line: 125, baseType: !382, size: 32, offset: 192)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !4556, file: !371, line: 132, baseType: !384, size: 32, offset: 224)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !4556, file: !371, line: 133, baseType: !386, size: 32, offset: 256)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !4556, file: !371, line: 135, baseType: !156, size: 32, offset: 288)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !4556, file: !371, line: 136, baseType: !374, size: 64, offset: 320)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !4556, file: !371, line: 137, baseType: !390, size: 64, offset: 384)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !4556, file: !371, line: 143, baseType: !393, size: 64, offset: 448)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !4556, file: !371, line: 144, baseType: !395, size: 64, offset: 512)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !4556, file: !371, line: 152, baseType: !501, size: 128, offset: 576)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !4556, file: !371, line: 153, baseType: !501, size: 128, offset: 704)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !4556, file: !371, line: 154, baseType: !501, size: 128, offset: 832)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !4556, file: !371, line: 164, baseType: !407, size: 192, offset: 960)
!4573 = !DILocation(line: 91, column: 20, scope: !4540)
!4574 = !DILocation(line: 91, column: 43, scope: !4540)
!4575 = !DILocation(line: 91, column: 28, scope: !4540)
!4576 = !DILocation(line: 93, column: 7, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4540, file: !445, line: 93, column: 7)
!4578 = !DILocation(line: 93, column: 7, scope: !4540)
!4579 = !DILocation(line: 96, column: 5, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4577, file: !445, line: 93, column: 14)
!4581 = !DILocation(line: 98, column: 51, scope: !4540)
!4582 = !DILocation(line: 98, column: 31, scope: !4540)
!4583 = !DILocation(line: 98, column: 62, scope: !4540)
!4584 = !DILocation(line: 98, column: 10, scope: !4540)
!4585 = !DILocation(line: 98, column: 3, scope: !4540)
!4586 = !DILocation(line: 99, column: 1, scope: !4540)
!4587 = distinct !DISubprogram(name: "__get_sym_file", scope: !445, file: !445, line: 37, type: !4588, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !450, retainedNodes: !157)
!4588 = !DISubroutineType(types: !4589)
!4589 = !{!4548, !533}
!4590 = !DILocalVariable(name: "pathname", arg: 1, scope: !4587, file: !445, line: 37, type: !533)
!4591 = !DILocation(line: 37, column: 52, scope: !4587)
!4592 = !DILocation(line: 38, column: 8, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4587, file: !445, line: 38, column: 7)
!4594 = !DILocation(line: 38, column: 7, scope: !4587)
!4595 = !DILocation(line: 39, column: 5, scope: !4593)
!4596 = !DILocation(line: 43, column: 7, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !4587, file: !445, line: 43, column: 7)
!4598 = !DILocation(line: 43, column: 19, scope: !4597)
!4599 = !DILocation(line: 43, column: 7, scope: !4587)
!4600 = !DILocalVariable(name: "cwd", scope: !4601, file: !445, line: 44, type: !4602)
!4601 = distinct !DILexicalBlock(scope: !4597, file: !445, line: 43, column: 27)
!4602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 8192, elements: !619)
!4603 = !DILocation(line: 44, column: 10, scope: !4601)
!4604 = !DILocation(line: 45, column: 16, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4601, file: !445, line: 45, column: 9)
!4606 = !DILocation(line: 45, column: 9, scope: !4605)
!4607 = !DILocation(line: 45, column: 9, scope: !4601)
!4608 = !DILocalVariable(name: "cwd_len", scope: !4609, file: !445, line: 46, type: !448)
!4609 = distinct !DILexicalBlock(scope: !4605, file: !445, line: 45, column: 28)
!4610 = !DILocation(line: 46, column: 14, scope: !4609)
!4611 = !DILocation(line: 46, column: 31, scope: !4609)
!4612 = !DILocation(line: 46, column: 24, scope: !4609)
!4613 = !DILocation(line: 48, column: 11, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4609, file: !445, line: 48, column: 11)
!4615 = !DILocation(line: 48, column: 19, scope: !4614)
!4616 = !DILocation(line: 48, column: 23, scope: !4614)
!4617 = !DILocation(line: 48, column: 30, scope: !4614)
!4618 = !DILocation(line: 48, column: 38, scope: !4614)
!4619 = !DILocation(line: 48, column: 26, scope: !4614)
!4620 = !DILocation(line: 48, column: 43, scope: !4614)
!4621 = !DILocation(line: 48, column: 11, scope: !4609)
!4622 = !DILocation(line: 49, column: 13, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4614, file: !445, line: 48, column: 51)
!4624 = !DILocation(line: 49, column: 9, scope: !4623)
!4625 = !DILocation(line: 49, column: 24, scope: !4623)
!4626 = !DILocation(line: 50, column: 7, scope: !4623)
!4627 = !DILocation(line: 51, column: 19, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4609, file: !445, line: 51, column: 11)
!4629 = !DILocation(line: 51, column: 29, scope: !4628)
!4630 = !DILocation(line: 51, column: 34, scope: !4628)
!4631 = !DILocation(line: 51, column: 11, scope: !4628)
!4632 = !DILocation(line: 51, column: 43, scope: !4628)
!4633 = !DILocation(line: 51, column: 11, scope: !4609)
!4634 = !DILocation(line: 52, column: 13, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4636, file: !445, line: 52, column: 13)
!4636 = distinct !DILexicalBlock(scope: !4628, file: !445, line: 51, column: 49)
!4637 = !DILocation(line: 52, column: 22, scope: !4635)
!4638 = !DILocation(line: 52, column: 31, scope: !4635)
!4639 = !DILocation(line: 52, column: 13, scope: !4636)
!4640 = !DILocation(line: 53, column: 23, scope: !4635)
!4641 = !DILocation(line: 53, column: 31, scope: !4635)
!4642 = !DILocation(line: 53, column: 20, scope: !4635)
!4643 = !DILocation(line: 53, column: 11, scope: !4635)
!4644 = !DILocalVariable(name: "c", scope: !4587, file: !445, line: 57, type: !296)
!4645 = !DILocation(line: 57, column: 8, scope: !4587)
!4646 = !DILocation(line: 57, column: 12, scope: !4587)
!4647 = !DILocalVariable(name: "i", scope: !4587, file: !445, line: 58, type: !7)
!4648 = !DILocation(line: 58, column: 12, scope: !4587)
!4649 = !DILocation(line: 60, column: 7, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4587, file: !445, line: 60, column: 7)
!4651 = !DILocation(line: 60, column: 9, scope: !4650)
!4652 = !DILocation(line: 60, column: 14, scope: !4650)
!4653 = !DILocation(line: 60, column: 17, scope: !4650)
!4654 = !DILocation(line: 60, column: 29, scope: !4650)
!4655 = !DILocation(line: 60, column: 7, scope: !4587)
!4656 = !DILocation(line: 61, column: 5, scope: !4650)
!4657 = !DILocation(line: 63, column: 9, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4587, file: !445, line: 63, column: 3)
!4659 = !DILocation(line: 63, column: 8, scope: !4658)
!4660 = !DILocation(line: 63, column: 13, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4658, file: !445, line: 63, column: 3)
!4662 = !DILocation(line: 63, column: 24, scope: !4661)
!4663 = !DILocation(line: 63, column: 14, scope: !4661)
!4664 = !DILocation(line: 63, column: 3, scope: !4658)
!4665 = !DILocation(line: 64, column: 9, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4667, file: !445, line: 64, column: 9)
!4667 = distinct !DILexicalBlock(scope: !4661, file: !445, line: 63, column: 42)
!4668 = !DILocation(line: 64, column: 27, scope: !4666)
!4669 = !DILocation(line: 64, column: 20, scope: !4666)
!4670 = !DILocation(line: 64, column: 18, scope: !4666)
!4671 = !DILocation(line: 64, column: 11, scope: !4666)
!4672 = !DILocation(line: 64, column: 9, scope: !4667)
!4673 = !DILocalVariable(name: "df", scope: !4674, file: !445, line: 65, type: !4548)
!4674 = distinct !DILexicalBlock(scope: !4666, file: !445, line: 64, column: 30)
!4675 = !DILocation(line: 65, column: 24, scope: !4674)
!4676 = !DILocation(line: 65, column: 39, scope: !4674)
!4677 = !DILocation(line: 65, column: 49, scope: !4674)
!4678 = !DILocation(line: 65, column: 30, scope: !4674)
!4679 = !DILocation(line: 66, column: 11, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4674, file: !445, line: 66, column: 11)
!4681 = !DILocation(line: 66, column: 15, scope: !4680)
!4682 = !DILocation(line: 66, column: 21, scope: !4680)
!4683 = !DILocation(line: 66, column: 28, scope: !4680)
!4684 = !DILocation(line: 66, column: 11, scope: !4674)
!4685 = !DILocation(line: 67, column: 9, scope: !4680)
!4686 = !DILocation(line: 68, column: 14, scope: !4674)
!4687 = !DILocation(line: 68, column: 7, scope: !4674)
!4688 = !DILocation(line: 63, column: 37, scope: !4661)
!4689 = !DILocation(line: 63, column: 3, scope: !4661)
!4690 = distinct !{!4690, !4664, !4691}
!4691 = !DILocation(line: 70, column: 3, scope: !4658)
!4692 = !DILocation(line: 72, column: 3, scope: !4587)
!4693 = !DILocation(line: 73, column: 1, scope: !4587)
!4694 = distinct !DISubprogram(name: "__concretize_string", scope: !445, file: !445, line: 1396, type: !4695, scopeLine: 1396, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !450, retainedNodes: !157)
!4695 = !DISubroutineType(types: !4696)
!4696 = !{!533, !533}
!4697 = !DILocalVariable(name: "s", arg: 1, scope: !4694, file: !445, line: 1396, type: !533)
!4698 = !DILocation(line: 1396, column: 52, scope: !4694)
!4699 = !DILocalVariable(name: "sc", scope: !4694, file: !445, line: 1397, type: !367)
!4700 = !DILocation(line: 1397, column: 9, scope: !4694)
!4701 = !DILocation(line: 1397, column: 31, scope: !4694)
!4702 = !DILocation(line: 1397, column: 14, scope: !4694)
!4703 = !DILocalVariable(name: "i", scope: !4694, file: !445, line: 1398, type: !7)
!4704 = !DILocation(line: 1398, column: 12, scope: !4694)
!4705 = !DILocation(line: 1400, column: 10, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4694, file: !445, line: 1400, column: 3)
!4707 = !DILocation(line: 1400, column: 8, scope: !4706)
!4708 = !DILocalVariable(name: "c", scope: !4709, file: !445, line: 1401, type: !296)
!4709 = distinct !DILexicalBlock(scope: !4710, file: !445, line: 1400, column: 27)
!4710 = distinct !DILexicalBlock(scope: !4706, file: !445, line: 1400, column: 3)
!4711 = !DILocation(line: 1401, column: 10, scope: !4709)
!4712 = !DILocation(line: 1401, column: 15, scope: !4709)
!4713 = !DILocation(line: 1401, column: 14, scope: !4709)
!4714 = !DILocation(line: 1403, column: 27, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4709, file: !445, line: 1403, column: 9)
!4716 = !DILocation(line: 1403, column: 10, scope: !4715)
!4717 = !DILocation(line: 1403, column: 9, scope: !4709)
!4718 = !DILocation(line: 1404, column: 12, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4720, file: !445, line: 1404, column: 11)
!4720 = distinct !DILexicalBlock(scope: !4715, file: !445, line: 1403, column: 31)
!4721 = !DILocation(line: 1404, column: 11, scope: !4720)
!4722 = !DILocation(line: 1408, column: 11, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4709, file: !445, line: 1408, column: 9)
!4724 = !DILocation(line: 1408, column: 14, scope: !4723)
!4725 = !DILocation(line: 1408, column: 15, scope: !4723)
!4726 = !DILocation(line: 1408, column: 12, scope: !4723)
!4727 = !DILocation(line: 1408, column: 9, scope: !4709)
!4728 = !DILocation(line: 1409, column: 12, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4730, file: !445, line: 1409, column: 11)
!4730 = distinct !DILexicalBlock(scope: !4723, file: !445, line: 1408, column: 21)
!4731 = !DILocation(line: 1409, column: 11, scope: !4730)
!4732 = !DILocation(line: 1410, column: 10, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4729, file: !445, line: 1409, column: 15)
!4734 = !DILocation(line: 1410, column: 13, scope: !4733)
!4735 = !DILocation(line: 1411, column: 9, scope: !4733)
!4736 = !DILocation(line: 1412, column: 18, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4729, file: !445, line: 1412, column: 18)
!4738 = !DILocation(line: 1412, column: 19, scope: !4737)
!4739 = !DILocation(line: 1412, column: 18, scope: !4729)
!4740 = !DILocation(line: 1413, column: 10, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4737, file: !445, line: 1412, column: 26)
!4742 = !DILocation(line: 1413, column: 13, scope: !4741)
!4743 = !DILocation(line: 1414, column: 7, scope: !4741)
!4744 = !DILocalVariable(name: "cc", scope: !4745, file: !445, line: 1416, type: !296)
!4745 = distinct !DILexicalBlock(scope: !4723, file: !445, line: 1415, column: 12)
!4746 = !DILocation(line: 1416, column: 12, scope: !4745)
!4747 = !DILocation(line: 1416, column: 46, scope: !4745)
!4748 = !DILocation(line: 1416, column: 40, scope: !4745)
!4749 = !DILocation(line: 1416, column: 24, scope: !4745)
!4750 = !DILocation(line: 1416, column: 17, scope: !4745)
!4751 = !DILocation(line: 1417, column: 19, scope: !4745)
!4752 = !DILocation(line: 1417, column: 25, scope: !4745)
!4753 = !DILocation(line: 1417, column: 22, scope: !4745)
!4754 = !DILocation(line: 1417, column: 7, scope: !4745)
!4755 = !DILocation(line: 1418, column: 13, scope: !4745)
!4756 = !DILocation(line: 1418, column: 8, scope: !4745)
!4757 = !DILocation(line: 1418, column: 11, scope: !4745)
!4758 = !DILocation(line: 1419, column: 12, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4745, file: !445, line: 1419, column: 11)
!4760 = !DILocation(line: 1419, column: 11, scope: !4745)
!4761 = !DILocation(line: 1400, column: 16, scope: !4710)
!4762 = !DILocation(line: 1400, column: 21, scope: !4710)
!4763 = !DILocation(line: 1400, column: 3, scope: !4710)
!4764 = distinct !{!4764, !4765, !4766}
!4765 = !DILocation(line: 1400, column: 3, scope: !4706)
!4766 = !DILocation(line: 1421, column: 3, scope: !4706)
!4767 = !DILocation(line: 1423, column: 10, scope: !4694)
!4768 = !DILocation(line: 1423, column: 3, scope: !4694)
!4769 = distinct !DISubprogram(name: "__concretize_ptr", scope: !445, file: !445, line: 1383, type: !4770, scopeLine: 1383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !450, retainedNodes: !157)
!4770 = !DISubroutineType(types: !4771)
!4771 = !{!58, !526}
!4772 = !DILocalVariable(name: "p", arg: 1, scope: !4769, file: !445, line: 1383, type: !526)
!4773 = !DILocation(line: 1383, column: 43, scope: !4769)
!4774 = !DILocalVariable(name: "pc", scope: !4769, file: !445, line: 1385, type: !367)
!4775 = !DILocation(line: 1385, column: 9, scope: !4769)
!4776 = !DILocation(line: 1385, column: 45, scope: !4769)
!4777 = !DILocation(line: 1385, column: 38, scope: !4769)
!4778 = !DILocation(line: 1385, column: 22, scope: !4769)
!4779 = !DILocation(line: 1385, column: 14, scope: !4769)
!4780 = !DILocation(line: 1386, column: 15, scope: !4769)
!4781 = !DILocation(line: 1386, column: 21, scope: !4769)
!4782 = !DILocation(line: 1386, column: 18, scope: !4769)
!4783 = !DILocation(line: 1386, column: 3, scope: !4769)
!4784 = !DILocation(line: 1387, column: 10, scope: !4769)
!4785 = !DILocation(line: 1387, column: 3, scope: !4769)
!4786 = !DILocalVariable(name: "buf", arg: 1, scope: !444, file: !445, line: 1345, type: !367)
!4787 = !DILocation(line: 1345, column: 20, scope: !444)
!4788 = !DILocalVariable(name: "size", arg: 2, scope: !444, file: !445, line: 1345, type: !448)
!4789 = !DILocation(line: 1345, column: 32, scope: !444)
!4790 = !DILocalVariable(name: "r", scope: !444, file: !445, line: 1347, type: !156)
!4791 = !DILocation(line: 1347, column: 7, scope: !444)
!4792 = !DILocation(line: 1349, column: 10, scope: !444)
!4793 = !DILocation(line: 1351, column: 16, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !444, file: !445, line: 1351, column: 7)
!4795 = !DILocation(line: 1351, column: 7, scope: !4794)
!4796 = !DILocation(line: 1351, column: 29, scope: !4794)
!4797 = !DILocation(line: 1351, column: 42, scope: !4794)
!4798 = !DILocation(line: 1351, column: 32, scope: !4794)
!4799 = !DILocation(line: 1351, column: 57, scope: !4794)
!4800 = !DILocation(line: 1351, column: 54, scope: !4794)
!4801 = !DILocation(line: 1351, column: 7, scope: !444)
!4802 = !DILocation(line: 1352, column: 26, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4794, file: !445, line: 1351, column: 66)
!4804 = !DILocation(line: 1353, column: 5, scope: !4803)
!4805 = !DILocation(line: 1353, column: 11, scope: !4803)
!4806 = !DILocation(line: 1354, column: 5, scope: !4803)
!4807 = !DILocation(line: 1357, column: 8, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !444, file: !445, line: 1357, column: 7)
!4809 = !DILocation(line: 1357, column: 7, scope: !444)
!4810 = !DILocation(line: 1358, column: 10, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4808, file: !445, line: 1357, column: 13)
!4812 = !DILocation(line: 1359, column: 18, scope: !4811)
!4813 = !DILocation(line: 1359, column: 11, scope: !4811)
!4814 = !DILocation(line: 1359, column: 9, scope: !4811)
!4815 = !DILocation(line: 1360, column: 10, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4811, file: !445, line: 1360, column: 9)
!4817 = !DILocation(line: 1360, column: 9, scope: !4811)
!4818 = !DILocation(line: 1361, column: 7, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4816, file: !445, line: 1360, column: 15)
!4820 = !DILocation(line: 1361, column: 13, scope: !4819)
!4821 = !DILocation(line: 1362, column: 7, scope: !4819)
!4822 = !DILocation(line: 1364, column: 15, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4808, file: !445, line: 1364, column: 14)
!4824 = !DILocation(line: 1364, column: 14, scope: !4808)
!4825 = !DILocation(line: 1365, column: 5, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4823, file: !445, line: 1364, column: 21)
!4827 = !DILocation(line: 1365, column: 11, scope: !4826)
!4828 = !DILocation(line: 1366, column: 5, scope: !4826)
!4829 = !DILocation(line: 1369, column: 26, scope: !444)
!4830 = !DILocation(line: 1369, column: 9, scope: !444)
!4831 = !DILocation(line: 1369, column: 7, scope: !444)
!4832 = !DILocation(line: 1370, column: 28, scope: !444)
!4833 = !DILocation(line: 1370, column: 10, scope: !444)
!4834 = !DILocation(line: 1370, column: 8, scope: !444)
!4835 = !DILocation(line: 1374, column: 28, scope: !444)
!4836 = !DILocation(line: 1374, column: 33, scope: !444)
!4837 = !DILocation(line: 1374, column: 3, scope: !444)
!4838 = !DILocation(line: 1375, column: 28, scope: !444)
!4839 = !DILocation(line: 1375, column: 33, scope: !444)
!4840 = !DILocation(line: 1375, column: 7, scope: !444)
!4841 = !DILocation(line: 1375, column: 5, scope: !444)
!4842 = !DILocation(line: 1376, column: 7, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !444, file: !445, line: 1376, column: 7)
!4844 = !DILocation(line: 1376, column: 9, scope: !4843)
!4845 = !DILocation(line: 1376, column: 7, scope: !444)
!4846 = !DILocation(line: 1377, column: 5, scope: !4843)
!4847 = !DILocation(line: 1378, column: 10, scope: !444)
!4848 = !DILocation(line: 1378, column: 3, scope: !444)
!4849 = !DILocation(line: 1379, column: 1, scope: !444)
!4850 = distinct !DISubprogram(name: "__concretize_size", scope: !445, file: !445, line: 1390, type: !4851, scopeLine: 1390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !450, retainedNodes: !157)
!4851 = !DISubroutineType(types: !4852)
!4852 = !{!448, !448}
!4853 = !DILocalVariable(name: "s", arg: 1, scope: !4850, file: !445, line: 1390, type: !448)
!4854 = !DILocation(line: 1390, column: 40, scope: !4850)
!4855 = !DILocalVariable(name: "sc", scope: !4850, file: !445, line: 1391, type: !448)
!4856 = !DILocation(line: 1391, column: 10, scope: !4850)
!4857 = !DILocation(line: 1391, column: 37, scope: !4850)
!4858 = !DILocation(line: 1391, column: 15, scope: !4850)
!4859 = !DILocation(line: 1392, column: 15, scope: !4850)
!4860 = !DILocation(line: 1392, column: 21, scope: !4850)
!4861 = !DILocation(line: 1392, column: 18, scope: !4850)
!4862 = !DILocation(line: 1392, column: 3, scope: !4850)
!4863 = !DILocation(line: 1393, column: 10, scope: !4850)
!4864 = !DILocation(line: 1393, column: 3, scope: !4850)
!4865 = distinct !DISubprogram(name: "umask", scope: !445, file: !445, line: 101, type: !4866, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!4866 = !DISubroutineType(types: !4867)
!4867 = !{!382, !440}
!4868 = !DILocalVariable(name: "mask", arg: 1, scope: !4865, file: !445, line: 101, type: !440)
!4869 = !DILocation(line: 101, column: 21, scope: !4865)
!4870 = !DILocalVariable(name: "r", scope: !4865, file: !445, line: 102, type: !440)
!4871 = !DILocation(line: 102, column: 10, scope: !4865)
!4872 = !DILocation(line: 102, column: 24, scope: !4865)
!4873 = !DILocation(line: 103, column: 21, scope: !4865)
!4874 = !DILocation(line: 103, column: 26, scope: !4865)
!4875 = !DILocation(line: 103, column: 19, scope: !4865)
!4876 = !DILocation(line: 104, column: 10, scope: !4865)
!4877 = !DILocation(line: 104, column: 3, scope: !4865)
!4878 = distinct !DISubprogram(name: "__fd_open", scope: !445, file: !445, line: 141, type: !4879, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!4879 = !DISubroutineType(types: !4880)
!4880 = !{!156, !533, !156, !440}
!4881 = !DILocalVariable(name: "pathname", arg: 1, scope: !4878, file: !445, line: 141, type: !533)
!4882 = !DILocation(line: 141, column: 27, scope: !4878)
!4883 = !DILocalVariable(name: "flags", arg: 2, scope: !4878, file: !445, line: 141, type: !156)
!4884 = !DILocation(line: 141, column: 41, scope: !4878)
!4885 = !DILocalVariable(name: "mode", arg: 3, scope: !4878, file: !445, line: 141, type: !440)
!4886 = !DILocation(line: 141, column: 55, scope: !4878)
!4887 = !DILocalVariable(name: "df", scope: !4878, file: !445, line: 142, type: !4548)
!4888 = !DILocation(line: 142, column: 20, scope: !4878)
!4889 = !DILocalVariable(name: "f", scope: !4878, file: !445, line: 143, type: !4890)
!4890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4891, size: 64)
!4891 = !DIDerivedType(tag: DW_TAG_typedef, name: "exe_file_t", file: !356, line: 72, baseType: !4892)
!4892 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 65, size: 192, elements: !4893)
!4893 = !{!4894, !4895, !4896, !4897}
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !4892, file: !356, line: 66, baseType: !156, size: 32)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4892, file: !356, line: 67, baseType: !7, size: 32, offset: 32)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !4892, file: !356, line: 70, baseType: !433, size: 64, offset: 64)
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "dfile", scope: !4892, file: !356, line: 71, baseType: !4548, size: 64, offset: 128)
!4898 = !DILocation(line: 143, column: 15, scope: !4878)
!4899 = !DILocalVariable(name: "fd", scope: !4878, file: !445, line: 144, type: !156)
!4900 = !DILocation(line: 144, column: 7, scope: !4878)
!4901 = !DILocation(line: 146, column: 11, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4878, file: !445, line: 146, column: 3)
!4903 = !DILocation(line: 146, column: 8, scope: !4902)
!4904 = !DILocation(line: 146, column: 16, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4902, file: !445, line: 146, column: 3)
!4906 = !DILocation(line: 146, column: 19, scope: !4905)
!4907 = !DILocation(line: 146, column: 3, scope: !4902)
!4908 = !DILocation(line: 147, column: 25, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4905, file: !445, line: 147, column: 9)
!4910 = !DILocation(line: 147, column: 11, scope: !4909)
!4911 = !DILocation(line: 147, column: 29, scope: !4909)
!4912 = !DILocation(line: 147, column: 35, scope: !4909)
!4913 = !DILocation(line: 147, column: 9, scope: !4905)
!4914 = !DILocation(line: 146, column: 30, scope: !4905)
!4915 = !DILocation(line: 146, column: 3, scope: !4905)
!4916 = distinct !{!4916, !4907, !4917}
!4917 = !DILocation(line: 148, column: 7, scope: !4902)
!4918 = !DILocation(line: 149, column: 7, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4878, file: !445, line: 149, column: 7)
!4920 = !DILocation(line: 149, column: 10, scope: !4919)
!4921 = !DILocation(line: 149, column: 7, scope: !4878)
!4922 = !DILocation(line: 150, column: 5, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4919, file: !445, line: 149, column: 22)
!4924 = !DILocation(line: 150, column: 11, scope: !4923)
!4925 = !DILocation(line: 151, column: 5, scope: !4923)
!4926 = !DILocation(line: 154, column: 22, scope: !4878)
!4927 = !DILocation(line: 154, column: 8, scope: !4878)
!4928 = !DILocation(line: 154, column: 5, scope: !4878)
!4929 = !DILocation(line: 157, column: 10, scope: !4878)
!4930 = !DILocation(line: 157, column: 3, scope: !4878)
!4931 = !DILocation(line: 159, column: 23, scope: !4878)
!4932 = !DILocation(line: 159, column: 8, scope: !4878)
!4933 = !DILocation(line: 159, column: 6, scope: !4878)
!4934 = !DILocation(line: 160, column: 7, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4878, file: !445, line: 160, column: 7)
!4936 = !DILocation(line: 160, column: 7, scope: !4878)
!4937 = !DILocation(line: 163, column: 16, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4935, file: !445, line: 160, column: 11)
!4939 = !DILocation(line: 163, column: 5, scope: !4938)
!4940 = !DILocation(line: 163, column: 8, scope: !4938)
!4941 = !DILocation(line: 163, column: 14, scope: !4938)
!4942 = !DILocation(line: 165, column: 10, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4938, file: !445, line: 165, column: 9)
!4944 = !DILocation(line: 165, column: 16, scope: !4943)
!4945 = !DILocation(line: 165, column: 27, scope: !4943)
!4946 = !DILocation(line: 165, column: 31, scope: !4943)
!4947 = !DILocation(line: 165, column: 37, scope: !4943)
!4948 = !DILocation(line: 165, column: 9, scope: !4938)
!4949 = !DILocation(line: 166, column: 7, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4943, file: !445, line: 165, column: 48)
!4951 = !DILocation(line: 166, column: 13, scope: !4950)
!4952 = !DILocation(line: 167, column: 7, scope: !4950)
!4953 = !DILocation(line: 170, column: 10, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4938, file: !445, line: 170, column: 9)
!4955 = !DILocation(line: 170, column: 16, scope: !4954)
!4956 = !DILocation(line: 170, column: 27, scope: !4954)
!4957 = !DILocation(line: 170, column: 31, scope: !4954)
!4958 = !DILocation(line: 170, column: 37, scope: !4954)
!4959 = !DILocation(line: 170, column: 9, scope: !4938)
!4960 = !DILocation(line: 173, column: 7, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4954, file: !445, line: 170, column: 50)
!4962 = !DILocation(line: 174, column: 7, scope: !4961)
!4963 = !DILocation(line: 174, column: 13, scope: !4961)
!4964 = !DILocation(line: 175, column: 7, scope: !4961)
!4965 = !DILocation(line: 178, column: 10, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4938, file: !445, line: 178, column: 9)
!4967 = !DILocation(line: 178, column: 16, scope: !4966)
!4968 = !DILocation(line: 178, column: 26, scope: !4966)
!4969 = !DILocation(line: 178, column: 31, scope: !4966)
!4970 = !DILocation(line: 178, column: 37, scope: !4966)
!4971 = !DILocation(line: 178, column: 9, scope: !4938)
!4972 = !DILocation(line: 181, column: 7, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4966, file: !445, line: 178, column: 49)
!4974 = !DILocation(line: 182, column: 7, scope: !4973)
!4975 = !DILocation(line: 182, column: 13, scope: !4973)
!4976 = !DILocation(line: 183, column: 7, scope: !4973)
!4977 = !DILocation(line: 186, column: 25, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4938, file: !445, line: 186, column: 9)
!4979 = !DILocation(line: 186, column: 32, scope: !4978)
!4980 = !DILocation(line: 186, column: 36, scope: !4978)
!4981 = !DILocation(line: 186, column: 10, scope: !4978)
!4982 = !DILocation(line: 186, column: 9, scope: !4938)
!4983 = !DILocation(line: 187, column: 2, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4978, file: !445, line: 186, column: 43)
!4985 = !DILocation(line: 187, column: 8, scope: !4984)
!4986 = !DILocation(line: 188, column: 2, scope: !4984)
!4987 = !DILocation(line: 191, column: 35, scope: !4978)
!4988 = !DILocation(line: 191, column: 38, scope: !4978)
!4989 = !DILocation(line: 191, column: 45, scope: !4978)
!4990 = !DILocation(line: 191, column: 51, scope: !4978)
!4991 = !DILocation(line: 191, column: 59, scope: !4978)
!4992 = !DILocation(line: 192, column: 7, scope: !4978)
!4993 = !DILocation(line: 192, column: 25, scope: !4978)
!4994 = !DILocation(line: 192, column: 14, scope: !4978)
!4995 = !DILocation(line: 192, column: 12, scope: !4978)
!4996 = !DILocation(line: 191, column: 68, scope: !4978)
!4997 = !DILocation(line: 191, column: 7, scope: !4978)
!4998 = !DILocation(line: 191, column: 10, scope: !4978)
!4999 = !DILocation(line: 191, column: 17, scope: !4978)
!5000 = !DILocation(line: 191, column: 23, scope: !4978)
!5001 = !DILocation(line: 191, column: 31, scope: !4978)
!5002 = !DILocation(line: 193, column: 3, scope: !4938)
!5003 = !DILocalVariable(name: "os_fd", scope: !5004, file: !445, line: 194, type: !156)
!5004 = distinct !DILexicalBlock(scope: !4935, file: !445, line: 193, column: 10)
!5005 = !DILocation(line: 194, column: 9, scope: !5004)
!5006 = !DILocation(line: 194, column: 56, scope: !5004)
!5007 = !DILocation(line: 194, column: 36, scope: !5004)
!5008 = !DILocation(line: 194, column: 67, scope: !5004)
!5009 = !DILocation(line: 194, column: 74, scope: !5004)
!5010 = !DILocation(line: 194, column: 17, scope: !5004)
!5011 = !DILocation(line: 195, column: 9, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !5004, file: !445, line: 195, column: 9)
!5013 = !DILocation(line: 195, column: 15, scope: !5012)
!5014 = !DILocation(line: 195, column: 9, scope: !5004)
!5015 = !DILocation(line: 196, column: 7, scope: !5012)
!5016 = !DILocation(line: 197, column: 13, scope: !5004)
!5017 = !DILocation(line: 197, column: 5, scope: !5004)
!5018 = !DILocation(line: 197, column: 8, scope: !5004)
!5019 = !DILocation(line: 197, column: 11, scope: !5004)
!5020 = !DILocation(line: 200, column: 3, scope: !4878)
!5021 = !DILocation(line: 200, column: 6, scope: !4878)
!5022 = !DILocation(line: 200, column: 12, scope: !4878)
!5023 = !DILocation(line: 201, column: 8, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !4878, file: !445, line: 201, column: 7)
!5025 = !DILocation(line: 201, column: 14, scope: !5024)
!5026 = !DILocation(line: 201, column: 27, scope: !5024)
!5027 = !DILocation(line: 201, column: 7, scope: !4878)
!5028 = !DILocation(line: 202, column: 5, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5024, file: !445, line: 201, column: 40)
!5030 = !DILocation(line: 202, column: 8, scope: !5029)
!5031 = !DILocation(line: 202, column: 14, scope: !5029)
!5032 = !DILocation(line: 203, column: 3, scope: !5029)
!5033 = !DILocation(line: 203, column: 15, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5024, file: !445, line: 203, column: 14)
!5035 = !DILocation(line: 203, column: 21, scope: !5034)
!5036 = !DILocation(line: 203, column: 34, scope: !5034)
!5037 = !DILocation(line: 203, column: 14, scope: !5024)
!5038 = !DILocation(line: 204, column: 5, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5034, file: !445, line: 203, column: 47)
!5040 = !DILocation(line: 204, column: 8, scope: !5039)
!5041 = !DILocation(line: 204, column: 14, scope: !5039)
!5042 = !DILocation(line: 205, column: 3, scope: !5039)
!5043 = !DILocation(line: 206, column: 5, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5034, file: !445, line: 205, column: 10)
!5045 = !DILocation(line: 206, column: 8, scope: !5044)
!5046 = !DILocation(line: 206, column: 14, scope: !5044)
!5047 = !DILocation(line: 209, column: 10, scope: !4878)
!5048 = !DILocation(line: 209, column: 3, scope: !4878)
!5049 = !DILocation(line: 210, column: 1, scope: !4878)
!5050 = distinct !DISubprogram(name: "has_permission", scope: !445, file: !445, line: 110, type: !5051, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !450, retainedNodes: !157)
!5051 = !DISubroutineType(types: !5052)
!5052 = !{!156, !156, !4555}
!5053 = !DILocalVariable(name: "flags", arg: 1, scope: !5050, file: !445, line: 110, type: !156)
!5054 = !DILocation(line: 110, column: 31, scope: !5050)
!5055 = !DILocalVariable(name: "s", arg: 2, scope: !5050, file: !445, line: 110, type: !4555)
!5056 = !DILocation(line: 110, column: 53, scope: !5050)
!5057 = !DILocalVariable(name: "write_access", scope: !5050, file: !445, line: 111, type: !156)
!5058 = !DILocation(line: 111, column: 7, scope: !5050)
!5059 = !DILocalVariable(name: "read_access", scope: !5050, file: !445, line: 111, type: !156)
!5060 = !DILocation(line: 111, column: 21, scope: !5050)
!5061 = !DILocalVariable(name: "mode", scope: !5050, file: !445, line: 112, type: !440)
!5062 = !DILocation(line: 112, column: 10, scope: !5050)
!5063 = !DILocation(line: 112, column: 17, scope: !5050)
!5064 = !DILocation(line: 112, column: 20, scope: !5050)
!5065 = !DILocation(line: 114, column: 7, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5050, file: !445, line: 114, column: 7)
!5067 = !DILocation(line: 114, column: 13, scope: !5066)
!5068 = !DILocation(line: 114, column: 24, scope: !5066)
!5069 = !DILocation(line: 114, column: 27, scope: !5066)
!5070 = !DILocation(line: 114, column: 33, scope: !5066)
!5071 = !DILocation(line: 114, column: 7, scope: !5050)
!5072 = !DILocation(line: 115, column: 17, scope: !5066)
!5073 = !DILocation(line: 115, column: 5, scope: !5066)
!5074 = !DILocation(line: 116, column: 20, scope: !5066)
!5075 = !DILocation(line: 118, column: 7, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5050, file: !445, line: 118, column: 7)
!5077 = !DILocation(line: 118, column: 13, scope: !5076)
!5078 = !DILocation(line: 118, column: 24, scope: !5076)
!5079 = !DILocation(line: 118, column: 27, scope: !5076)
!5080 = !DILocation(line: 118, column: 33, scope: !5076)
!5081 = !DILocation(line: 118, column: 7, scope: !5050)
!5082 = !DILocation(line: 119, column: 18, scope: !5076)
!5083 = !DILocation(line: 119, column: 5, scope: !5076)
!5084 = !DILocation(line: 120, column: 21, scope: !5076)
!5085 = !DILocation(line: 131, column: 7, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !5050, file: !445, line: 131, column: 7)
!5087 = !DILocation(line: 131, column: 19, scope: !5086)
!5088 = !DILocation(line: 131, column: 24, scope: !5086)
!5089 = !DILocation(line: 131, column: 29, scope: !5086)
!5090 = !DILocation(line: 131, column: 43, scope: !5086)
!5091 = !DILocation(line: 131, column: 48, scope: !5086)
!5092 = !DILocation(line: 131, column: 40, scope: !5086)
!5093 = !DILocation(line: 131, column: 62, scope: !5086)
!5094 = !DILocation(line: 131, column: 67, scope: !5086)
!5095 = !DILocation(line: 131, column: 59, scope: !5086)
!5096 = !DILocation(line: 131, column: 7, scope: !5050)
!5097 = !DILocation(line: 132, column: 5, scope: !5086)
!5098 = !DILocation(line: 134, column: 7, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !5050, file: !445, line: 134, column: 7)
!5100 = !DILocation(line: 134, column: 20, scope: !5099)
!5101 = !DILocation(line: 134, column: 26, scope: !5099)
!5102 = !DILocation(line: 134, column: 31, scope: !5099)
!5103 = !DILocation(line: 134, column: 45, scope: !5099)
!5104 = !DILocation(line: 134, column: 50, scope: !5099)
!5105 = !DILocation(line: 134, column: 42, scope: !5099)
!5106 = !DILocation(line: 134, column: 64, scope: !5099)
!5107 = !DILocation(line: 134, column: 69, scope: !5099)
!5108 = !DILocation(line: 134, column: 61, scope: !5099)
!5109 = !DILocation(line: 134, column: 7, scope: !5050)
!5110 = !DILocation(line: 135, column: 5, scope: !5099)
!5111 = !DILocation(line: 137, column: 3, scope: !5050)
!5112 = !DILocation(line: 138, column: 1, scope: !5050)
!5113 = distinct !DISubprogram(name: "__fd_openat", scope: !445, file: !445, line: 212, type: !5114, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!5114 = !DISubroutineType(types: !5115)
!5115 = !{!156, !156, !533, !156, !440}
!5116 = !DILocalVariable(name: "basefd", arg: 1, scope: !5113, file: !445, line: 212, type: !156)
!5117 = !DILocation(line: 212, column: 21, scope: !5113)
!5118 = !DILocalVariable(name: "pathname", arg: 2, scope: !5113, file: !445, line: 212, type: !533)
!5119 = !DILocation(line: 212, column: 41, scope: !5113)
!5120 = !DILocalVariable(name: "flags", arg: 3, scope: !5113, file: !445, line: 212, type: !156)
!5121 = !DILocation(line: 212, column: 55, scope: !5113)
!5122 = !DILocalVariable(name: "mode", arg: 4, scope: !5113, file: !445, line: 212, type: !440)
!5123 = !DILocation(line: 212, column: 69, scope: !5113)
!5124 = !DILocalVariable(name: "f", scope: !5113, file: !445, line: 213, type: !4890)
!5125 = !DILocation(line: 213, column: 15, scope: !5113)
!5126 = !DILocalVariable(name: "fd", scope: !5113, file: !445, line: 214, type: !156)
!5127 = !DILocation(line: 214, column: 7, scope: !5113)
!5128 = !DILocation(line: 215, column: 7, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5113, file: !445, line: 215, column: 7)
!5130 = !DILocation(line: 215, column: 14, scope: !5129)
!5131 = !DILocation(line: 215, column: 7, scope: !5113)
!5132 = !DILocalVariable(name: "bf", scope: !5133, file: !445, line: 216, type: !4890)
!5133 = distinct !DILexicalBlock(scope: !5129, file: !445, line: 215, column: 27)
!5134 = !DILocation(line: 216, column: 17, scope: !5133)
!5135 = !DILocation(line: 216, column: 33, scope: !5133)
!5136 = !DILocation(line: 216, column: 22, scope: !5133)
!5137 = !DILocation(line: 218, column: 10, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5133, file: !445, line: 218, column: 9)
!5139 = !DILocation(line: 218, column: 9, scope: !5133)
!5140 = !DILocation(line: 219, column: 7, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5138, file: !445, line: 218, column: 14)
!5142 = !DILocation(line: 219, column: 13, scope: !5141)
!5143 = !DILocation(line: 220, column: 7, scope: !5141)
!5144 = !DILocation(line: 221, column: 16, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5138, file: !445, line: 221, column: 16)
!5146 = !DILocation(line: 221, column: 20, scope: !5145)
!5147 = !DILocation(line: 221, column: 16, scope: !5138)
!5148 = !DILocation(line: 222, column: 7, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5145, file: !445, line: 221, column: 27)
!5150 = !DILocation(line: 223, column: 7, scope: !5149)
!5151 = !DILocation(line: 223, column: 13, scope: !5149)
!5152 = !DILocation(line: 224, column: 7, scope: !5149)
!5153 = !DILocation(line: 226, column: 14, scope: !5133)
!5154 = !DILocation(line: 226, column: 18, scope: !5133)
!5155 = !DILocation(line: 226, column: 12, scope: !5133)
!5156 = !DILocation(line: 227, column: 3, scope: !5133)
!5157 = !DILocation(line: 229, column: 22, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5113, file: !445, line: 229, column: 7)
!5159 = !DILocation(line: 229, column: 7, scope: !5158)
!5160 = !DILocation(line: 229, column: 7, scope: !5113)
!5161 = !DILocation(line: 231, column: 22, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5158, file: !445, line: 229, column: 33)
!5163 = !DILocation(line: 231, column: 32, scope: !5162)
!5164 = !DILocation(line: 231, column: 39, scope: !5162)
!5165 = !DILocation(line: 231, column: 12, scope: !5162)
!5166 = !DILocation(line: 231, column: 5, scope: !5162)
!5167 = !DILocation(line: 234, column: 11, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5113, file: !445, line: 234, column: 3)
!5169 = !DILocation(line: 234, column: 8, scope: !5168)
!5170 = !DILocation(line: 234, column: 16, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5168, file: !445, line: 234, column: 3)
!5172 = !DILocation(line: 234, column: 19, scope: !5171)
!5173 = !DILocation(line: 234, column: 3, scope: !5168)
!5174 = !DILocation(line: 235, column: 25, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5171, file: !445, line: 235, column: 9)
!5176 = !DILocation(line: 235, column: 11, scope: !5175)
!5177 = !DILocation(line: 235, column: 29, scope: !5175)
!5178 = !DILocation(line: 235, column: 35, scope: !5175)
!5179 = !DILocation(line: 235, column: 9, scope: !5171)
!5180 = !DILocation(line: 234, column: 30, scope: !5171)
!5181 = !DILocation(line: 234, column: 3, scope: !5171)
!5182 = distinct !{!5182, !5173, !5183}
!5183 = !DILocation(line: 236, column: 7, scope: !5168)
!5184 = !DILocation(line: 237, column: 7, scope: !5185)
!5185 = distinct !DILexicalBlock(scope: !5113, file: !445, line: 237, column: 7)
!5186 = !DILocation(line: 237, column: 10, scope: !5185)
!5187 = !DILocation(line: 237, column: 7, scope: !5113)
!5188 = !DILocation(line: 238, column: 5, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5185, file: !445, line: 237, column: 22)
!5190 = !DILocation(line: 238, column: 11, scope: !5189)
!5191 = !DILocation(line: 239, column: 5, scope: !5189)
!5192 = !DILocation(line: 242, column: 22, scope: !5113)
!5193 = !DILocation(line: 242, column: 8, scope: !5113)
!5194 = !DILocation(line: 242, column: 5, scope: !5113)
!5195 = !DILocation(line: 245, column: 10, scope: !5113)
!5196 = !DILocation(line: 245, column: 3, scope: !5113)
!5197 = !DILocalVariable(name: "os_fd", scope: !5113, file: !445, line: 247, type: !156)
!5198 = !DILocation(line: 247, column: 7, scope: !5113)
!5199 = !DILocation(line: 247, column: 42, scope: !5113)
!5200 = !DILocation(line: 247, column: 36, scope: !5113)
!5201 = !DILocation(line: 247, column: 70, scope: !5113)
!5202 = !DILocation(line: 247, column: 50, scope: !5113)
!5203 = !DILocation(line: 247, column: 87, scope: !5113)
!5204 = !DILocation(line: 247, column: 81, scope: !5113)
!5205 = !DILocation(line: 247, column: 94, scope: !5113)
!5206 = !DILocation(line: 247, column: 15, scope: !5113)
!5207 = !DILocation(line: 248, column: 7, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5113, file: !445, line: 248, column: 7)
!5209 = !DILocation(line: 248, column: 13, scope: !5208)
!5210 = !DILocation(line: 248, column: 7, scope: !5113)
!5211 = !DILocation(line: 249, column: 5, scope: !5208)
!5212 = !DILocation(line: 251, column: 11, scope: !5113)
!5213 = !DILocation(line: 251, column: 3, scope: !5113)
!5214 = !DILocation(line: 251, column: 6, scope: !5113)
!5215 = !DILocation(line: 251, column: 9, scope: !5113)
!5216 = !DILocation(line: 252, column: 3, scope: !5113)
!5217 = !DILocation(line: 252, column: 6, scope: !5113)
!5218 = !DILocation(line: 252, column: 12, scope: !5113)
!5219 = !DILocation(line: 253, column: 8, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5113, file: !445, line: 253, column: 7)
!5221 = !DILocation(line: 253, column: 14, scope: !5220)
!5222 = !DILocation(line: 253, column: 27, scope: !5220)
!5223 = !DILocation(line: 253, column: 7, scope: !5113)
!5224 = !DILocation(line: 254, column: 5, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5220, file: !445, line: 253, column: 40)
!5226 = !DILocation(line: 254, column: 8, scope: !5225)
!5227 = !DILocation(line: 254, column: 14, scope: !5225)
!5228 = !DILocation(line: 255, column: 3, scope: !5225)
!5229 = !DILocation(line: 255, column: 15, scope: !5230)
!5230 = distinct !DILexicalBlock(scope: !5220, file: !445, line: 255, column: 14)
!5231 = !DILocation(line: 255, column: 21, scope: !5230)
!5232 = !DILocation(line: 255, column: 34, scope: !5230)
!5233 = !DILocation(line: 255, column: 14, scope: !5220)
!5234 = !DILocation(line: 256, column: 5, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5230, file: !445, line: 255, column: 47)
!5236 = !DILocation(line: 256, column: 8, scope: !5235)
!5237 = !DILocation(line: 256, column: 14, scope: !5235)
!5238 = !DILocation(line: 257, column: 3, scope: !5235)
!5239 = !DILocation(line: 258, column: 5, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5230, file: !445, line: 257, column: 10)
!5241 = !DILocation(line: 258, column: 8, scope: !5240)
!5242 = !DILocation(line: 258, column: 14, scope: !5240)
!5243 = !DILocation(line: 261, column: 10, scope: !5113)
!5244 = !DILocation(line: 261, column: 3, scope: !5113)
!5245 = !DILocation(line: 262, column: 1, scope: !5113)
!5246 = distinct !DISubprogram(name: "__get_file", scope: !445, file: !445, line: 80, type: !5247, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !450, retainedNodes: !157)
!5247 = !DISubroutineType(types: !5248)
!5248 = !{!4890, !156}
!5249 = !DILocalVariable(name: "fd", arg: 1, scope: !5246, file: !445, line: 80, type: !156)
!5250 = !DILocation(line: 80, column: 35, scope: !5246)
!5251 = !DILocation(line: 81, column: 7, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !5246, file: !445, line: 81, column: 7)
!5253 = !DILocation(line: 81, column: 9, scope: !5252)
!5254 = !DILocation(line: 81, column: 13, scope: !5252)
!5255 = !DILocalVariable(name: "f", scope: !5256, file: !445, line: 82, type: !4890)
!5256 = distinct !DILexicalBlock(scope: !5252, file: !445, line: 81, column: 28)
!5257 = !DILocation(line: 82, column: 17, scope: !5256)
!5258 = !DILocation(line: 82, column: 36, scope: !5256)
!5259 = !DILocation(line: 82, column: 22, scope: !5256)
!5260 = !DILocation(line: 83, column: 9, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5256, file: !445, line: 83, column: 9)
!5262 = !DILocation(line: 83, column: 12, scope: !5261)
!5263 = !DILocation(line: 83, column: 18, scope: !5261)
!5264 = !DILocation(line: 83, column: 9, scope: !5256)
!5265 = !DILocation(line: 84, column: 14, scope: !5261)
!5266 = !DILocation(line: 84, column: 7, scope: !5261)
!5267 = !DILocation(line: 87, column: 3, scope: !5246)
!5268 = !DILocation(line: 88, column: 1, scope: !5246)
!5269 = distinct !DISubprogram(name: "utimes", scope: !445, file: !445, line: 265, type: !5270, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!5270 = !DISubroutineType(types: !5271)
!5271 = !{!156, !533, !5272}
!5272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5273, size: 64)
!5273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5274)
!5274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !5275, line: 8, size: 128, elements: !5276)
!5275 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h", directory: "")
!5276 = !{!5277, !5278}
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !5274, file: !5275, line: 10, baseType: !401, size: 64)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !5274, file: !5275, line: 11, baseType: !5279, size: 64, offset: 64)
!5279 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !375, line: 162, baseType: !391)
!5280 = !DILocalVariable(name: "path", arg: 1, scope: !5269, file: !445, line: 265, type: !533)
!5281 = !DILocation(line: 265, column: 24, scope: !5269)
!5282 = !DILocalVariable(name: "times", arg: 2, scope: !5269, file: !445, line: 265, type: !5272)
!5283 = !DILocation(line: 265, column: 51, scope: !5269)
!5284 = !DILocalVariable(name: "dfile", scope: !5269, file: !445, line: 266, type: !4548)
!5285 = !DILocation(line: 266, column: 20, scope: !5269)
!5286 = !DILocation(line: 266, column: 43, scope: !5269)
!5287 = !DILocation(line: 266, column: 28, scope: !5269)
!5288 = !DILocation(line: 268, column: 7, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5269, file: !445, line: 268, column: 7)
!5290 = !DILocation(line: 268, column: 7, scope: !5269)
!5291 = !DILocation(line: 270, column: 10, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5293, file: !445, line: 270, column: 9)
!5293 = distinct !DILexicalBlock(scope: !5289, file: !445, line: 268, column: 14)
!5294 = !DILocation(line: 270, column: 9, scope: !5293)
!5295 = !DILocalVariable(name: "newTimes", scope: !5296, file: !445, line: 271, type: !5297)
!5296 = distinct !DILexicalBlock(scope: !5292, file: !445, line: 270, column: 17)
!5297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5274, size: 256, elements: !138)
!5298 = !DILocation(line: 271, column: 22, scope: !5296)
!5299 = !DILocation(line: 272, column: 22, scope: !5296)
!5300 = !DILocation(line: 272, column: 7, scope: !5296)
!5301 = !DILocation(line: 273, column: 7, scope: !5296)
!5302 = !DILocation(line: 273, column: 21, scope: !5296)
!5303 = !DILocation(line: 274, column: 15, scope: !5296)
!5304 = !DILocation(line: 274, column: 13, scope: !5296)
!5305 = !DILocation(line: 275, column: 5, scope: !5296)
!5306 = !DILocation(line: 278, column: 29, scope: !5293)
!5307 = !DILocation(line: 278, column: 38, scope: !5293)
!5308 = !DILocation(line: 278, column: 5, scope: !5293)
!5309 = !DILocation(line: 278, column: 12, scope: !5293)
!5310 = !DILocation(line: 278, column: 18, scope: !5293)
!5311 = !DILocation(line: 278, column: 27, scope: !5293)
!5312 = !DILocation(line: 279, column: 29, scope: !5293)
!5313 = !DILocation(line: 279, column: 38, scope: !5293)
!5314 = !DILocation(line: 279, column: 5, scope: !5293)
!5315 = !DILocation(line: 279, column: 12, scope: !5293)
!5316 = !DILocation(line: 279, column: 18, scope: !5293)
!5317 = !DILocation(line: 279, column: 27, scope: !5293)
!5318 = !DILocation(line: 284, column: 5, scope: !5293)
!5319 = !DILocation(line: 286, column: 51, scope: !5269)
!5320 = !DILocation(line: 286, column: 31, scope: !5269)
!5321 = !DILocation(line: 286, column: 58, scope: !5269)
!5322 = !DILocation(line: 286, column: 10, scope: !5269)
!5323 = !DILocation(line: 286, column: 3, scope: !5269)
!5324 = !DILocation(line: 287, column: 1, scope: !5269)
!5325 = distinct !DISubprogram(name: "futimesat", scope: !445, file: !445, line: 290, type: !5326, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!5326 = !DISubroutineType(types: !5327)
!5327 = !{!156, !156, !533, !5272}
!5328 = !DILocalVariable(name: "fd", arg: 1, scope: !5325, file: !445, line: 290, type: !156)
!5329 = !DILocation(line: 290, column: 19, scope: !5325)
!5330 = !DILocalVariable(name: "path", arg: 2, scope: !5325, file: !445, line: 290, type: !533)
!5331 = !DILocation(line: 290, column: 35, scope: !5325)
!5332 = !DILocalVariable(name: "times", arg: 3, scope: !5325, file: !445, line: 290, type: !5272)
!5333 = !DILocation(line: 290, column: 62, scope: !5325)
!5334 = !DILocation(line: 291, column: 7, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5325, file: !445, line: 291, column: 7)
!5336 = !DILocation(line: 291, column: 10, scope: !5335)
!5337 = !DILocation(line: 291, column: 7, scope: !5325)
!5338 = !DILocalVariable(name: "f", scope: !5339, file: !445, line: 292, type: !4890)
!5339 = distinct !DILexicalBlock(scope: !5335, file: !445, line: 291, column: 23)
!5340 = !DILocation(line: 292, column: 17, scope: !5339)
!5341 = !DILocation(line: 292, column: 32, scope: !5339)
!5342 = !DILocation(line: 292, column: 21, scope: !5339)
!5343 = !DILocation(line: 294, column: 10, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5339, file: !445, line: 294, column: 9)
!5345 = !DILocation(line: 294, column: 9, scope: !5339)
!5346 = !DILocation(line: 295, column: 7, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5344, file: !445, line: 294, column: 13)
!5348 = !DILocation(line: 295, column: 13, scope: !5347)
!5349 = !DILocation(line: 296, column: 7, scope: !5347)
!5350 = !DILocation(line: 297, column: 16, scope: !5351)
!5351 = distinct !DILexicalBlock(scope: !5344, file: !445, line: 297, column: 16)
!5352 = !DILocation(line: 297, column: 19, scope: !5351)
!5353 = !DILocation(line: 297, column: 16, scope: !5344)
!5354 = !DILocation(line: 298, column: 7, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5351, file: !445, line: 297, column: 26)
!5356 = !DILocation(line: 299, column: 7, scope: !5355)
!5357 = !DILocation(line: 299, column: 13, scope: !5355)
!5358 = !DILocation(line: 300, column: 7, scope: !5355)
!5359 = !DILocation(line: 302, column: 10, scope: !5339)
!5360 = !DILocation(line: 302, column: 13, scope: !5339)
!5361 = !DILocation(line: 302, column: 8, scope: !5339)
!5362 = !DILocation(line: 303, column: 3, scope: !5339)
!5363 = !DILocation(line: 304, column: 22, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5325, file: !445, line: 304, column: 7)
!5365 = !DILocation(line: 304, column: 7, scope: !5364)
!5366 = !DILocation(line: 304, column: 7, scope: !5325)
!5367 = !DILocation(line: 305, column: 19, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5364, file: !445, line: 304, column: 29)
!5369 = !DILocation(line: 305, column: 25, scope: !5368)
!5370 = !DILocation(line: 305, column: 12, scope: !5368)
!5371 = !DILocation(line: 305, column: 5, scope: !5368)
!5372 = !DILocation(line: 308, column: 40, scope: !5325)
!5373 = !DILocation(line: 308, column: 34, scope: !5325)
!5374 = !DILocation(line: 309, column: 19, scope: !5325)
!5375 = !DILocation(line: 309, column: 46, scope: !5325)
!5376 = !DILocation(line: 309, column: 26, scope: !5325)
!5377 = !DILocation(line: 309, column: 61, scope: !5325)
!5378 = !DILocation(line: 308, column: 10, scope: !5325)
!5379 = !DILocation(line: 308, column: 3, scope: !5325)
!5380 = !DILocation(line: 310, column: 1, scope: !5325)
!5381 = !DILocalVariable(name: "fd", arg: 1, scope: !511, file: !445, line: 312, type: !156)
!5382 = !DILocation(line: 312, column: 15, scope: !511)
!5383 = !DILocalVariable(name: "f", scope: !511, file: !445, line: 314, type: !4890)
!5384 = !DILocation(line: 314, column: 15, scope: !511)
!5385 = !DILocalVariable(name: "r", scope: !511, file: !445, line: 315, type: !156)
!5386 = !DILocation(line: 315, column: 7, scope: !511)
!5387 = !DILocation(line: 317, column: 10, scope: !511)
!5388 = !DILocation(line: 319, column: 18, scope: !511)
!5389 = !DILocation(line: 319, column: 7, scope: !511)
!5390 = !DILocation(line: 319, column: 5, scope: !511)
!5391 = !DILocation(line: 320, column: 8, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !511, file: !445, line: 320, column: 7)
!5393 = !DILocation(line: 320, column: 7, scope: !511)
!5394 = !DILocation(line: 321, column: 5, scope: !5395)
!5395 = distinct !DILexicalBlock(scope: !5392, file: !445, line: 320, column: 11)
!5396 = !DILocation(line: 321, column: 11, scope: !5395)
!5397 = !DILocation(line: 322, column: 5, scope: !5395)
!5398 = !DILocation(line: 325, column: 16, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !511, file: !445, line: 325, column: 7)
!5400 = !DILocation(line: 325, column: 7, scope: !5399)
!5401 = !DILocation(line: 325, column: 29, scope: !5399)
!5402 = !DILocation(line: 325, column: 42, scope: !5399)
!5403 = !DILocation(line: 325, column: 32, scope: !5399)
!5404 = !DILocation(line: 325, column: 56, scope: !5399)
!5405 = !DILocation(line: 325, column: 53, scope: !5399)
!5406 = !DILocation(line: 325, column: 7, scope: !511)
!5407 = !DILocation(line: 326, column: 26, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5399, file: !445, line: 325, column: 65)
!5409 = !DILocation(line: 327, column: 5, scope: !5408)
!5410 = !DILocation(line: 327, column: 11, scope: !5408)
!5411 = !DILocation(line: 328, column: 5, scope: !5408)
!5412 = !DILocation(line: 339, column: 10, scope: !511)
!5413 = !DILocation(line: 339, column: 3, scope: !511)
!5414 = !DILocation(line: 341, column: 10, scope: !511)
!5415 = !DILocation(line: 341, column: 3, scope: !511)
!5416 = !DILocation(line: 342, column: 1, scope: !511)
!5417 = !DILocalVariable(name: "fd", arg: 1, scope: !516, file: !445, line: 344, type: !156)
!5418 = !DILocation(line: 344, column: 18, scope: !516)
!5419 = !DILocalVariable(name: "buf", arg: 2, scope: !516, file: !445, line: 344, type: !58)
!5420 = !DILocation(line: 344, column: 28, scope: !516)
!5421 = !DILocalVariable(name: "count", arg: 3, scope: !516, file: !445, line: 344, type: !448)
!5422 = !DILocation(line: 344, column: 40, scope: !516)
!5423 = !DILocalVariable(name: "f", scope: !516, file: !445, line: 346, type: !4890)
!5424 = !DILocation(line: 346, column: 15, scope: !516)
!5425 = !DILocation(line: 348, column: 10, scope: !516)
!5426 = !DILocation(line: 350, column: 7, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !516, file: !445, line: 350, column: 7)
!5428 = !DILocation(line: 350, column: 13, scope: !5427)
!5429 = !DILocation(line: 350, column: 7, scope: !516)
!5430 = !DILocation(line: 351, column: 5, scope: !5427)
!5431 = !DILocation(line: 353, column: 7, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !516, file: !445, line: 353, column: 7)
!5433 = !DILocation(line: 353, column: 11, scope: !5432)
!5434 = !DILocation(line: 353, column: 7, scope: !516)
!5435 = !DILocation(line: 354, column: 5, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5432, file: !445, line: 353, column: 20)
!5437 = !DILocation(line: 354, column: 11, scope: !5436)
!5438 = !DILocation(line: 355, column: 5, scope: !5436)
!5439 = !DILocation(line: 358, column: 18, scope: !516)
!5440 = !DILocation(line: 358, column: 7, scope: !516)
!5441 = !DILocation(line: 358, column: 5, scope: !516)
!5442 = !DILocation(line: 360, column: 8, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !516, file: !445, line: 360, column: 7)
!5444 = !DILocation(line: 360, column: 7, scope: !516)
!5445 = !DILocation(line: 361, column: 5, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5443, file: !445, line: 360, column: 11)
!5447 = !DILocation(line: 361, column: 11, scope: !5446)
!5448 = !DILocation(line: 362, column: 5, scope: !5446)
!5449 = !DILocation(line: 365, column: 16, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !516, file: !445, line: 365, column: 7)
!5451 = !DILocation(line: 365, column: 7, scope: !5450)
!5452 = !DILocation(line: 365, column: 29, scope: !5450)
!5453 = !DILocation(line: 365, column: 42, scope: !5450)
!5454 = !DILocation(line: 365, column: 32, scope: !5450)
!5455 = !DILocation(line: 365, column: 55, scope: !5450)
!5456 = !DILocation(line: 365, column: 52, scope: !5450)
!5457 = !DILocation(line: 365, column: 7, scope: !516)
!5458 = !DILocation(line: 366, column: 26, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5450, file: !445, line: 365, column: 64)
!5460 = !DILocation(line: 367, column: 5, scope: !5459)
!5461 = !DILocation(line: 367, column: 11, scope: !5459)
!5462 = !DILocation(line: 368, column: 5, scope: !5459)
!5463 = !DILocation(line: 371, column: 8, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !516, file: !445, line: 371, column: 7)
!5465 = !DILocation(line: 371, column: 11, scope: !5464)
!5466 = !DILocation(line: 371, column: 7, scope: !516)
!5467 = !DILocalVariable(name: "r", scope: !5468, file: !445, line: 373, type: !156)
!5468 = distinct !DILexicalBlock(scope: !5464, file: !445, line: 371, column: 18)
!5469 = !DILocation(line: 373, column: 9, scope: !5468)
!5470 = !DILocation(line: 374, column: 28, scope: !5468)
!5471 = !DILocation(line: 374, column: 11, scope: !5468)
!5472 = !DILocation(line: 374, column: 9, scope: !5468)
!5473 = !DILocation(line: 375, column: 31, scope: !5468)
!5474 = !DILocation(line: 375, column: 13, scope: !5468)
!5475 = !DILocation(line: 375, column: 11, scope: !5468)
!5476 = !DILocation(line: 379, column: 30, scope: !5468)
!5477 = !DILocation(line: 379, column: 35, scope: !5468)
!5478 = !DILocation(line: 379, column: 5, scope: !5468)
!5479 = !DILocation(line: 380, column: 9, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5468, file: !445, line: 380, column: 9)
!5481 = !DILocation(line: 380, column: 12, scope: !5480)
!5482 = !DILocation(line: 380, column: 15, scope: !5480)
!5483 = !DILocation(line: 380, column: 9, scope: !5468)
!5484 = !DILocation(line: 381, column: 30, scope: !5480)
!5485 = !DILocation(line: 381, column: 33, scope: !5480)
!5486 = !DILocation(line: 381, column: 37, scope: !5480)
!5487 = !DILocation(line: 381, column: 42, scope: !5480)
!5488 = !DILocation(line: 381, column: 11, scope: !5480)
!5489 = !DILocation(line: 381, column: 9, scope: !5480)
!5490 = !DILocation(line: 381, column: 7, scope: !5480)
!5491 = !DILocation(line: 383, column: 33, scope: !5480)
!5492 = !DILocation(line: 383, column: 36, scope: !5480)
!5493 = !DILocation(line: 383, column: 40, scope: !5480)
!5494 = !DILocation(line: 383, column: 45, scope: !5480)
!5495 = !DILocation(line: 383, column: 62, scope: !5480)
!5496 = !DILocation(line: 383, column: 65, scope: !5480)
!5497 = !DILocation(line: 383, column: 11, scope: !5480)
!5498 = !DILocation(line: 383, column: 9, scope: !5480)
!5499 = !DILocation(line: 385, column: 9, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5468, file: !445, line: 385, column: 9)
!5501 = !DILocation(line: 385, column: 11, scope: !5500)
!5502 = !DILocation(line: 385, column: 9, scope: !5468)
!5503 = !DILocation(line: 386, column: 7, scope: !5500)
!5504 = !DILocation(line: 388, column: 9, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5468, file: !445, line: 388, column: 9)
!5506 = !DILocation(line: 388, column: 12, scope: !5505)
!5507 = !DILocation(line: 388, column: 15, scope: !5505)
!5508 = !DILocation(line: 388, column: 9, scope: !5468)
!5509 = !DILocation(line: 389, column: 17, scope: !5505)
!5510 = !DILocation(line: 389, column: 7, scope: !5505)
!5511 = !DILocation(line: 389, column: 10, scope: !5505)
!5512 = !DILocation(line: 389, column: 14, scope: !5505)
!5513 = !DILocation(line: 390, column: 12, scope: !5468)
!5514 = !DILocation(line: 390, column: 5, scope: !5468)
!5515 = !DILocation(line: 393, column: 5, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5517, file: !445, line: 393, column: 5)
!5517 = distinct !DILexicalBlock(scope: !5518, file: !445, line: 393, column: 5)
!5518 = distinct !DILexicalBlock(scope: !5464, file: !445, line: 392, column: 8)
!5519 = !DILocation(line: 393, column: 5, scope: !5517)
!5520 = !DILocation(line: 394, column: 19, scope: !5521)
!5521 = distinct !DILexicalBlock(scope: !5518, file: !445, line: 394, column: 9)
!5522 = !DILocation(line: 394, column: 22, scope: !5521)
!5523 = !DILocation(line: 394, column: 29, scope: !5521)
!5524 = !DILocation(line: 394, column: 10, scope: !5521)
!5525 = !DILocation(line: 394, column: 37, scope: !5521)
!5526 = !DILocation(line: 394, column: 40, scope: !5521)
!5527 = !DILocation(line: 394, column: 35, scope: !5521)
!5528 = !DILocation(line: 394, column: 9, scope: !5518)
!5529 = !DILocation(line: 395, column: 7, scope: !5521)
!5530 = !DILocation(line: 398, column: 9, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5518, file: !445, line: 398, column: 9)
!5532 = !DILocation(line: 398, column: 12, scope: !5531)
!5533 = !DILocation(line: 398, column: 18, scope: !5531)
!5534 = !DILocation(line: 398, column: 16, scope: !5531)
!5535 = !DILocation(line: 398, column: 26, scope: !5531)
!5536 = !DILocation(line: 398, column: 29, scope: !5531)
!5537 = !DILocation(line: 398, column: 36, scope: !5531)
!5538 = !DILocation(line: 398, column: 24, scope: !5531)
!5539 = !DILocation(line: 398, column: 9, scope: !5518)
!5540 = !DILocation(line: 399, column: 15, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5531, file: !445, line: 398, column: 42)
!5542 = !DILocation(line: 399, column: 18, scope: !5541)
!5543 = !DILocation(line: 399, column: 25, scope: !5541)
!5544 = !DILocation(line: 399, column: 32, scope: !5541)
!5545 = !DILocation(line: 399, column: 35, scope: !5541)
!5546 = !DILocation(line: 399, column: 30, scope: !5541)
!5547 = !DILocation(line: 399, column: 13, scope: !5541)
!5548 = !DILocation(line: 400, column: 5, scope: !5541)
!5549 = !DILocation(line: 402, column: 12, scope: !5518)
!5550 = !DILocation(line: 402, column: 17, scope: !5518)
!5551 = !DILocation(line: 402, column: 20, scope: !5518)
!5552 = !DILocation(line: 402, column: 27, scope: !5518)
!5553 = !DILocation(line: 402, column: 38, scope: !5518)
!5554 = !DILocation(line: 402, column: 41, scope: !5518)
!5555 = !DILocation(line: 402, column: 36, scope: !5518)
!5556 = !DILocation(line: 402, column: 46, scope: !5518)
!5557 = !DILocation(line: 402, column: 5, scope: !5518)
!5558 = !DILocation(line: 403, column: 15, scope: !5518)
!5559 = !DILocation(line: 403, column: 5, scope: !5518)
!5560 = !DILocation(line: 403, column: 8, scope: !5518)
!5561 = !DILocation(line: 403, column: 12, scope: !5518)
!5562 = !DILocation(line: 405, column: 12, scope: !5518)
!5563 = !DILocation(line: 405, column: 5, scope: !5518)
!5564 = !DILocation(line: 407, column: 1, scope: !516)
!5565 = !DILocalVariable(name: "fd", arg: 1, scope: !523, file: !445, line: 410, type: !156)
!5566 = !DILocation(line: 410, column: 19, scope: !523)
!5567 = !DILocalVariable(name: "buf", arg: 2, scope: !523, file: !445, line: 410, type: !526)
!5568 = !DILocation(line: 410, column: 35, scope: !523)
!5569 = !DILocalVariable(name: "count", arg: 3, scope: !523, file: !445, line: 410, type: !448)
!5570 = !DILocation(line: 410, column: 47, scope: !523)
!5571 = !DILocalVariable(name: "f", scope: !523, file: !445, line: 412, type: !4890)
!5572 = !DILocation(line: 412, column: 15, scope: !523)
!5573 = !DILocation(line: 414, column: 10, scope: !523)
!5574 = !DILocation(line: 416, column: 18, scope: !523)
!5575 = !DILocation(line: 416, column: 7, scope: !523)
!5576 = !DILocation(line: 416, column: 5, scope: !523)
!5577 = !DILocation(line: 418, column: 8, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !523, file: !445, line: 418, column: 7)
!5579 = !DILocation(line: 418, column: 7, scope: !523)
!5580 = !DILocation(line: 419, column: 5, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5578, file: !445, line: 418, column: 11)
!5582 = !DILocation(line: 419, column: 11, scope: !5581)
!5583 = !DILocation(line: 420, column: 5, scope: !5581)
!5584 = !DILocation(line: 423, column: 16, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !523, file: !445, line: 423, column: 7)
!5586 = !DILocation(line: 423, column: 7, scope: !5585)
!5587 = !DILocation(line: 423, column: 29, scope: !5585)
!5588 = !DILocation(line: 423, column: 42, scope: !5585)
!5589 = !DILocation(line: 423, column: 32, scope: !5585)
!5590 = !DILocation(line: 423, column: 56, scope: !5585)
!5591 = !DILocation(line: 423, column: 53, scope: !5585)
!5592 = !DILocation(line: 423, column: 7, scope: !523)
!5593 = !DILocation(line: 424, column: 26, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5585, file: !445, line: 423, column: 65)
!5595 = !DILocation(line: 425, column: 5, scope: !5594)
!5596 = !DILocation(line: 425, column: 11, scope: !5594)
!5597 = !DILocation(line: 426, column: 5, scope: !5594)
!5598 = !DILocation(line: 429, column: 8, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !523, file: !445, line: 429, column: 7)
!5600 = !DILocation(line: 429, column: 11, scope: !5599)
!5601 = !DILocation(line: 429, column: 7, scope: !523)
!5602 = !DILocalVariable(name: "r", scope: !5603, file: !445, line: 430, type: !156)
!5603 = distinct !DILexicalBlock(scope: !5599, file: !445, line: 429, column: 18)
!5604 = !DILocation(line: 430, column: 9, scope: !5603)
!5605 = !DILocation(line: 432, column: 28, scope: !5603)
!5606 = !DILocation(line: 432, column: 11, scope: !5603)
!5607 = !DILocation(line: 432, column: 9, scope: !5603)
!5608 = !DILocation(line: 433, column: 31, scope: !5603)
!5609 = !DILocation(line: 433, column: 13, scope: !5603)
!5610 = !DILocation(line: 433, column: 11, scope: !5603)
!5611 = !DILocation(line: 437, column: 30, scope: !5603)
!5612 = !DILocation(line: 437, column: 35, scope: !5603)
!5613 = !DILocation(line: 437, column: 5, scope: !5603)
!5614 = !DILocation(line: 438, column: 9, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5603, file: !445, line: 438, column: 9)
!5616 = !DILocation(line: 438, column: 12, scope: !5615)
!5617 = !DILocation(line: 438, column: 15, scope: !5615)
!5618 = !DILocation(line: 438, column: 20, scope: !5615)
!5619 = !DILocation(line: 438, column: 23, scope: !5615)
!5620 = !DILocation(line: 438, column: 26, scope: !5615)
!5621 = !DILocation(line: 438, column: 29, scope: !5615)
!5622 = !DILocation(line: 438, column: 9, scope: !5603)
!5623 = !DILocation(line: 439, column: 31, scope: !5615)
!5624 = !DILocation(line: 439, column: 34, scope: !5615)
!5625 = !DILocation(line: 439, column: 38, scope: !5615)
!5626 = !DILocation(line: 439, column: 43, scope: !5615)
!5627 = !DILocation(line: 439, column: 11, scope: !5615)
!5628 = !DILocation(line: 439, column: 9, scope: !5615)
!5629 = !DILocation(line: 439, column: 7, scope: !5615)
!5630 = !DILocation(line: 440, column: 37, scope: !5615)
!5631 = !DILocation(line: 440, column: 40, scope: !5615)
!5632 = !DILocation(line: 440, column: 44, scope: !5615)
!5633 = !DILocation(line: 440, column: 49, scope: !5615)
!5634 = !DILocation(line: 440, column: 66, scope: !5615)
!5635 = !DILocation(line: 440, column: 69, scope: !5615)
!5636 = !DILocation(line: 440, column: 14, scope: !5615)
!5637 = !DILocation(line: 440, column: 12, scope: !5615)
!5638 = !DILocation(line: 442, column: 9, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5603, file: !445, line: 442, column: 9)
!5640 = !DILocation(line: 442, column: 11, scope: !5639)
!5641 = !DILocation(line: 442, column: 9, scope: !5603)
!5642 = !DILocation(line: 443, column: 7, scope: !5639)
!5643 = !DILocation(line: 445, column: 5, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !5645, file: !445, line: 445, column: 5)
!5645 = distinct !DILexicalBlock(scope: !5603, file: !445, line: 445, column: 5)
!5646 = !DILocation(line: 445, column: 5, scope: !5645)
!5647 = !DILocation(line: 446, column: 9, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5603, file: !445, line: 446, column: 9)
!5649 = !DILocation(line: 446, column: 12, scope: !5648)
!5650 = !DILocation(line: 446, column: 15, scope: !5648)
!5651 = !DILocation(line: 446, column: 20, scope: !5648)
!5652 = !DILocation(line: 446, column: 23, scope: !5648)
!5653 = !DILocation(line: 446, column: 26, scope: !5648)
!5654 = !DILocation(line: 446, column: 29, scope: !5648)
!5655 = !DILocation(line: 446, column: 9, scope: !5603)
!5656 = !DILocation(line: 447, column: 17, scope: !5648)
!5657 = !DILocation(line: 447, column: 7, scope: !5648)
!5658 = !DILocation(line: 447, column: 10, scope: !5648)
!5659 = !DILocation(line: 447, column: 14, scope: !5648)
!5660 = !DILocation(line: 449, column: 12, scope: !5603)
!5661 = !DILocation(line: 449, column: 5, scope: !5603)
!5662 = !DILocalVariable(name: "actual_count", scope: !5663, file: !445, line: 453, type: !448)
!5663 = distinct !DILexicalBlock(scope: !5599, file: !445, line: 451, column: 8)
!5664 = !DILocation(line: 453, column: 12, scope: !5663)
!5665 = !DILocation(line: 454, column: 9, scope: !5666)
!5666 = distinct !DILexicalBlock(scope: !5663, file: !445, line: 454, column: 9)
!5667 = !DILocation(line: 454, column: 12, scope: !5666)
!5668 = !DILocation(line: 454, column: 18, scope: !5666)
!5669 = !DILocation(line: 454, column: 16, scope: !5666)
!5670 = !DILocation(line: 454, column: 27, scope: !5666)
!5671 = !DILocation(line: 454, column: 30, scope: !5666)
!5672 = !DILocation(line: 454, column: 37, scope: !5666)
!5673 = !DILocation(line: 454, column: 24, scope: !5666)
!5674 = !DILocation(line: 454, column: 9, scope: !5663)
!5675 = !DILocation(line: 455, column: 22, scope: !5666)
!5676 = !DILocation(line: 455, column: 20, scope: !5666)
!5677 = !DILocation(line: 455, column: 7, scope: !5666)
!5678 = !DILocation(line: 457, column: 21, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5680, file: !445, line: 457, column: 11)
!5680 = distinct !DILexicalBlock(scope: !5666, file: !445, line: 456, column: 10)
!5681 = !DILocation(line: 457, column: 11, scope: !5679)
!5682 = !DILocation(line: 457, column: 11, scope: !5680)
!5683 = !DILocation(line: 458, column: 2, scope: !5684)
!5684 = distinct !DILexicalBlock(scope: !5685, file: !445, line: 458, column: 2)
!5685 = distinct !DILexicalBlock(scope: !5679, file: !445, line: 458, column: 2)
!5686 = !DILocation(line: 460, column: 6, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5688, file: !445, line: 460, column: 6)
!5688 = distinct !DILexicalBlock(scope: !5679, file: !445, line: 459, column: 12)
!5689 = !DILocation(line: 460, column: 9, scope: !5687)
!5690 = !DILocation(line: 460, column: 25, scope: !5687)
!5691 = !DILocation(line: 460, column: 28, scope: !5687)
!5692 = !DILocation(line: 460, column: 35, scope: !5687)
!5693 = !DILocation(line: 460, column: 15, scope: !5687)
!5694 = !DILocation(line: 460, column: 13, scope: !5687)
!5695 = !DILocation(line: 460, column: 6, scope: !5688)
!5696 = !DILocation(line: 461, column: 19, scope: !5687)
!5697 = !DILocation(line: 461, column: 22, scope: !5687)
!5698 = !DILocation(line: 461, column: 29, scope: !5687)
!5699 = !DILocation(line: 461, column: 36, scope: !5687)
!5700 = !DILocation(line: 461, column: 39, scope: !5687)
!5701 = !DILocation(line: 461, column: 34, scope: !5687)
!5702 = !DILocation(line: 461, column: 17, scope: !5687)
!5703 = !DILocation(line: 461, column: 4, scope: !5687)
!5704 = !DILocation(line: 465, column: 9, scope: !5705)
!5705 = distinct !DILexicalBlock(scope: !5663, file: !445, line: 465, column: 9)
!5706 = !DILocation(line: 465, column: 9, scope: !5663)
!5707 = !DILocation(line: 466, column: 14, scope: !5705)
!5708 = !DILocation(line: 466, column: 17, scope: !5705)
!5709 = !DILocation(line: 466, column: 24, scope: !5705)
!5710 = !DILocation(line: 466, column: 35, scope: !5705)
!5711 = !DILocation(line: 466, column: 38, scope: !5705)
!5712 = !DILocation(line: 466, column: 33, scope: !5705)
!5713 = !DILocation(line: 466, column: 43, scope: !5705)
!5714 = !DILocation(line: 466, column: 48, scope: !5705)
!5715 = !DILocation(line: 466, column: 7, scope: !5705)
!5716 = !DILocation(line: 468, column: 9, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5663, file: !445, line: 468, column: 9)
!5718 = !DILocation(line: 468, column: 18, scope: !5717)
!5719 = !DILocation(line: 468, column: 15, scope: !5717)
!5720 = !DILocation(line: 468, column: 9, scope: !5663)
!5721 = !DILocation(line: 469, column: 7, scope: !5717)
!5722 = !DILocation(line: 471, column: 9, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5663, file: !445, line: 471, column: 9)
!5724 = !DILocation(line: 471, column: 12, scope: !5723)
!5725 = !DILocation(line: 471, column: 30, scope: !5723)
!5726 = !DILocation(line: 471, column: 18, scope: !5723)
!5727 = !DILocation(line: 471, column: 9, scope: !5663)
!5728 = !DILocation(line: 472, column: 33, scope: !5723)
!5729 = !DILocation(line: 472, column: 30, scope: !5723)
!5730 = !DILocation(line: 472, column: 7, scope: !5723)
!5731 = !DILocation(line: 474, column: 15, scope: !5663)
!5732 = !DILocation(line: 474, column: 5, scope: !5663)
!5733 = !DILocation(line: 474, column: 8, scope: !5663)
!5734 = !DILocation(line: 474, column: 12, scope: !5663)
!5735 = !DILocation(line: 475, column: 12, scope: !5663)
!5736 = !DILocation(line: 475, column: 5, scope: !5663)
!5737 = !DILocation(line: 477, column: 1, scope: !523)
!5738 = distinct !DISubprogram(name: "__fd_lseek", scope: !445, file: !445, line: 480, type: !5739, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!5739 = !DISubroutineType(types: !5740)
!5740 = !{!433, !156, !433, !156}
!5741 = !DILocalVariable(name: "fd", arg: 1, scope: !5738, file: !445, line: 480, type: !156)
!5742 = !DILocation(line: 480, column: 24, scope: !5738)
!5743 = !DILocalVariable(name: "offset", arg: 2, scope: !5738, file: !445, line: 480, type: !433)
!5744 = !DILocation(line: 480, column: 36, scope: !5738)
!5745 = !DILocalVariable(name: "whence", arg: 3, scope: !5738, file: !445, line: 480, type: !156)
!5746 = !DILocation(line: 480, column: 48, scope: !5738)
!5747 = !DILocalVariable(name: "new_off", scope: !5738, file: !445, line: 481, type: !433)
!5748 = !DILocation(line: 481, column: 11, scope: !5738)
!5749 = !DILocalVariable(name: "f", scope: !5738, file: !445, line: 482, type: !4890)
!5750 = !DILocation(line: 482, column: 15, scope: !5738)
!5751 = !DILocation(line: 482, column: 30, scope: !5738)
!5752 = !DILocation(line: 482, column: 19, scope: !5738)
!5753 = !DILocation(line: 484, column: 8, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5738, file: !445, line: 484, column: 7)
!5755 = !DILocation(line: 484, column: 7, scope: !5738)
!5756 = !DILocation(line: 485, column: 5, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5754, file: !445, line: 484, column: 11)
!5758 = !DILocation(line: 485, column: 11, scope: !5757)
!5759 = !DILocation(line: 486, column: 5, scope: !5757)
!5760 = !DILocation(line: 489, column: 8, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5738, file: !445, line: 489, column: 7)
!5762 = !DILocation(line: 489, column: 11, scope: !5761)
!5763 = !DILocation(line: 489, column: 7, scope: !5738)
!5764 = !DILocation(line: 496, column: 9, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5766, file: !445, line: 496, column: 9)
!5766 = distinct !DILexicalBlock(scope: !5761, file: !445, line: 489, column: 18)
!5767 = !DILocation(line: 496, column: 16, scope: !5765)
!5768 = !DILocation(line: 496, column: 9, scope: !5766)
!5769 = !DILocation(line: 497, column: 37, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5765, file: !445, line: 496, column: 29)
!5771 = !DILocation(line: 497, column: 40, scope: !5770)
!5772 = !DILocation(line: 497, column: 44, scope: !5770)
!5773 = !DILocation(line: 497, column: 17, scope: !5770)
!5774 = !DILocation(line: 497, column: 15, scope: !5770)
!5775 = !DILocation(line: 498, column: 5, scope: !5770)
!5776 = !DILocation(line: 499, column: 37, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5765, file: !445, line: 498, column: 12)
!5778 = !DILocation(line: 499, column: 40, scope: !5777)
!5779 = !DILocation(line: 499, column: 44, scope: !5777)
!5780 = !DILocation(line: 499, column: 47, scope: !5777)
!5781 = !DILocation(line: 499, column: 17, scope: !5777)
!5782 = !DILocation(line: 499, column: 15, scope: !5777)
!5783 = !DILocation(line: 503, column: 11, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5777, file: !445, line: 503, column: 11)
!5785 = !DILocation(line: 503, column: 19, scope: !5784)
!5786 = !DILocation(line: 503, column: 11, scope: !5777)
!5787 = !DILocation(line: 504, column: 9, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5789, file: !445, line: 504, column: 9)
!5789 = distinct !DILexicalBlock(scope: !5790, file: !445, line: 504, column: 9)
!5790 = distinct !DILexicalBlock(scope: !5784, file: !445, line: 503, column: 26)
!5791 = !DILocation(line: 504, column: 9, scope: !5789)
!5792 = !DILocation(line: 505, column: 39, scope: !5790)
!5793 = !DILocation(line: 505, column: 42, scope: !5790)
!5794 = !DILocation(line: 505, column: 46, scope: !5790)
!5795 = !DILocation(line: 505, column: 54, scope: !5790)
!5796 = !DILocation(line: 505, column: 19, scope: !5790)
!5797 = !DILocation(line: 505, column: 17, scope: !5790)
!5798 = !DILocation(line: 506, column: 7, scope: !5790)
!5799 = !DILocation(line: 509, column: 9, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5766, file: !445, line: 509, column: 9)
!5801 = !DILocation(line: 509, column: 17, scope: !5800)
!5802 = !DILocation(line: 509, column: 9, scope: !5766)
!5803 = !DILocation(line: 510, column: 7, scope: !5800)
!5804 = !DILocation(line: 512, column: 14, scope: !5766)
!5805 = !DILocation(line: 512, column: 5, scope: !5766)
!5806 = !DILocation(line: 512, column: 8, scope: !5766)
!5807 = !DILocation(line: 512, column: 12, scope: !5766)
!5808 = !DILocation(line: 513, column: 12, scope: !5766)
!5809 = !DILocation(line: 513, column: 5, scope: !5766)
!5810 = !DILocation(line: 516, column: 11, scope: !5738)
!5811 = !DILocation(line: 516, column: 3, scope: !5738)
!5812 = !DILocation(line: 517, column: 28, scope: !5813)
!5813 = distinct !DILexicalBlock(scope: !5738, file: !445, line: 516, column: 19)
!5814 = !DILocation(line: 517, column: 26, scope: !5813)
!5815 = !DILocation(line: 517, column: 36, scope: !5813)
!5816 = !DILocation(line: 518, column: 28, scope: !5813)
!5817 = !DILocation(line: 518, column: 31, scope: !5813)
!5818 = !DILocation(line: 518, column: 37, scope: !5813)
!5819 = !DILocation(line: 518, column: 35, scope: !5813)
!5820 = !DILocation(line: 518, column: 26, scope: !5813)
!5821 = !DILocation(line: 518, column: 45, scope: !5813)
!5822 = !DILocation(line: 519, column: 28, scope: !5813)
!5823 = !DILocation(line: 519, column: 31, scope: !5813)
!5824 = !DILocation(line: 519, column: 38, scope: !5813)
!5825 = !DILocation(line: 519, column: 45, scope: !5813)
!5826 = !DILocation(line: 519, column: 43, scope: !5813)
!5827 = !DILocation(line: 519, column: 26, scope: !5813)
!5828 = !DILocation(line: 519, column: 53, scope: !5813)
!5829 = !DILocation(line: 521, column: 5, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5813, file: !445, line: 520, column: 12)
!5831 = !DILocation(line: 521, column: 11, scope: !5830)
!5832 = !DILocation(line: 522, column: 5, scope: !5830)
!5833 = !DILocation(line: 526, column: 7, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5738, file: !445, line: 526, column: 7)
!5835 = !DILocation(line: 526, column: 15, scope: !5834)
!5836 = !DILocation(line: 526, column: 7, scope: !5738)
!5837 = !DILocation(line: 527, column: 5, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !5834, file: !445, line: 526, column: 20)
!5839 = !DILocation(line: 527, column: 11, scope: !5838)
!5840 = !DILocation(line: 528, column: 5, scope: !5838)
!5841 = !DILocation(line: 531, column: 12, scope: !5738)
!5842 = !DILocation(line: 531, column: 3, scope: !5738)
!5843 = !DILocation(line: 531, column: 6, scope: !5738)
!5844 = !DILocation(line: 531, column: 10, scope: !5738)
!5845 = !DILocation(line: 532, column: 10, scope: !5738)
!5846 = !DILocation(line: 532, column: 13, scope: !5738)
!5847 = !DILocation(line: 532, column: 3, scope: !5738)
!5848 = !DILocation(line: 533, column: 1, scope: !5738)
!5849 = distinct !DISubprogram(name: "__fd_stat", scope: !445, file: !445, line: 535, type: !5850, scopeLine: 535, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!5850 = !DISubroutineType(types: !5851)
!5851 = !{!156, !533, !4555}
!5852 = !DILocalVariable(name: "path", arg: 1, scope: !5849, file: !445, line: 535, type: !533)
!5853 = !DILocation(line: 535, column: 27, scope: !5849)
!5854 = !DILocalVariable(name: "buf", arg: 2, scope: !5849, file: !445, line: 535, type: !4555)
!5855 = !DILocation(line: 535, column: 48, scope: !5849)
!5856 = !DILocalVariable(name: "dfile", scope: !5849, file: !445, line: 536, type: !4548)
!5857 = !DILocation(line: 536, column: 20, scope: !5849)
!5858 = !DILocation(line: 536, column: 43, scope: !5849)
!5859 = !DILocation(line: 536, column: 28, scope: !5849)
!5860 = !DILocation(line: 537, column: 7, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5849, file: !445, line: 537, column: 7)
!5862 = !DILocation(line: 537, column: 7, scope: !5849)
!5863 = !DILocation(line: 538, column: 12, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5861, file: !445, line: 537, column: 14)
!5865 = !DILocation(line: 538, column: 5, scope: !5864)
!5866 = !DILocation(line: 538, column: 17, scope: !5864)
!5867 = !DILocation(line: 538, column: 24, scope: !5864)
!5868 = !DILocation(line: 539, column: 5, scope: !5864)
!5869 = !DILocation(line: 544, column: 51, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5849, file: !445, line: 542, column: 3)
!5871 = !DILocation(line: 544, column: 31, scope: !5870)
!5872 = !DILocation(line: 544, column: 58, scope: !5870)
!5873 = !DILocation(line: 544, column: 12, scope: !5870)
!5874 = !DILocation(line: 544, column: 5, scope: !5870)
!5875 = !DILocation(line: 549, column: 1, scope: !5849)
!5876 = distinct !DISubprogram(name: "fstatat", scope: !445, file: !445, line: 551, type: !5877, scopeLine: 551, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!5877 = !DISubroutineType(types: !5878)
!5878 = !{!156, !156, !533, !484, !156}
!5879 = !DILocalVariable(name: "fd", arg: 1, scope: !5876, file: !445, line: 551, type: !156)
!5880 = !DILocation(line: 551, column: 17, scope: !5876)
!5881 = !DILocalVariable(name: "path", arg: 2, scope: !5876, file: !445, line: 551, type: !533)
!5882 = !DILocation(line: 551, column: 33, scope: !5876)
!5883 = !DILocalVariable(name: "buf", arg: 3, scope: !5876, file: !445, line: 551, type: !484)
!5884 = !DILocation(line: 551, column: 52, scope: !5876)
!5885 = !DILocalVariable(name: "flags", arg: 4, scope: !5876, file: !445, line: 551, type: !156)
!5886 = !DILocation(line: 551, column: 61, scope: !5876)
!5887 = !DILocation(line: 552, column: 7, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5876, file: !445, line: 552, column: 7)
!5889 = !DILocation(line: 552, column: 10, scope: !5888)
!5890 = !DILocation(line: 552, column: 7, scope: !5876)
!5891 = !DILocalVariable(name: "f", scope: !5892, file: !445, line: 553, type: !4890)
!5892 = distinct !DILexicalBlock(scope: !5888, file: !445, line: 552, column: 23)
!5893 = !DILocation(line: 553, column: 17, scope: !5892)
!5894 = !DILocation(line: 553, column: 32, scope: !5892)
!5895 = !DILocation(line: 553, column: 21, scope: !5892)
!5896 = !DILocation(line: 555, column: 10, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5892, file: !445, line: 555, column: 9)
!5898 = !DILocation(line: 555, column: 9, scope: !5892)
!5899 = !DILocation(line: 556, column: 7, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5897, file: !445, line: 555, column: 13)
!5901 = !DILocation(line: 556, column: 13, scope: !5900)
!5902 = !DILocation(line: 557, column: 7, scope: !5900)
!5903 = !DILocation(line: 558, column: 16, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5897, file: !445, line: 558, column: 16)
!5905 = !DILocation(line: 558, column: 19, scope: !5904)
!5906 = !DILocation(line: 558, column: 16, scope: !5897)
!5907 = !DILocation(line: 559, column: 7, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !5904, file: !445, line: 558, column: 26)
!5909 = !DILocation(line: 560, column: 7, scope: !5908)
!5910 = !DILocation(line: 560, column: 13, scope: !5908)
!5911 = !DILocation(line: 561, column: 7, scope: !5908)
!5912 = !DILocation(line: 563, column: 10, scope: !5892)
!5913 = !DILocation(line: 563, column: 13, scope: !5892)
!5914 = !DILocation(line: 563, column: 8, scope: !5892)
!5915 = !DILocation(line: 564, column: 3, scope: !5892)
!5916 = !DILocalVariable(name: "dfile", scope: !5876, file: !445, line: 565, type: !4548)
!5917 = !DILocation(line: 565, column: 20, scope: !5876)
!5918 = !DILocation(line: 565, column: 43, scope: !5876)
!5919 = !DILocation(line: 565, column: 28, scope: !5876)
!5920 = !DILocation(line: 566, column: 7, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5876, file: !445, line: 566, column: 7)
!5922 = !DILocation(line: 566, column: 7, scope: !5876)
!5923 = !DILocation(line: 567, column: 12, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5921, file: !445, line: 566, column: 14)
!5925 = !DILocation(line: 567, column: 5, scope: !5924)
!5926 = !DILocation(line: 567, column: 17, scope: !5924)
!5927 = !DILocation(line: 567, column: 24, scope: !5924)
!5928 = !DILocation(line: 568, column: 5, scope: !5924)
!5929 = !DILocation(line: 574, column: 3, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5931, file: !445, line: 574, column: 3)
!5931 = distinct !DILexicalBlock(scope: !5876, file: !445, line: 574, column: 3)
!5932 = !DILocation(line: 574, column: 3, scope: !5931)
!5933 = !DILocation(line: 579, column: 41, scope: !5876)
!5934 = !DILocation(line: 579, column: 35, scope: !5876)
!5935 = !DILocation(line: 579, column: 45, scope: !5876)
!5936 = !DILocation(line: 579, column: 56, scope: !5876)
!5937 = !DILocation(line: 579, column: 67, scope: !5876)
!5938 = !DILocation(line: 579, column: 61, scope: !5876)
!5939 = !DILocation(line: 579, column: 10, scope: !5876)
!5940 = !DILocation(line: 579, column: 3, scope: !5876)
!5941 = !DILocation(line: 584, column: 1, scope: !5876)
!5942 = distinct !DISubprogram(name: "__fd_lstat", scope: !445, file: !445, line: 586, type: !5850, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!5943 = !DILocalVariable(name: "path", arg: 1, scope: !5942, file: !445, line: 586, type: !533)
!5944 = !DILocation(line: 586, column: 28, scope: !5942)
!5945 = !DILocalVariable(name: "buf", arg: 2, scope: !5942, file: !445, line: 586, type: !4555)
!5946 = !DILocation(line: 586, column: 49, scope: !5942)
!5947 = !DILocalVariable(name: "dfile", scope: !5942, file: !445, line: 587, type: !4548)
!5948 = !DILocation(line: 587, column: 20, scope: !5942)
!5949 = !DILocation(line: 587, column: 43, scope: !5942)
!5950 = !DILocation(line: 587, column: 28, scope: !5942)
!5951 = !DILocation(line: 588, column: 7, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5942, file: !445, line: 588, column: 7)
!5953 = !DILocation(line: 588, column: 7, scope: !5942)
!5954 = !DILocation(line: 589, column: 12, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5952, file: !445, line: 588, column: 14)
!5956 = !DILocation(line: 589, column: 5, scope: !5955)
!5957 = !DILocation(line: 589, column: 17, scope: !5955)
!5958 = !DILocation(line: 589, column: 24, scope: !5955)
!5959 = !DILocation(line: 590, column: 5, scope: !5955)
!5960 = !DILocation(line: 595, column: 52, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5942, file: !445, line: 593, column: 3)
!5962 = !DILocation(line: 595, column: 32, scope: !5961)
!5963 = !DILocation(line: 595, column: 59, scope: !5961)
!5964 = !DILocation(line: 595, column: 12, scope: !5961)
!5965 = !DILocation(line: 595, column: 5, scope: !5961)
!5966 = !DILocation(line: 600, column: 1, scope: !5942)
!5967 = distinct !DISubprogram(name: "chdir", scope: !445, file: !445, line: 602, type: !5968, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!5968 = !DISubroutineType(types: !5969)
!5969 = !{!156, !533}
!5970 = !DILocalVariable(name: "path", arg: 1, scope: !5967, file: !445, line: 602, type: !533)
!5971 = !DILocation(line: 602, column: 23, scope: !5967)
!5972 = !DILocalVariable(name: "dfile", scope: !5967, file: !445, line: 603, type: !4548)
!5973 = !DILocation(line: 603, column: 20, scope: !5967)
!5974 = !DILocation(line: 603, column: 43, scope: !5967)
!5975 = !DILocation(line: 603, column: 28, scope: !5967)
!5976 = !DILocation(line: 605, column: 7, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5967, file: !445, line: 605, column: 7)
!5978 = !DILocation(line: 605, column: 7, scope: !5967)
!5979 = !DILocation(line: 607, column: 5, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5977, file: !445, line: 605, column: 14)
!5981 = !DILocation(line: 608, column: 5, scope: !5980)
!5982 = !DILocation(line: 608, column: 11, scope: !5980)
!5983 = !DILocation(line: 609, column: 5, scope: !5980)
!5984 = !DILocation(line: 612, column: 50, scope: !5967)
!5985 = !DILocation(line: 612, column: 30, scope: !5967)
!5986 = !DILocation(line: 612, column: 10, scope: !5967)
!5987 = !DILocation(line: 612, column: 3, scope: !5967)
!5988 = !DILocation(line: 613, column: 1, scope: !5967)
!5989 = distinct !DISubprogram(name: "fchdir", scope: !445, file: !445, line: 615, type: !512, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!5990 = !DILocalVariable(name: "fd", arg: 1, scope: !5989, file: !445, line: 615, type: !156)
!5991 = !DILocation(line: 615, column: 16, scope: !5989)
!5992 = !DILocalVariable(name: "f", scope: !5989, file: !445, line: 616, type: !4890)
!5993 = !DILocation(line: 616, column: 15, scope: !5989)
!5994 = !DILocation(line: 616, column: 30, scope: !5989)
!5995 = !DILocation(line: 616, column: 19, scope: !5989)
!5996 = !DILocation(line: 618, column: 8, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5989, file: !445, line: 618, column: 7)
!5998 = !DILocation(line: 618, column: 7, scope: !5989)
!5999 = !DILocation(line: 619, column: 5, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5997, file: !445, line: 618, column: 11)
!6001 = !DILocation(line: 619, column: 11, scope: !6000)
!6002 = !DILocation(line: 620, column: 5, scope: !6000)
!6003 = !DILocation(line: 623, column: 7, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !5989, file: !445, line: 623, column: 7)
!6005 = !DILocation(line: 623, column: 10, scope: !6004)
!6006 = !DILocation(line: 623, column: 7, scope: !5989)
!6007 = !DILocation(line: 624, column: 5, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !6004, file: !445, line: 623, column: 17)
!6009 = !DILocation(line: 625, column: 5, scope: !6008)
!6010 = !DILocation(line: 625, column: 11, scope: !6008)
!6011 = !DILocation(line: 626, column: 5, scope: !6008)
!6012 = !DILocation(line: 629, column: 31, scope: !5989)
!6013 = !DILocation(line: 629, column: 34, scope: !5989)
!6014 = !DILocation(line: 629, column: 10, scope: !5989)
!6015 = !DILocation(line: 629, column: 3, scope: !5989)
!6016 = !DILocation(line: 630, column: 1, scope: !5989)
!6017 = !DILocalVariable(name: "path", arg: 1, scope: !530, file: !445, line: 646, type: !533)
!6018 = !DILocation(line: 646, column: 23, scope: !530)
!6019 = !DILocalVariable(name: "mode", arg: 2, scope: !530, file: !445, line: 646, type: !440)
!6020 = !DILocation(line: 646, column: 36, scope: !530)
!6021 = !DILocalVariable(name: "dfile", scope: !530, file: !445, line: 649, type: !4548)
!6022 = !DILocation(line: 649, column: 20, scope: !530)
!6023 = !DILocation(line: 649, column: 43, scope: !530)
!6024 = !DILocation(line: 649, column: 28, scope: !530)
!6025 = !DILocation(line: 651, column: 10, scope: !530)
!6026 = !DILocation(line: 652, column: 16, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !530, file: !445, line: 652, column: 7)
!6028 = !DILocation(line: 652, column: 7, scope: !6027)
!6029 = !DILocation(line: 652, column: 29, scope: !6027)
!6030 = !DILocation(line: 652, column: 42, scope: !6027)
!6031 = !DILocation(line: 652, column: 32, scope: !6027)
!6032 = !DILocation(line: 652, column: 56, scope: !6027)
!6033 = !DILocation(line: 652, column: 53, scope: !6027)
!6034 = !DILocation(line: 652, column: 7, scope: !530)
!6035 = !DILocation(line: 653, column: 26, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6027, file: !445, line: 652, column: 65)
!6037 = !DILocation(line: 654, column: 5, scope: !6036)
!6038 = !DILocation(line: 654, column: 11, scope: !6036)
!6039 = !DILocation(line: 655, column: 5, scope: !6036)
!6040 = !DILocation(line: 658, column: 7, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !530, file: !445, line: 658, column: 7)
!6042 = !DILocation(line: 658, column: 7, scope: !530)
!6043 = !DILocation(line: 659, column: 23, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6041, file: !445, line: 658, column: 14)
!6045 = !DILocation(line: 659, column: 30, scope: !6044)
!6046 = !DILocation(line: 659, column: 12, scope: !6044)
!6047 = !DILocation(line: 659, column: 5, scope: !6044)
!6048 = !DILocation(line: 662, column: 50, scope: !530)
!6049 = !DILocation(line: 662, column: 30, scope: !530)
!6050 = !DILocation(line: 662, column: 57, scope: !530)
!6051 = !DILocation(line: 662, column: 10, scope: !530)
!6052 = !DILocation(line: 662, column: 3, scope: !530)
!6053 = !DILocation(line: 663, column: 1, scope: !530)
!6054 = distinct !DISubprogram(name: "__df_chmod", scope: !445, file: !445, line: 633, type: !6055, scopeLine: 633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !450, retainedNodes: !157)
!6055 = !DISubroutineType(types: !6056)
!6056 = !{!156, !4548, !440}
!6057 = !DILocalVariable(name: "df", arg: 1, scope: !6054, file: !445, line: 633, type: !4548)
!6058 = !DILocation(line: 633, column: 40, scope: !6054)
!6059 = !DILocalVariable(name: "mode", arg: 2, scope: !6054, file: !445, line: 633, type: !440)
!6060 = !DILocation(line: 633, column: 51, scope: !6054)
!6061 = !DILocation(line: 634, column: 7, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6054, file: !445, line: 634, column: 7)
!6063 = !DILocation(line: 634, column: 20, scope: !6062)
!6064 = !DILocation(line: 634, column: 24, scope: !6062)
!6065 = !DILocation(line: 634, column: 30, scope: !6062)
!6066 = !DILocation(line: 634, column: 17, scope: !6062)
!6067 = !DILocation(line: 634, column: 7, scope: !6054)
!6068 = !DILocation(line: 635, column: 9, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6070, file: !445, line: 635, column: 9)
!6070 = distinct !DILexicalBlock(scope: !6062, file: !445, line: 634, column: 38)
!6071 = !DILocation(line: 635, column: 21, scope: !6069)
!6072 = !DILocation(line: 635, column: 25, scope: !6069)
!6073 = !DILocation(line: 635, column: 31, scope: !6069)
!6074 = !DILocation(line: 635, column: 18, scope: !6069)
!6075 = !DILocation(line: 635, column: 9, scope: !6070)
!6076 = !DILocation(line: 636, column: 12, scope: !6069)
!6077 = !DILocation(line: 636, column: 7, scope: !6069)
!6078 = !DILocation(line: 637, column: 27, scope: !6070)
!6079 = !DILocation(line: 637, column: 31, scope: !6070)
!6080 = !DILocation(line: 637, column: 37, scope: !6070)
!6081 = !DILocation(line: 637, column: 45, scope: !6070)
!6082 = !DILocation(line: 638, column: 27, scope: !6070)
!6083 = !DILocation(line: 638, column: 32, scope: !6070)
!6084 = !DILocation(line: 637, column: 55, scope: !6070)
!6085 = !DILocation(line: 637, column: 5, scope: !6070)
!6086 = !DILocation(line: 637, column: 9, scope: !6070)
!6087 = !DILocation(line: 637, column: 15, scope: !6070)
!6088 = !DILocation(line: 637, column: 23, scope: !6070)
!6089 = !DILocation(line: 639, column: 5, scope: !6070)
!6090 = !DILocation(line: 641, column: 5, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6062, file: !445, line: 640, column: 10)
!6092 = !DILocation(line: 641, column: 11, scope: !6091)
!6093 = !DILocation(line: 642, column: 5, scope: !6091)
!6094 = !DILocation(line: 644, column: 1, scope: !6054)
!6095 = !DILocalVariable(name: "fd", arg: 1, scope: !537, file: !445, line: 665, type: !156)
!6096 = !DILocation(line: 665, column: 16, scope: !537)
!6097 = !DILocalVariable(name: "mode", arg: 2, scope: !537, file: !445, line: 665, type: !440)
!6098 = !DILocation(line: 665, column: 27, scope: !537)
!6099 = !DILocalVariable(name: "f", scope: !537, file: !445, line: 668, type: !4890)
!6100 = !DILocation(line: 668, column: 15, scope: !537)
!6101 = !DILocation(line: 668, column: 30, scope: !537)
!6102 = !DILocation(line: 668, column: 19, scope: !537)
!6103 = !DILocation(line: 670, column: 8, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !537, file: !445, line: 670, column: 7)
!6105 = !DILocation(line: 670, column: 7, scope: !537)
!6106 = !DILocation(line: 671, column: 5, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6104, file: !445, line: 670, column: 11)
!6108 = !DILocation(line: 671, column: 11, scope: !6107)
!6109 = !DILocation(line: 672, column: 5, scope: !6107)
!6110 = !DILocation(line: 675, column: 10, scope: !537)
!6111 = !DILocation(line: 676, column: 16, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !537, file: !445, line: 676, column: 7)
!6113 = !DILocation(line: 676, column: 7, scope: !6112)
!6114 = !DILocation(line: 676, column: 29, scope: !6112)
!6115 = !DILocation(line: 676, column: 42, scope: !6112)
!6116 = !DILocation(line: 676, column: 32, scope: !6112)
!6117 = !DILocation(line: 676, column: 57, scope: !6112)
!6118 = !DILocation(line: 676, column: 54, scope: !6112)
!6119 = !DILocation(line: 676, column: 7, scope: !537)
!6120 = !DILocation(line: 677, column: 26, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6112, file: !445, line: 676, column: 66)
!6122 = !DILocation(line: 678, column: 5, scope: !6121)
!6123 = !DILocation(line: 678, column: 11, scope: !6121)
!6124 = !DILocation(line: 679, column: 5, scope: !6121)
!6125 = !DILocation(line: 682, column: 7, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !537, file: !445, line: 682, column: 7)
!6127 = !DILocation(line: 682, column: 10, scope: !6126)
!6128 = !DILocation(line: 682, column: 7, scope: !537)
!6129 = !DILocation(line: 683, column: 23, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6126, file: !445, line: 682, column: 17)
!6131 = !DILocation(line: 683, column: 26, scope: !6130)
!6132 = !DILocation(line: 683, column: 33, scope: !6130)
!6133 = !DILocation(line: 683, column: 12, scope: !6130)
!6134 = !DILocation(line: 683, column: 5, scope: !6130)
!6135 = !DILocation(line: 686, column: 31, scope: !537)
!6136 = !DILocation(line: 686, column: 34, scope: !537)
!6137 = !DILocation(line: 686, column: 38, scope: !537)
!6138 = !DILocation(line: 686, column: 10, scope: !537)
!6139 = !DILocation(line: 686, column: 3, scope: !537)
!6140 = !DILocation(line: 687, column: 1, scope: !537)
!6141 = distinct !DISubprogram(name: "chown", scope: !445, file: !445, line: 695, type: !6142, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!6142 = !DISubroutineType(types: !6143)
!6143 = !{!156, !533, !6144, !6145}
!6144 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !434, line: 79, baseType: !384)
!6145 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !434, line: 64, baseType: !386)
!6146 = !DILocalVariable(name: "path", arg: 1, scope: !6141, file: !445, line: 695, type: !533)
!6147 = !DILocation(line: 695, column: 23, scope: !6141)
!6148 = !DILocalVariable(name: "owner", arg: 2, scope: !6141, file: !445, line: 695, type: !6144)
!6149 = !DILocation(line: 695, column: 35, scope: !6141)
!6150 = !DILocalVariable(name: "group", arg: 3, scope: !6141, file: !445, line: 695, type: !6145)
!6151 = !DILocation(line: 695, column: 48, scope: !6141)
!6152 = !DILocalVariable(name: "df", scope: !6141, file: !445, line: 696, type: !4548)
!6153 = !DILocation(line: 696, column: 20, scope: !6141)
!6154 = !DILocation(line: 696, column: 40, scope: !6141)
!6155 = !DILocation(line: 696, column: 25, scope: !6141)
!6156 = !DILocation(line: 698, column: 7, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6141, file: !445, line: 698, column: 7)
!6158 = !DILocation(line: 698, column: 7, scope: !6141)
!6159 = !DILocation(line: 699, column: 23, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !6157, file: !445, line: 698, column: 11)
!6161 = !DILocation(line: 699, column: 27, scope: !6160)
!6162 = !DILocation(line: 699, column: 34, scope: !6160)
!6163 = !DILocation(line: 699, column: 12, scope: !6160)
!6164 = !DILocation(line: 699, column: 5, scope: !6160)
!6165 = !DILocation(line: 702, column: 50, scope: !6141)
!6166 = !DILocation(line: 702, column: 30, scope: !6141)
!6167 = !DILocation(line: 702, column: 57, scope: !6141)
!6168 = !DILocation(line: 702, column: 64, scope: !6141)
!6169 = !DILocation(line: 702, column: 10, scope: !6141)
!6170 = !DILocation(line: 702, column: 3, scope: !6141)
!6171 = !DILocation(line: 703, column: 1, scope: !6141)
!6172 = distinct !DISubprogram(name: "__df_chown", scope: !445, file: !445, line: 689, type: !6173, scopeLine: 689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !450, retainedNodes: !157)
!6173 = !DISubroutineType(types: !6174)
!6174 = !{!156, !4548, !6144, !6145}
!6175 = !DILocalVariable(name: "df", arg: 1, scope: !6172, file: !445, line: 689, type: !4548)
!6176 = !DILocation(line: 689, column: 40, scope: !6172)
!6177 = !DILocalVariable(name: "owner", arg: 2, scope: !6172, file: !445, line: 689, type: !6144)
!6178 = !DILocation(line: 689, column: 50, scope: !6172)
!6179 = !DILocalVariable(name: "group", arg: 3, scope: !6172, file: !445, line: 689, type: !6145)
!6180 = !DILocation(line: 689, column: 63, scope: !6172)
!6181 = !DILocation(line: 690, column: 3, scope: !6172)
!6182 = !DILocation(line: 691, column: 3, scope: !6172)
!6183 = !DILocation(line: 691, column: 9, scope: !6172)
!6184 = !DILocation(line: 692, column: 3, scope: !6172)
!6185 = distinct !DISubprogram(name: "fchown", scope: !445, file: !445, line: 705, type: !6186, scopeLine: 705, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!6186 = !DISubroutineType(types: !6187)
!6187 = !{!156, !156, !6144, !6145}
!6188 = !DILocalVariable(name: "fd", arg: 1, scope: !6185, file: !445, line: 705, type: !156)
!6189 = !DILocation(line: 705, column: 16, scope: !6185)
!6190 = !DILocalVariable(name: "owner", arg: 2, scope: !6185, file: !445, line: 705, type: !6144)
!6191 = !DILocation(line: 705, column: 26, scope: !6185)
!6192 = !DILocalVariable(name: "group", arg: 3, scope: !6185, file: !445, line: 705, type: !6145)
!6193 = !DILocation(line: 705, column: 39, scope: !6185)
!6194 = !DILocalVariable(name: "f", scope: !6185, file: !445, line: 706, type: !4890)
!6195 = !DILocation(line: 706, column: 15, scope: !6185)
!6196 = !DILocation(line: 706, column: 30, scope: !6185)
!6197 = !DILocation(line: 706, column: 19, scope: !6185)
!6198 = !DILocation(line: 708, column: 8, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6185, file: !445, line: 708, column: 7)
!6200 = !DILocation(line: 708, column: 7, scope: !6185)
!6201 = !DILocation(line: 709, column: 5, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6199, file: !445, line: 708, column: 11)
!6203 = !DILocation(line: 709, column: 11, scope: !6202)
!6204 = !DILocation(line: 710, column: 5, scope: !6202)
!6205 = !DILocation(line: 713, column: 7, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6185, file: !445, line: 713, column: 7)
!6207 = !DILocation(line: 713, column: 10, scope: !6206)
!6208 = !DILocation(line: 713, column: 7, scope: !6185)
!6209 = !DILocation(line: 714, column: 23, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6206, file: !445, line: 713, column: 17)
!6211 = !DILocation(line: 714, column: 26, scope: !6210)
!6212 = !DILocation(line: 714, column: 33, scope: !6210)
!6213 = !DILocation(line: 714, column: 40, scope: !6210)
!6214 = !DILocation(line: 714, column: 12, scope: !6210)
!6215 = !DILocation(line: 714, column: 5, scope: !6210)
!6216 = !DILocation(line: 717, column: 31, scope: !6185)
!6217 = !DILocation(line: 717, column: 35, scope: !6185)
!6218 = !DILocation(line: 717, column: 42, scope: !6185)
!6219 = !DILocation(line: 717, column: 10, scope: !6185)
!6220 = !DILocation(line: 717, column: 3, scope: !6185)
!6221 = !DILocation(line: 718, column: 1, scope: !6185)
!6222 = distinct !DISubprogram(name: "lchown", scope: !445, file: !445, line: 720, type: !6142, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!6223 = !DILocalVariable(name: "path", arg: 1, scope: !6222, file: !445, line: 720, type: !533)
!6224 = !DILocation(line: 720, column: 24, scope: !6222)
!6225 = !DILocalVariable(name: "owner", arg: 2, scope: !6222, file: !445, line: 720, type: !6144)
!6226 = !DILocation(line: 720, column: 36, scope: !6222)
!6227 = !DILocalVariable(name: "group", arg: 3, scope: !6222, file: !445, line: 720, type: !6145)
!6228 = !DILocation(line: 720, column: 49, scope: !6222)
!6229 = !DILocalVariable(name: "df", scope: !6222, file: !445, line: 722, type: !4548)
!6230 = !DILocation(line: 722, column: 20, scope: !6222)
!6231 = !DILocation(line: 722, column: 40, scope: !6222)
!6232 = !DILocation(line: 722, column: 25, scope: !6222)
!6233 = !DILocation(line: 724, column: 7, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6222, file: !445, line: 724, column: 7)
!6235 = !DILocation(line: 724, column: 7, scope: !6222)
!6236 = !DILocation(line: 725, column: 23, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6234, file: !445, line: 724, column: 11)
!6238 = !DILocation(line: 725, column: 27, scope: !6237)
!6239 = !DILocation(line: 725, column: 34, scope: !6237)
!6240 = !DILocation(line: 725, column: 12, scope: !6237)
!6241 = !DILocation(line: 725, column: 5, scope: !6237)
!6242 = !DILocation(line: 728, column: 50, scope: !6222)
!6243 = !DILocation(line: 728, column: 30, scope: !6222)
!6244 = !DILocation(line: 728, column: 57, scope: !6222)
!6245 = !DILocation(line: 728, column: 64, scope: !6222)
!6246 = !DILocation(line: 728, column: 10, scope: !6222)
!6247 = !DILocation(line: 728, column: 3, scope: !6222)
!6248 = !DILocation(line: 729, column: 1, scope: !6222)
!6249 = distinct !DISubprogram(name: "__fd_fstat", scope: !445, file: !445, line: 731, type: !5051, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!6250 = !DILocalVariable(name: "fd", arg: 1, scope: !6249, file: !445, line: 731, type: !156)
!6251 = !DILocation(line: 731, column: 20, scope: !6249)
!6252 = !DILocalVariable(name: "buf", arg: 2, scope: !6249, file: !445, line: 731, type: !4555)
!6253 = !DILocation(line: 731, column: 39, scope: !6249)
!6254 = !DILocalVariable(name: "f", scope: !6249, file: !445, line: 732, type: !4890)
!6255 = !DILocation(line: 732, column: 15, scope: !6249)
!6256 = !DILocation(line: 732, column: 30, scope: !6249)
!6257 = !DILocation(line: 732, column: 19, scope: !6249)
!6258 = !DILocation(line: 734, column: 8, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6249, file: !445, line: 734, column: 7)
!6260 = !DILocation(line: 734, column: 7, scope: !6249)
!6261 = !DILocation(line: 735, column: 5, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6259, file: !445, line: 734, column: 11)
!6263 = !DILocation(line: 735, column: 11, scope: !6262)
!6264 = !DILocation(line: 736, column: 5, scope: !6262)
!6265 = !DILocation(line: 739, column: 8, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6249, file: !445, line: 739, column: 7)
!6267 = !DILocation(line: 739, column: 11, scope: !6266)
!6268 = !DILocation(line: 739, column: 7, scope: !6249)
!6269 = !DILocation(line: 741, column: 32, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6266, file: !445, line: 739, column: 18)
!6271 = !DILocation(line: 741, column: 35, scope: !6270)
!6272 = !DILocation(line: 741, column: 39, scope: !6270)
!6273 = !DILocation(line: 741, column: 12, scope: !6270)
!6274 = !DILocation(line: 741, column: 5, scope: !6270)
!6275 = !DILocation(line: 747, column: 10, scope: !6249)
!6276 = !DILocation(line: 747, column: 3, scope: !6249)
!6277 = !DILocation(line: 747, column: 15, scope: !6249)
!6278 = !DILocation(line: 747, column: 18, scope: !6249)
!6279 = !DILocation(line: 747, column: 25, scope: !6249)
!6280 = !DILocation(line: 748, column: 3, scope: !6249)
!6281 = !DILocation(line: 749, column: 1, scope: !6249)
!6282 = !DILocalVariable(name: "fd", arg: 1, scope: !542, file: !445, line: 751, type: !156)
!6283 = !DILocation(line: 751, column: 24, scope: !542)
!6284 = !DILocalVariable(name: "length", arg: 2, scope: !542, file: !445, line: 751, type: !433)
!6285 = !DILocation(line: 751, column: 36, scope: !542)
!6286 = !DILocalVariable(name: "f", scope: !542, file: !445, line: 753, type: !4890)
!6287 = !DILocation(line: 753, column: 15, scope: !542)
!6288 = !DILocation(line: 753, column: 30, scope: !542)
!6289 = !DILocation(line: 753, column: 19, scope: !542)
!6290 = !DILocation(line: 755, column: 10, scope: !542)
!6291 = !DILocation(line: 757, column: 8, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !542, file: !445, line: 757, column: 7)
!6293 = !DILocation(line: 757, column: 7, scope: !542)
!6294 = !DILocation(line: 758, column: 5, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6292, file: !445, line: 757, column: 11)
!6296 = !DILocation(line: 758, column: 11, scope: !6295)
!6297 = !DILocation(line: 759, column: 5, scope: !6295)
!6298 = !DILocation(line: 762, column: 16, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !542, file: !445, line: 762, column: 7)
!6300 = !DILocation(line: 762, column: 7, scope: !6299)
!6301 = !DILocation(line: 762, column: 29, scope: !6299)
!6302 = !DILocation(line: 762, column: 42, scope: !6299)
!6303 = !DILocation(line: 762, column: 32, scope: !6299)
!6304 = !DILocation(line: 762, column: 60, scope: !6299)
!6305 = !DILocation(line: 762, column: 57, scope: !6299)
!6306 = !DILocation(line: 762, column: 7, scope: !542)
!6307 = !DILocation(line: 763, column: 26, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6299, file: !445, line: 762, column: 69)
!6309 = !DILocation(line: 764, column: 5, scope: !6308)
!6310 = !DILocation(line: 764, column: 11, scope: !6308)
!6311 = !DILocation(line: 765, column: 5, scope: !6308)
!6312 = !DILocation(line: 768, column: 7, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !542, file: !445, line: 768, column: 7)
!6314 = !DILocation(line: 768, column: 10, scope: !6313)
!6315 = !DILocation(line: 768, column: 7, scope: !542)
!6316 = !DILocation(line: 769, column: 5, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6313, file: !445, line: 768, column: 17)
!6318 = !DILocation(line: 770, column: 5, scope: !6317)
!6319 = !DILocation(line: 770, column: 11, scope: !6317)
!6320 = !DILocation(line: 771, column: 5, scope: !6317)
!6321 = !DILocation(line: 774, column: 34, scope: !542)
!6322 = !DILocation(line: 774, column: 37, scope: !542)
!6323 = !DILocation(line: 774, column: 41, scope: !542)
!6324 = !DILocation(line: 774, column: 10, scope: !542)
!6325 = !DILocation(line: 774, column: 3, scope: !542)
!6326 = !DILocation(line: 778, column: 1, scope: !542)
!6327 = distinct !DISubprogram(name: "__fd_getdents", scope: !445, file: !445, line: 780, type: !6328, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!6328 = !DISubroutineType(types: !6329)
!6329 = !{!156, !7, !472, !7}
!6330 = !DILocalVariable(name: "fd", arg: 1, scope: !6327, file: !445, line: 780, type: !7)
!6331 = !DILocation(line: 780, column: 32, scope: !6327)
!6332 = !DILocalVariable(name: "dirp", arg: 2, scope: !6327, file: !445, line: 780, type: !472)
!6333 = !DILocation(line: 780, column: 53, scope: !6327)
!6334 = !DILocalVariable(name: "count", arg: 3, scope: !6327, file: !445, line: 780, type: !7)
!6335 = !DILocation(line: 780, column: 72, scope: !6327)
!6336 = !DILocalVariable(name: "f", scope: !6327, file: !445, line: 781, type: !4890)
!6337 = !DILocation(line: 781, column: 15, scope: !6327)
!6338 = !DILocation(line: 781, column: 30, scope: !6327)
!6339 = !DILocation(line: 781, column: 19, scope: !6327)
!6340 = !DILocation(line: 783, column: 8, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6327, file: !445, line: 783, column: 7)
!6342 = !DILocation(line: 783, column: 7, scope: !6327)
!6343 = !DILocation(line: 784, column: 5, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6341, file: !445, line: 783, column: 11)
!6345 = !DILocation(line: 784, column: 11, scope: !6344)
!6346 = !DILocation(line: 785, column: 5, scope: !6344)
!6347 = !DILocation(line: 788, column: 7, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6327, file: !445, line: 788, column: 7)
!6349 = !DILocation(line: 788, column: 10, scope: !6348)
!6350 = !DILocation(line: 788, column: 7, scope: !6327)
!6351 = !DILocation(line: 789, column: 5, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6348, file: !445, line: 788, column: 17)
!6353 = !DILocation(line: 790, column: 5, scope: !6352)
!6354 = !DILocation(line: 790, column: 11, scope: !6352)
!6355 = !DILocation(line: 791, column: 5, scope: !6352)
!6356 = !DILocation(line: 793, column: 25, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6358, file: !445, line: 793, column: 9)
!6358 = distinct !DILexicalBlock(scope: !6348, file: !445, line: 792, column: 10)
!6359 = !DILocation(line: 793, column: 28, scope: !6357)
!6360 = !DILocation(line: 793, column: 32, scope: !6357)
!6361 = !DILocation(line: 793, column: 9, scope: !6358)
!6362 = !DILocalVariable(name: "i", scope: !6363, file: !445, line: 795, type: !433)
!6363 = distinct !DILexicalBlock(scope: !6357, file: !445, line: 793, column: 41)
!6364 = !DILocation(line: 795, column: 15, scope: !6363)
!6365 = !DILocalVariable(name: "pad", scope: !6363, file: !445, line: 795, type: !433)
!6366 = !DILocation(line: 795, column: 18, scope: !6363)
!6367 = !DILocalVariable(name: "bytes", scope: !6363, file: !445, line: 795, type: !433)
!6368 = !DILocation(line: 795, column: 23, scope: !6363)
!6369 = !DILocation(line: 798, column: 11, scope: !6363)
!6370 = !DILocation(line: 798, column: 14, scope: !6363)
!6371 = !DILocation(line: 798, column: 18, scope: !6363)
!6372 = !DILocation(line: 798, column: 9, scope: !6363)
!6373 = !DILocation(line: 799, column: 23, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6363, file: !445, line: 799, column: 11)
!6375 = !DILocation(line: 799, column: 25, scope: !6374)
!6376 = !DILocation(line: 799, column: 45, scope: !6374)
!6377 = !DILocation(line: 799, column: 48, scope: !6374)
!6378 = !DILocation(line: 799, column: 42, scope: !6374)
!6379 = !DILocation(line: 799, column: 53, scope: !6374)
!6380 = !DILocation(line: 800, column: 11, scope: !6374)
!6381 = !DILocation(line: 800, column: 24, scope: !6374)
!6382 = !DILocation(line: 800, column: 15, scope: !6374)
!6383 = !DILocation(line: 800, column: 13, scope: !6374)
!6384 = !DILocation(line: 799, column: 11, scope: !6363)
!6385 = !DILocation(line: 801, column: 9, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6374, file: !445, line: 800, column: 37)
!6387 = !DILocation(line: 801, column: 15, scope: !6386)
!6388 = !DILocation(line: 802, column: 9, scope: !6386)
!6389 = !DILocation(line: 804, column: 14, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6391, file: !445, line: 804, column: 7)
!6391 = distinct !DILexicalBlock(scope: !6363, file: !445, line: 804, column: 7)
!6392 = !DILocation(line: 804, column: 25, scope: !6390)
!6393 = !DILocation(line: 804, column: 16, scope: !6390)
!6394 = !DILocation(line: 804, column: 15, scope: !6390)
!6395 = !DILocation(line: 804, column: 7, scope: !6391)
!6396 = !DILocalVariable(name: "df", scope: !6397, file: !445, line: 805, type: !4548)
!6397 = distinct !DILexicalBlock(scope: !6390, file: !445, line: 804, column: 43)
!6398 = !DILocation(line: 805, column: 26, scope: !6397)
!6399 = !DILocation(line: 805, column: 41, scope: !6397)
!6400 = !DILocation(line: 805, column: 51, scope: !6397)
!6401 = !DILocation(line: 805, column: 32, scope: !6397)
!6402 = !DILocation(line: 806, column: 23, scope: !6397)
!6403 = !DILocation(line: 806, column: 27, scope: !6397)
!6404 = !DILocation(line: 806, column: 33, scope: !6397)
!6405 = !DILocation(line: 806, column: 9, scope: !6397)
!6406 = !DILocation(line: 806, column: 15, scope: !6397)
!6407 = !DILocation(line: 806, column: 21, scope: !6397)
!6408 = !DILocation(line: 807, column: 9, scope: !6397)
!6409 = !DILocation(line: 807, column: 15, scope: !6397)
!6410 = !DILocation(line: 807, column: 24, scope: !6397)
!6411 = !DILocation(line: 808, column: 24, scope: !6397)
!6412 = !DILocation(line: 808, column: 9, scope: !6397)
!6413 = !DILocation(line: 808, column: 15, scope: !6397)
!6414 = !DILocation(line: 808, column: 22, scope: !6397)
!6415 = !DILocation(line: 809, column: 33, scope: !6397)
!6416 = !DILocation(line: 809, column: 31, scope: !6397)
!6417 = !DILocation(line: 809, column: 27, scope: !6397)
!6418 = !DILocation(line: 809, column: 9, scope: !6397)
!6419 = !DILocation(line: 809, column: 15, scope: !6397)
!6420 = !DILocation(line: 809, column: 25, scope: !6397)
!6421 = !DILocation(line: 810, column: 9, scope: !6397)
!6422 = !DILocation(line: 810, column: 15, scope: !6397)
!6423 = !DILocation(line: 810, column: 25, scope: !6397)
!6424 = !DILocation(line: 812, column: 24, scope: !6397)
!6425 = !DILocation(line: 812, column: 25, scope: !6397)
!6426 = !DILocation(line: 812, column: 29, scope: !6397)
!6427 = !DILocation(line: 812, column: 9, scope: !6397)
!6428 = !DILocation(line: 812, column: 15, scope: !6397)
!6429 = !DILocation(line: 812, column: 21, scope: !6397)
!6430 = !DILocation(line: 814, column: 18, scope: !6397)
!6431 = !DILocation(line: 814, column: 24, scope: !6397)
!6432 = !DILocation(line: 814, column: 15, scope: !6397)
!6433 = !DILocation(line: 815, column: 9, scope: !6397)
!6434 = !DILocation(line: 804, column: 38, scope: !6390)
!6435 = !DILocation(line: 804, column: 7, scope: !6390)
!6436 = distinct !{!6436, !6395, !6437}
!6437 = !DILocation(line: 816, column: 7, scope: !6391)
!6438 = !DILocation(line: 819, column: 13, scope: !6363)
!6439 = !DILocation(line: 819, column: 18, scope: !6363)
!6440 = !DILocation(line: 819, column: 11, scope: !6363)
!6441 = !DILocation(line: 820, column: 7, scope: !6363)
!6442 = !DILocation(line: 820, column: 13, scope: !6363)
!6443 = !DILocation(line: 820, column: 19, scope: !6363)
!6444 = !DILocation(line: 821, column: 24, scope: !6363)
!6445 = !DILocation(line: 821, column: 30, scope: !6363)
!6446 = !DILocation(line: 821, column: 28, scope: !6363)
!6447 = !DILocation(line: 821, column: 7, scope: !6363)
!6448 = !DILocation(line: 821, column: 13, scope: !6363)
!6449 = !DILocation(line: 821, column: 22, scope: !6363)
!6450 = !DILocation(line: 822, column: 7, scope: !6363)
!6451 = !DILocation(line: 822, column: 13, scope: !6363)
!6452 = !DILocation(line: 822, column: 20, scope: !6363)
!6453 = !DILocation(line: 823, column: 7, scope: !6363)
!6454 = !DILocation(line: 823, column: 13, scope: !6363)
!6455 = !DILocation(line: 823, column: 23, scope: !6363)
!6456 = !DILocation(line: 825, column: 7, scope: !6363)
!6457 = !DILocation(line: 825, column: 13, scope: !6363)
!6458 = !DILocation(line: 825, column: 19, scope: !6363)
!6459 = !DILocation(line: 827, column: 16, scope: !6363)
!6460 = !DILocation(line: 827, column: 22, scope: !6363)
!6461 = !DILocation(line: 827, column: 13, scope: !6363)
!6462 = !DILocation(line: 828, column: 16, scope: !6363)
!6463 = !DILocation(line: 828, column: 7, scope: !6363)
!6464 = !DILocation(line: 828, column: 10, scope: !6363)
!6465 = !DILocation(line: 828, column: 14, scope: !6363)
!6466 = !DILocation(line: 830, column: 14, scope: !6363)
!6467 = !DILocation(line: 830, column: 7, scope: !6363)
!6468 = !DILocalVariable(name: "os_pos", scope: !6469, file: !445, line: 832, type: !433)
!6469 = distinct !DILexicalBlock(scope: !6357, file: !445, line: 831, column: 12)
!6470 = !DILocation(line: 832, column: 15, scope: !6469)
!6471 = !DILocation(line: 832, column: 24, scope: !6469)
!6472 = !DILocation(line: 832, column: 27, scope: !6469)
!6473 = !DILocation(line: 832, column: 31, scope: !6469)
!6474 = !DILocation(line: 841, column: 14, scope: !6469)
!6475 = !DILocation(line: 841, column: 7, scope: !6469)
!6476 = !DILocation(line: 841, column: 23, scope: !6469)
!6477 = !DILocalVariable(name: "s", scope: !6469, file: !445, line: 842, type: !433)
!6478 = !DILocation(line: 842, column: 15, scope: !6469)
!6479 = !DILocation(line: 842, column: 39, scope: !6469)
!6480 = !DILocation(line: 842, column: 42, scope: !6469)
!6481 = !DILocation(line: 842, column: 46, scope: !6469)
!6482 = !DILocation(line: 842, column: 19, scope: !6469)
!6483 = !DILocation(line: 843, column: 13, scope: !6469)
!6484 = !DILocation(line: 844, column: 7, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6486, file: !445, line: 844, column: 7)
!6486 = distinct !DILexicalBlock(scope: !6469, file: !445, line: 844, column: 7)
!6487 = !DILocation(line: 844, column: 7, scope: !6486)
!6488 = !DILocalVariable(name: "res", scope: !6469, file: !445, line: 845, type: !156)
!6489 = !DILocation(line: 845, column: 11, scope: !6469)
!6490 = !DILocation(line: 845, column: 42, scope: !6469)
!6491 = !DILocation(line: 845, column: 45, scope: !6469)
!6492 = !DILocation(line: 845, column: 49, scope: !6469)
!6493 = !DILocation(line: 845, column: 55, scope: !6469)
!6494 = !DILocation(line: 845, column: 17, scope: !6469)
!6495 = !DILocation(line: 846, column: 11, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6469, file: !445, line: 846, column: 11)
!6497 = !DILocation(line: 846, column: 15, scope: !6496)
!6498 = !DILocation(line: 846, column: 11, scope: !6469)
!6499 = !DILocalVariable(name: "pos", scope: !6500, file: !445, line: 847, type: !156)
!6500 = distinct !DILexicalBlock(scope: !6496, file: !445, line: 846, column: 21)
!6501 = !DILocation(line: 847, column: 13, scope: !6500)
!6502 = !DILocation(line: 848, column: 38, scope: !6500)
!6503 = !DILocation(line: 848, column: 41, scope: !6500)
!6504 = !DILocation(line: 848, column: 18, scope: !6500)
!6505 = !DILocation(line: 848, column: 9, scope: !6500)
!6506 = !DILocation(line: 848, column: 12, scope: !6500)
!6507 = !DILocation(line: 848, column: 16, scope: !6500)
!6508 = !DILocation(line: 849, column: 9, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6510, file: !445, line: 849, column: 9)
!6510 = distinct !DILexicalBlock(scope: !6500, file: !445, line: 849, column: 9)
!6511 = !DILocation(line: 849, column: 9, scope: !6510)
!6512 = !DILocation(line: 850, column: 9, scope: !6500)
!6513 = !DILocation(line: 850, column: 12, scope: !6500)
!6514 = !DILocation(line: 850, column: 16, scope: !6500)
!6515 = !DILocation(line: 853, column: 9, scope: !6500)
!6516 = !DILocation(line: 853, column: 16, scope: !6500)
!6517 = !DILocation(line: 853, column: 22, scope: !6500)
!6518 = !DILocation(line: 853, column: 20, scope: !6500)
!6519 = !DILocalVariable(name: "dp", scope: !6520, file: !445, line: 854, type: !472)
!6520 = distinct !DILexicalBlock(scope: !6500, file: !445, line: 853, column: 27)
!6521 = !DILocation(line: 854, column: 28, scope: !6520)
!6522 = !DILocation(line: 854, column: 61, scope: !6520)
!6523 = !DILocation(line: 854, column: 53, scope: !6520)
!6524 = !DILocation(line: 854, column: 68, scope: !6520)
!6525 = !DILocation(line: 854, column: 66, scope: !6520)
!6526 = !DILocation(line: 854, column: 33, scope: !6520)
!6527 = !DILocation(line: 856, column: 11, scope: !6520)
!6528 = !DILocation(line: 856, column: 15, scope: !6520)
!6529 = !DILocation(line: 856, column: 21, scope: !6520)
!6530 = !DILocation(line: 858, column: 18, scope: !6520)
!6531 = !DILocation(line: 858, column: 22, scope: !6520)
!6532 = !DILocation(line: 858, column: 15, scope: !6520)
!6533 = distinct !{!6533, !6515, !6534}
!6534 = !DILocation(line: 859, column: 9, scope: !6500)
!6535 = !DILocation(line: 861, column: 14, scope: !6469)
!6536 = !DILocation(line: 861, column: 7, scope: !6469)
!6537 = !DILocation(line: 864, column: 1, scope: !6327)
!6538 = distinct !DISubprogram(name: "ioctl", scope: !445, file: !445, line: 867, type: !6539, scopeLine: 867, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!6539 = !DISubroutineType(types: !6540)
!6540 = !{!156, !156, !376, null}
!6541 = !DILocalVariable(name: "fd", arg: 1, scope: !6538, file: !445, line: 867, type: !156)
!6542 = !DILocation(line: 867, column: 15, scope: !6538)
!6543 = !DILocalVariable(name: "request", arg: 2, scope: !6538, file: !445, line: 867, type: !376)
!6544 = !DILocation(line: 867, column: 37, scope: !6538)
!6545 = !DILocalVariable(name: "f", scope: !6538, file: !445, line: 871, type: !4890)
!6546 = !DILocation(line: 871, column: 15, scope: !6538)
!6547 = !DILocation(line: 871, column: 30, scope: !6538)
!6548 = !DILocation(line: 871, column: 19, scope: !6538)
!6549 = !DILocalVariable(name: "ap", scope: !6538, file: !445, line: 872, type: !6550)
!6550 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4321, line: 52, baseType: !6551)
!6551 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4323, line: 32, baseType: !6552)
!6552 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !445, baseType: !6553)
!6553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6554, size: 192, elements: !4332)
!6554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", size: 192, elements: !6555)
!6555 = !{!6556, !6557, !6558, !6559}
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !6554, file: !445, line: 872, baseType: !7, size: 32)
!6557 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !6554, file: !445, line: 872, baseType: !7, size: 32, offset: 32)
!6558 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !6554, file: !445, line: 872, baseType: !58, size: 64, offset: 64)
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !6554, file: !445, line: 872, baseType: !58, size: 64, offset: 128)
!6560 = !DILocation(line: 872, column: 11, scope: !6538)
!6561 = !DILocalVariable(name: "buf", scope: !6538, file: !445, line: 873, type: !58)
!6562 = !DILocation(line: 873, column: 9, scope: !6538)
!6563 = !DILocation(line: 879, column: 8, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6538, file: !445, line: 879, column: 7)
!6565 = !DILocation(line: 879, column: 7, scope: !6538)
!6566 = !DILocation(line: 880, column: 5, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6564, file: !445, line: 879, column: 11)
!6568 = !DILocation(line: 880, column: 11, scope: !6567)
!6569 = !DILocation(line: 881, column: 5, scope: !6567)
!6570 = !DILocation(line: 884, column: 3, scope: !6538)
!6571 = !DILocation(line: 885, column: 9, scope: !6538)
!6572 = !DILocation(line: 885, column: 7, scope: !6538)
!6573 = !DILocation(line: 886, column: 3, scope: !6538)
!6574 = !DILocation(line: 887, column: 7, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6538, file: !445, line: 887, column: 7)
!6576 = !DILocation(line: 887, column: 10, scope: !6575)
!6577 = !DILocation(line: 887, column: 7, scope: !6538)
!6578 = !DILocalVariable(name: "stat", scope: !6579, file: !445, line: 888, type: !484)
!6579 = distinct !DILexicalBlock(scope: !6575, file: !445, line: 887, column: 17)
!6580 = !DILocation(line: 888, column: 18, scope: !6579)
!6581 = !DILocation(line: 888, column: 40, scope: !6579)
!6582 = !DILocation(line: 888, column: 43, scope: !6579)
!6583 = !DILocation(line: 888, column: 50, scope: !6579)
!6584 = !DILocation(line: 888, column: 25, scope: !6579)
!6585 = !DILocation(line: 890, column: 13, scope: !6579)
!6586 = !DILocation(line: 890, column: 5, scope: !6579)
!6587 = !DILocalVariable(name: "ts", scope: !6588, file: !445, line: 892, type: !6590)
!6588 = distinct !DILexicalBlock(scope: !6589, file: !445, line: 891, column: 18)
!6589 = distinct !DILexicalBlock(scope: !6579, file: !445, line: 890, column: 22)
!6590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6591, size: 64)
!6591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "termios", file: !6592, line: 24, size: 480, elements: !6593)
!6592 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/termios-struct.h", directory: "")
!6593 = !{!6594, !6597, !6598, !6599, !6600, !6602, !6604, !6606}
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "c_iflag", scope: !6591, file: !6592, line: 26, baseType: !6595, size: 32)
!6595 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcflag_t", file: !6596, line: 25, baseType: !7)
!6596 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/termios.h", directory: "")
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "c_oflag", scope: !6591, file: !6592, line: 27, baseType: !6595, size: 32, offset: 32)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "c_cflag", scope: !6591, file: !6592, line: 28, baseType: !6595, size: 32, offset: 64)
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "c_lflag", scope: !6591, file: !6592, line: 29, baseType: !6595, size: 32, offset: 96)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "c_line", scope: !6591, file: !6592, line: 30, baseType: !6601, size: 8, offset: 128)
!6601 = !DIDerivedType(tag: DW_TAG_typedef, name: "cc_t", file: !6596, line: 23, baseType: !61)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "c_cc", scope: !6591, file: !6592, line: 31, baseType: !6603, size: 256, offset: 136)
!6603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6601, size: 256, elements: !437)
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "c_ispeed", scope: !6591, file: !6592, line: 32, baseType: !6605, size: 32, offset: 416)
!6605 = !DIDerivedType(tag: DW_TAG_typedef, name: "speed_t", file: !6596, line: 24, baseType: !7)
!6606 = !DIDerivedType(tag: DW_TAG_member, name: "c_ospeed", scope: !6591, file: !6592, line: 33, baseType: !6605, size: 32, offset: 448)
!6607 = !DILocation(line: 892, column: 23, scope: !6588)
!6608 = !DILocation(line: 892, column: 28, scope: !6588)
!6609 = !DILocation(line: 894, column: 7, scope: !6588)
!6610 = !DILocation(line: 897, column: 11, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6588, file: !445, line: 897, column: 11)
!6612 = !DILocation(line: 897, column: 11, scope: !6588)
!6613 = !DILocation(line: 900, column: 9, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6611, file: !445, line: 897, column: 35)
!6615 = !DILocation(line: 900, column: 13, scope: !6614)
!6616 = !DILocation(line: 900, column: 21, scope: !6614)
!6617 = !DILocation(line: 901, column: 9, scope: !6614)
!6618 = !DILocation(line: 901, column: 13, scope: !6614)
!6619 = !DILocation(line: 901, column: 21, scope: !6614)
!6620 = !DILocation(line: 902, column: 9, scope: !6614)
!6621 = !DILocation(line: 902, column: 13, scope: !6614)
!6622 = !DILocation(line: 902, column: 21, scope: !6614)
!6623 = !DILocation(line: 903, column: 9, scope: !6614)
!6624 = !DILocation(line: 903, column: 13, scope: !6614)
!6625 = !DILocation(line: 903, column: 21, scope: !6614)
!6626 = !DILocation(line: 905, column: 9, scope: !6614)
!6627 = !DILocation(line: 905, column: 13, scope: !6614)
!6628 = !DILocation(line: 905, column: 20, scope: !6614)
!6629 = !DILocation(line: 907, column: 9, scope: !6614)
!6630 = !DILocation(line: 907, column: 13, scope: !6614)
!6631 = !DILocation(line: 907, column: 21, scope: !6614)
!6632 = !DILocation(line: 908, column: 9, scope: !6614)
!6633 = !DILocation(line: 908, column: 13, scope: !6614)
!6634 = !DILocation(line: 908, column: 21, scope: !6614)
!6635 = !DILocation(line: 909, column: 9, scope: !6614)
!6636 = !DILocation(line: 909, column: 13, scope: !6614)
!6637 = !DILocation(line: 909, column: 21, scope: !6614)
!6638 = !DILocation(line: 910, column: 9, scope: !6614)
!6639 = !DILocation(line: 910, column: 13, scope: !6614)
!6640 = !DILocation(line: 910, column: 21, scope: !6614)
!6641 = !DILocation(line: 911, column: 9, scope: !6614)
!6642 = !DILocation(line: 911, column: 13, scope: !6614)
!6643 = !DILocation(line: 911, column: 21, scope: !6614)
!6644 = !DILocation(line: 912, column: 9, scope: !6614)
!6645 = !DILocation(line: 912, column: 13, scope: !6614)
!6646 = !DILocation(line: 912, column: 21, scope: !6614)
!6647 = !DILocation(line: 913, column: 9, scope: !6614)
!6648 = !DILocation(line: 913, column: 13, scope: !6614)
!6649 = !DILocation(line: 913, column: 21, scope: !6614)
!6650 = !DILocation(line: 914, column: 9, scope: !6614)
!6651 = !DILocation(line: 914, column: 13, scope: !6614)
!6652 = !DILocation(line: 914, column: 21, scope: !6614)
!6653 = !DILocation(line: 915, column: 9, scope: !6614)
!6654 = !DILocation(line: 915, column: 13, scope: !6614)
!6655 = !DILocation(line: 915, column: 21, scope: !6614)
!6656 = !DILocation(line: 916, column: 9, scope: !6614)
!6657 = !DILocation(line: 916, column: 13, scope: !6614)
!6658 = !DILocation(line: 916, column: 21, scope: !6614)
!6659 = !DILocation(line: 917, column: 9, scope: !6614)
!6660 = !DILocation(line: 917, column: 13, scope: !6614)
!6661 = !DILocation(line: 917, column: 22, scope: !6614)
!6662 = !DILocation(line: 918, column: 9, scope: !6614)
!6663 = !DILocation(line: 918, column: 13, scope: !6614)
!6664 = !DILocation(line: 918, column: 22, scope: !6614)
!6665 = !DILocation(line: 919, column: 9, scope: !6614)
!6666 = !DILocation(line: 919, column: 13, scope: !6614)
!6667 = !DILocation(line: 919, column: 22, scope: !6614)
!6668 = !DILocation(line: 920, column: 9, scope: !6614)
!6669 = !DILocation(line: 920, column: 13, scope: !6614)
!6670 = !DILocation(line: 920, column: 22, scope: !6614)
!6671 = !DILocation(line: 921, column: 9, scope: !6614)
!6672 = !DILocation(line: 921, column: 13, scope: !6614)
!6673 = !DILocation(line: 921, column: 22, scope: !6614)
!6674 = !DILocation(line: 922, column: 9, scope: !6614)
!6675 = !DILocation(line: 922, column: 13, scope: !6614)
!6676 = !DILocation(line: 922, column: 22, scope: !6614)
!6677 = !DILocation(line: 923, column: 9, scope: !6614)
!6678 = !DILocation(line: 923, column: 13, scope: !6614)
!6679 = !DILocation(line: 923, column: 22, scope: !6614)
!6680 = !DILocation(line: 924, column: 9, scope: !6614)
!6681 = !DILocation(line: 924, column: 13, scope: !6614)
!6682 = !DILocation(line: 924, column: 22, scope: !6614)
!6683 = !DILocation(line: 925, column: 9, scope: !6614)
!6684 = !DILocation(line: 925, column: 13, scope: !6614)
!6685 = !DILocation(line: 925, column: 22, scope: !6614)
!6686 = !DILocation(line: 926, column: 9, scope: !6614)
!6687 = !DILocation(line: 928, column: 9, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6611, file: !445, line: 927, column: 14)
!6689 = !DILocation(line: 928, column: 15, scope: !6688)
!6690 = !DILocation(line: 929, column: 9, scope: !6688)
!6691 = !DILocation(line: 934, column: 7, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6589, file: !445, line: 932, column: 18)
!6693 = !DILocation(line: 935, column: 11, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6692, file: !445, line: 935, column: 11)
!6695 = !DILocation(line: 935, column: 11, scope: !6692)
!6696 = !DILocation(line: 936, column: 9, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6694, file: !445, line: 935, column: 35)
!6698 = !DILocation(line: 938, column: 9, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6694, file: !445, line: 937, column: 14)
!6700 = !DILocation(line: 938, column: 15, scope: !6699)
!6701 = !DILocation(line: 939, column: 9, scope: !6699)
!6702 = !DILocation(line: 944, column: 7, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6589, file: !445, line: 942, column: 19)
!6704 = !DILocation(line: 945, column: 11, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6703, file: !445, line: 945, column: 11)
!6706 = !DILocation(line: 945, column: 13, scope: !6705)
!6707 = !DILocation(line: 945, column: 11, scope: !6703)
!6708 = !DILocation(line: 946, column: 9, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6705, file: !445, line: 945, column: 18)
!6710 = !DILocation(line: 948, column: 9, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6705, file: !445, line: 947, column: 14)
!6712 = !DILocation(line: 948, column: 15, scope: !6711)
!6713 = !DILocation(line: 949, column: 9, scope: !6711)
!6714 = !DILocation(line: 954, column: 7, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6589, file: !445, line: 952, column: 19)
!6716 = !DILocation(line: 955, column: 11, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6715, file: !445, line: 955, column: 11)
!6718 = !DILocation(line: 955, column: 11, scope: !6715)
!6719 = !DILocation(line: 956, column: 9, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6717, file: !445, line: 955, column: 35)
!6721 = !DILocation(line: 958, column: 9, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6717, file: !445, line: 957, column: 14)
!6723 = !DILocation(line: 958, column: 15, scope: !6722)
!6724 = !DILocation(line: 959, column: 9, scope: !6722)
!6725 = !DILocalVariable(name: "ws", scope: !6726, file: !445, line: 963, type: !6727)
!6726 = distinct !DILexicalBlock(scope: !6589, file: !445, line: 962, column: 22)
!6727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6728, size: 64)
!6728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "winsize", file: !6729, line: 27, size: 64, elements: !6730)
!6729 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/ioctl-types.h", directory: "")
!6730 = !{!6731, !6732, !6733, !6734}
!6731 = !DIDerivedType(tag: DW_TAG_member, name: "ws_row", scope: !6728, file: !6729, line: 29, baseType: !77, size: 16)
!6732 = !DIDerivedType(tag: DW_TAG_member, name: "ws_col", scope: !6728, file: !6729, line: 30, baseType: !77, size: 16, offset: 16)
!6733 = !DIDerivedType(tag: DW_TAG_member, name: "ws_xpixel", scope: !6728, file: !6729, line: 31, baseType: !77, size: 16, offset: 32)
!6734 = !DIDerivedType(tag: DW_TAG_member, name: "ws_ypixel", scope: !6728, file: !6729, line: 32, baseType: !77, size: 16, offset: 48)
!6735 = !DILocation(line: 963, column: 23, scope: !6726)
!6736 = !DILocation(line: 963, column: 28, scope: !6726)
!6737 = !DILocation(line: 964, column: 7, scope: !6726)
!6738 = !DILocation(line: 964, column: 11, scope: !6726)
!6739 = !DILocation(line: 964, column: 18, scope: !6726)
!6740 = !DILocation(line: 965, column: 7, scope: !6726)
!6741 = !DILocation(line: 965, column: 11, scope: !6726)
!6742 = !DILocation(line: 965, column: 18, scope: !6726)
!6743 = !DILocation(line: 966, column: 7, scope: !6726)
!6744 = !DILocation(line: 967, column: 11, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6726, file: !445, line: 967, column: 11)
!6746 = !DILocation(line: 967, column: 11, scope: !6726)
!6747 = !DILocation(line: 968, column: 9, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6745, file: !445, line: 967, column: 35)
!6749 = !DILocation(line: 970, column: 9, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6745, file: !445, line: 969, column: 14)
!6751 = !DILocation(line: 970, column: 15, scope: !6750)
!6752 = !DILocation(line: 971, column: 9, scope: !6750)
!6753 = !DILocation(line: 976, column: 7, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6589, file: !445, line: 974, column: 22)
!6755 = !DILocation(line: 977, column: 11, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6754, file: !445, line: 977, column: 11)
!6757 = !DILocation(line: 977, column: 11, scope: !6754)
!6758 = !DILocation(line: 978, column: 9, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6756, file: !445, line: 977, column: 35)
!6760 = !DILocation(line: 978, column: 15, scope: !6759)
!6761 = !DILocation(line: 979, column: 9, scope: !6759)
!6762 = !DILocation(line: 981, column: 9, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6756, file: !445, line: 980, column: 14)
!6764 = !DILocation(line: 981, column: 15, scope: !6763)
!6765 = !DILocation(line: 982, column: 9, scope: !6763)
!6766 = !DILocalVariable(name: "res", scope: !6767, file: !445, line: 986, type: !415)
!6767 = distinct !DILexicalBlock(scope: !6589, file: !445, line: 985, column: 20)
!6768 = !DILocation(line: 986, column: 12, scope: !6767)
!6769 = !DILocation(line: 986, column: 18, scope: !6767)
!6770 = !DILocation(line: 987, column: 7, scope: !6767)
!6771 = !DILocation(line: 988, column: 11, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6767, file: !445, line: 988, column: 11)
!6773 = !DILocation(line: 988, column: 11, scope: !6767)
!6774 = !DILocation(line: 989, column: 13, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6776, file: !445, line: 989, column: 13)
!6776 = distinct !DILexicalBlock(scope: !6772, file: !445, line: 988, column: 35)
!6777 = !DILocation(line: 989, column: 16, scope: !6775)
!6778 = !DILocation(line: 989, column: 32, scope: !6775)
!6779 = !DILocation(line: 989, column: 35, scope: !6775)
!6780 = !DILocation(line: 989, column: 42, scope: !6775)
!6781 = !DILocation(line: 989, column: 22, scope: !6775)
!6782 = !DILocation(line: 989, column: 20, scope: !6775)
!6783 = !DILocation(line: 989, column: 13, scope: !6776)
!6784 = !DILocation(line: 990, column: 18, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6775, file: !445, line: 989, column: 48)
!6786 = !DILocation(line: 990, column: 21, scope: !6785)
!6787 = !DILocation(line: 990, column: 28, scope: !6785)
!6788 = !DILocation(line: 990, column: 35, scope: !6785)
!6789 = !DILocation(line: 990, column: 38, scope: !6785)
!6790 = !DILocation(line: 990, column: 33, scope: !6785)
!6791 = !DILocation(line: 990, column: 12, scope: !6785)
!6792 = !DILocation(line: 990, column: 16, scope: !6785)
!6793 = !DILocation(line: 991, column: 9, scope: !6785)
!6794 = !DILocation(line: 992, column: 12, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6775, file: !445, line: 991, column: 16)
!6796 = !DILocation(line: 992, column: 16, scope: !6795)
!6797 = !DILocation(line: 994, column: 9, scope: !6776)
!6798 = !DILocation(line: 996, column: 9, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6772, file: !445, line: 995, column: 14)
!6800 = !DILocation(line: 996, column: 15, scope: !6799)
!6801 = !DILocation(line: 997, column: 9, scope: !6799)
!6802 = !DILocation(line: 1001, column: 7, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6589, file: !445, line: 1000, column: 20)
!6804 = !DILocation(line: 1002, column: 7, scope: !6803)
!6805 = !DILocation(line: 1002, column: 13, scope: !6803)
!6806 = !DILocation(line: 1003, column: 7, scope: !6803)
!6807 = !DILocation(line: 1006, column: 7, scope: !6589)
!6808 = !DILocation(line: 1007, column: 7, scope: !6589)
!6809 = !DILocation(line: 1007, column: 13, scope: !6589)
!6810 = !DILocation(line: 1008, column: 7, scope: !6589)
!6811 = !DILocation(line: 1011, column: 30, scope: !6538)
!6812 = !DILocation(line: 1011, column: 33, scope: !6538)
!6813 = !DILocation(line: 1011, column: 37, scope: !6538)
!6814 = !DILocation(line: 1011, column: 46, scope: !6538)
!6815 = !DILocation(line: 1011, column: 10, scope: !6538)
!6816 = !DILocation(line: 1011, column: 3, scope: !6538)
!6817 = !DILocation(line: 1012, column: 1, scope: !6538)
!6818 = distinct !DISubprogram(name: "fcntl", scope: !445, file: !445, line: 1014, type: !6819, scopeLine: 1014, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!6819 = !DISubroutineType(types: !6820)
!6820 = !{!156, !156, !156, null}
!6821 = !DILocalVariable(name: "fd", arg: 1, scope: !6818, file: !445, line: 1014, type: !156)
!6822 = !DILocation(line: 1014, column: 15, scope: !6818)
!6823 = !DILocalVariable(name: "cmd", arg: 2, scope: !6818, file: !445, line: 1014, type: !156)
!6824 = !DILocation(line: 1014, column: 23, scope: !6818)
!6825 = !DILocalVariable(name: "f", scope: !6818, file: !445, line: 1015, type: !4890)
!6826 = !DILocation(line: 1015, column: 15, scope: !6818)
!6827 = !DILocation(line: 1015, column: 30, scope: !6818)
!6828 = !DILocation(line: 1015, column: 19, scope: !6818)
!6829 = !DILocalVariable(name: "ap", scope: !6818, file: !445, line: 1016, type: !6550)
!6830 = !DILocation(line: 1016, column: 11, scope: !6818)
!6831 = !DILocalVariable(name: "arg", scope: !6818, file: !445, line: 1017, type: !7)
!6832 = !DILocation(line: 1017, column: 12, scope: !6818)
!6833 = !DILocalVariable(name: "lock", scope: !6818, file: !445, line: 1018, type: !6834)
!6834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6835, size: 64)
!6835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "flock", file: !6836, line: 35, size: 256, elements: !6837)
!6836 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/fcntl.h", directory: "")
!6837 = !{!6838, !6839, !6840, !6841, !6842}
!6838 = !DIDerivedType(tag: DW_TAG_member, name: "l_type", scope: !6835, file: !6836, line: 37, baseType: !99, size: 16)
!6839 = !DIDerivedType(tag: DW_TAG_member, name: "l_whence", scope: !6835, file: !6836, line: 38, baseType: !99, size: 16, offset: 16)
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "l_start", scope: !6835, file: !6836, line: 40, baseType: !390, size: 64, offset: 64)
!6841 = !DIDerivedType(tag: DW_TAG_member, name: "l_len", scope: !6835, file: !6836, line: 41, baseType: !390, size: 64, offset: 128)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "l_pid", scope: !6835, file: !6836, line: 46, baseType: !6843, size: 32, offset: 192)
!6843 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !375, line: 154, baseType: !156)
!6844 = !DILocation(line: 1018, column: 17, scope: !6818)
!6845 = !DILocation(line: 1020, column: 8, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6818, file: !445, line: 1020, column: 7)
!6847 = !DILocation(line: 1020, column: 7, scope: !6818)
!6848 = !DILocation(line: 1021, column: 5, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6846, file: !445, line: 1020, column: 11)
!6850 = !DILocation(line: 1021, column: 11, scope: !6849)
!6851 = !DILocation(line: 1022, column: 5, scope: !6849)
!6852 = !DILocation(line: 1025, column: 7, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6818, file: !445, line: 1025, column: 7)
!6854 = !DILocation(line: 1025, column: 10, scope: !6853)
!6855 = !DILocation(line: 1025, column: 20, scope: !6853)
!6856 = !DILocation(line: 1030, column: 9, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6853, file: !445, line: 1026, column: 41)
!6858 = !DILocation(line: 1031, column: 3, scope: !6857)
!6859 = !DILocation(line: 1031, column: 14, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6853, file: !445, line: 1031, column: 14)
!6861 = !DILocation(line: 1031, column: 18, scope: !6860)
!6862 = !DILocation(line: 1031, column: 29, scope: !6860)
!6863 = !DILocation(line: 1032, column: 5, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6860, file: !445, line: 1031, column: 67)
!6865 = !DILocation(line: 1033, column: 12, scope: !6864)
!6866 = !DILocation(line: 1033, column: 10, scope: !6864)
!6867 = !DILocation(line: 1034, column: 5, scope: !6864)
!6868 = !DILocation(line: 1035, column: 3, scope: !6864)
!6869 = !DILocation(line: 1036, column: 5, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6860, file: !445, line: 1035, column: 10)
!6871 = !DILocation(line: 1037, column: 11, scope: !6870)
!6872 = !DILocation(line: 1037, column: 9, scope: !6870)
!6873 = !DILocation(line: 1038, column: 5, scope: !6870)
!6874 = !DILocation(line: 1041, column: 7, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6818, file: !445, line: 1041, column: 7)
!6876 = !DILocation(line: 1041, column: 10, scope: !6875)
!6877 = !DILocation(line: 1041, column: 7, scope: !6818)
!6878 = !DILocation(line: 1042, column: 12, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6875, file: !445, line: 1041, column: 17)
!6880 = !DILocation(line: 1042, column: 5, scope: !6879)
!6881 = !DILocalVariable(name: "flags", scope: !6882, file: !445, line: 1044, type: !156)
!6882 = distinct !DILexicalBlock(scope: !6883, file: !445, line: 1043, column: 19)
!6883 = distinct !DILexicalBlock(scope: !6879, file: !445, line: 1042, column: 17)
!6884 = !DILocation(line: 1044, column: 11, scope: !6882)
!6885 = !DILocation(line: 1045, column: 11, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6882, file: !445, line: 1045, column: 11)
!6887 = !DILocation(line: 1045, column: 14, scope: !6886)
!6888 = !DILocation(line: 1045, column: 20, scope: !6886)
!6889 = !DILocation(line: 1045, column: 11, scope: !6882)
!6890 = !DILocation(line: 1046, column: 15, scope: !6886)
!6891 = !DILocation(line: 1046, column: 9, scope: !6886)
!6892 = !DILocation(line: 1047, column: 14, scope: !6882)
!6893 = !DILocation(line: 1047, column: 7, scope: !6882)
!6894 = !DILocation(line: 1050, column: 7, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6883, file: !445, line: 1049, column: 19)
!6896 = !DILocation(line: 1050, column: 10, scope: !6895)
!6897 = !DILocation(line: 1050, column: 16, scope: !6895)
!6898 = !DILocation(line: 1051, column: 11, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6895, file: !445, line: 1051, column: 11)
!6900 = !DILocation(line: 1051, column: 15, scope: !6899)
!6901 = !DILocation(line: 1051, column: 11, scope: !6895)
!6902 = !DILocation(line: 1052, column: 9, scope: !6899)
!6903 = !DILocation(line: 1052, column: 12, scope: !6899)
!6904 = !DILocation(line: 1052, column: 18, scope: !6899)
!6905 = !DILocation(line: 1053, column: 7, scope: !6895)
!6906 = !DILocation(line: 1062, column: 7, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6883, file: !445, line: 1055, column: 19)
!6908 = !DILocation(line: 1069, column: 7, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6883, file: !445, line: 1068, column: 19)
!6910 = !DILocation(line: 1069, column: 13, scope: !6909)
!6911 = !DILocation(line: 1069, column: 20, scope: !6909)
!6912 = !DILocation(line: 1070, column: 7, scope: !6909)
!6913 = !DILocation(line: 1076, column: 7, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6883, file: !445, line: 1075, column: 19)
!6915 = !DILocation(line: 1079, column: 7, scope: !6883)
!6916 = !DILocation(line: 1080, column: 7, scope: !6883)
!6917 = !DILocation(line: 1080, column: 13, scope: !6883)
!6918 = !DILocation(line: 1081, column: 7, scope: !6883)
!6919 = !DILocation(line: 1084, column: 30, scope: !6818)
!6920 = !DILocation(line: 1084, column: 33, scope: !6818)
!6921 = !DILocation(line: 1084, column: 37, scope: !6818)
!6922 = !DILocation(line: 1084, column: 42, scope: !6818)
!6923 = !DILocation(line: 1084, column: 10, scope: !6818)
!6924 = !DILocation(line: 1084, column: 3, scope: !6818)
!6925 = !DILocation(line: 1085, column: 1, scope: !6818)
!6926 = distinct !DISubprogram(name: "__fd_statfs", scope: !445, file: !445, line: 1087, type: !6927, scopeLine: 1087, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!6927 = !DISubroutineType(types: !6928)
!6928 = !{!156, !533, !6929}
!6929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6930, size: 64)
!6930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "statfs", file: !4494, line: 24, size: 960, elements: !6931)
!6931 = !{!6932, !6933, !6934, !6936, !6937, !6938, !6940, !6941, !6946, !6947, !6948, !6949}
!6932 = !DIDerivedType(tag: DW_TAG_member, name: "f_type", scope: !6930, file: !4494, line: 26, baseType: !4497, size: 64)
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "f_bsize", scope: !6930, file: !4494, line: 27, baseType: !4497, size: 64, offset: 64)
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "f_blocks", scope: !6930, file: !4494, line: 29, baseType: !6935, size: 64, offset: 128)
!6935 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsblkcnt_t", file: !375, line: 183, baseType: !376)
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "f_bfree", scope: !6930, file: !4494, line: 30, baseType: !6935, size: 64, offset: 192)
!6937 = !DIDerivedType(tag: DW_TAG_member, name: "f_bavail", scope: !6930, file: !4494, line: 31, baseType: !6935, size: 64, offset: 256)
!6938 = !DIDerivedType(tag: DW_TAG_member, name: "f_files", scope: !6930, file: !4494, line: 32, baseType: !6939, size: 64, offset: 320)
!6939 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsfilcnt_t", file: !375, line: 187, baseType: !376)
!6940 = !DIDerivedType(tag: DW_TAG_member, name: "f_ffree", scope: !6930, file: !4494, line: 33, baseType: !6939, size: 64, offset: 384)
!6941 = !DIDerivedType(tag: DW_TAG_member, name: "f_fsid", scope: !6930, file: !4494, line: 41, baseType: !6942, size: 64, offset: 448)
!6942 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsid_t", file: !375, line: 155, baseType: !6943)
!6943 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !375, line: 155, size: 64, elements: !6944)
!6944 = !{!6945}
!6945 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !6943, file: !375, line: 155, baseType: !4511, size: 64)
!6946 = !DIDerivedType(tag: DW_TAG_member, name: "f_namelen", scope: !6930, file: !4494, line: 42, baseType: !4497, size: 64, offset: 512)
!6947 = !DIDerivedType(tag: DW_TAG_member, name: "f_frsize", scope: !6930, file: !4494, line: 43, baseType: !4497, size: 64, offset: 576)
!6948 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !6930, file: !4494, line: 44, baseType: !4497, size: 64, offset: 640)
!6949 = !DIDerivedType(tag: DW_TAG_member, name: "f_spare", scope: !6930, file: !4494, line: 45, baseType: !4516, size: 256, offset: 704)
!6950 = !DILocalVariable(name: "path", arg: 1, scope: !6926, file: !445, line: 1087, type: !533)
!6951 = !DILocation(line: 1087, column: 29, scope: !6926)
!6952 = !DILocalVariable(name: "buf", arg: 2, scope: !6926, file: !445, line: 1087, type: !6929)
!6953 = !DILocation(line: 1087, column: 50, scope: !6926)
!6954 = !DILocalVariable(name: "dfile", scope: !6926, file: !445, line: 1088, type: !4548)
!6955 = !DILocation(line: 1088, column: 20, scope: !6926)
!6956 = !DILocation(line: 1088, column: 43, scope: !6926)
!6957 = !DILocation(line: 1088, column: 28, scope: !6926)
!6958 = !DILocation(line: 1089, column: 7, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6926, file: !445, line: 1089, column: 7)
!6960 = !DILocation(line: 1089, column: 7, scope: !6926)
!6961 = !DILocation(line: 1091, column: 5, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6959, file: !445, line: 1089, column: 14)
!6963 = !DILocation(line: 1092, column: 5, scope: !6962)
!6964 = !DILocation(line: 1092, column: 11, scope: !6962)
!6965 = !DILocation(line: 1093, column: 5, scope: !6962)
!6966 = !DILocation(line: 1096, column: 51, scope: !6926)
!6967 = !DILocation(line: 1096, column: 31, scope: !6926)
!6968 = !DILocation(line: 1096, column: 58, scope: !6926)
!6969 = !DILocation(line: 1096, column: 10, scope: !6926)
!6970 = !DILocation(line: 1096, column: 3, scope: !6926)
!6971 = !DILocation(line: 1097, column: 1, scope: !6926)
!6972 = distinct !DISubprogram(name: "fstatfs", scope: !445, file: !445, line: 1099, type: !6973, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!6973 = !DISubroutineType(types: !6974)
!6974 = !{!156, !156, !6929}
!6975 = !DILocalVariable(name: "fd", arg: 1, scope: !6972, file: !445, line: 1099, type: !156)
!6976 = !DILocation(line: 1099, column: 17, scope: !6972)
!6977 = !DILocalVariable(name: "buf", arg: 2, scope: !6972, file: !445, line: 1099, type: !6929)
!6978 = !DILocation(line: 1099, column: 36, scope: !6972)
!6979 = !DILocalVariable(name: "f", scope: !6972, file: !445, line: 1100, type: !4890)
!6980 = !DILocation(line: 1100, column: 15, scope: !6972)
!6981 = !DILocation(line: 1100, column: 30, scope: !6972)
!6982 = !DILocation(line: 1100, column: 19, scope: !6972)
!6983 = !DILocation(line: 1102, column: 8, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !6972, file: !445, line: 1102, column: 7)
!6985 = !DILocation(line: 1102, column: 7, scope: !6972)
!6986 = !DILocation(line: 1103, column: 5, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6984, file: !445, line: 1102, column: 11)
!6988 = !DILocation(line: 1103, column: 11, scope: !6987)
!6989 = !DILocation(line: 1104, column: 5, scope: !6987)
!6990 = !DILocation(line: 1107, column: 7, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6972, file: !445, line: 1107, column: 7)
!6992 = !DILocation(line: 1107, column: 10, scope: !6991)
!6993 = !DILocation(line: 1107, column: 7, scope: !6972)
!6994 = !DILocation(line: 1108, column: 5, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6991, file: !445, line: 1107, column: 17)
!6996 = !DILocation(line: 1109, column: 5, scope: !6995)
!6997 = !DILocation(line: 1109, column: 11, scope: !6995)
!6998 = !DILocation(line: 1110, column: 5, scope: !6995)
!6999 = !DILocation(line: 1112, column: 32, scope: !6972)
!7000 = !DILocation(line: 1112, column: 35, scope: !6972)
!7001 = !DILocation(line: 1112, column: 39, scope: !6972)
!7002 = !DILocation(line: 1112, column: 10, scope: !6972)
!7003 = !DILocation(line: 1112, column: 3, scope: !6972)
!7004 = !DILocation(line: 1113, column: 1, scope: !6972)
!7005 = distinct !DISubprogram(name: "fsync", scope: !445, file: !445, line: 1115, type: !512, scopeLine: 1115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!7006 = !DILocalVariable(name: "fd", arg: 1, scope: !7005, file: !445, line: 1115, type: !156)
!7007 = !DILocation(line: 1115, column: 15, scope: !7005)
!7008 = !DILocalVariable(name: "f", scope: !7005, file: !445, line: 1116, type: !4890)
!7009 = !DILocation(line: 1116, column: 15, scope: !7005)
!7010 = !DILocation(line: 1116, column: 30, scope: !7005)
!7011 = !DILocation(line: 1116, column: 19, scope: !7005)
!7012 = !DILocation(line: 1118, column: 8, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !7005, file: !445, line: 1118, column: 7)
!7014 = !DILocation(line: 1118, column: 7, scope: !7005)
!7015 = !DILocation(line: 1119, column: 5, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !7013, file: !445, line: 1118, column: 11)
!7017 = !DILocation(line: 1119, column: 11, scope: !7016)
!7018 = !DILocation(line: 1120, column: 5, scope: !7016)
!7019 = !DILocation(line: 1121, column: 14, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !7013, file: !445, line: 1121, column: 14)
!7021 = !DILocation(line: 1121, column: 17, scope: !7020)
!7022 = !DILocation(line: 1121, column: 14, scope: !7013)
!7023 = !DILocation(line: 1122, column: 5, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7020, file: !445, line: 1121, column: 24)
!7025 = !DILocation(line: 1124, column: 30, scope: !7005)
!7026 = !DILocation(line: 1124, column: 33, scope: !7005)
!7027 = !DILocation(line: 1124, column: 10, scope: !7005)
!7028 = !DILocation(line: 1124, column: 3, scope: !7005)
!7029 = !DILocation(line: 1125, column: 1, scope: !7005)
!7030 = distinct !DISubprogram(name: "dup2", scope: !445, file: !445, line: 1127, type: !7031, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!7031 = !DISubroutineType(types: !7032)
!7032 = !{!156, !156, !156}
!7033 = !DILocalVariable(name: "oldfd", arg: 1, scope: !7030, file: !445, line: 1127, type: !156)
!7034 = !DILocation(line: 1127, column: 14, scope: !7030)
!7035 = !DILocalVariable(name: "newfd", arg: 2, scope: !7030, file: !445, line: 1127, type: !156)
!7036 = !DILocation(line: 1127, column: 25, scope: !7030)
!7037 = !DILocalVariable(name: "f", scope: !7030, file: !445, line: 1128, type: !4890)
!7038 = !DILocation(line: 1128, column: 15, scope: !7030)
!7039 = !DILocation(line: 1128, column: 30, scope: !7030)
!7040 = !DILocation(line: 1128, column: 19, scope: !7030)
!7041 = !DILocation(line: 1130, column: 8, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !7030, file: !445, line: 1130, column: 7)
!7043 = !DILocation(line: 1130, column: 10, scope: !7042)
!7044 = !DILocation(line: 1131, column: 5, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7042, file: !445, line: 1130, column: 43)
!7046 = !DILocation(line: 1131, column: 11, scope: !7045)
!7047 = !DILocation(line: 1132, column: 5, scope: !7045)
!7048 = !DILocalVariable(name: "f2", scope: !7049, file: !445, line: 1134, type: !4890)
!7049 = distinct !DILexicalBlock(scope: !7042, file: !445, line: 1133, column: 10)
!7050 = !DILocation(line: 1134, column: 17, scope: !7049)
!7051 = !DILocation(line: 1134, column: 37, scope: !7049)
!7052 = !DILocation(line: 1134, column: 23, scope: !7049)
!7053 = !DILocation(line: 1135, column: 9, scope: !7054)
!7054 = distinct !DILexicalBlock(scope: !7049, file: !445, line: 1135, column: 9)
!7055 = !DILocation(line: 1135, column: 13, scope: !7054)
!7056 = !DILocation(line: 1135, column: 19, scope: !7054)
!7057 = !DILocation(line: 1135, column: 9, scope: !7049)
!7058 = !DILocation(line: 1135, column: 34, scope: !7054)
!7059 = !DILocation(line: 1135, column: 28, scope: !7054)
!7060 = !DILocation(line: 1139, column: 6, scope: !7049)
!7061 = !DILocation(line: 1139, column: 12, scope: !7049)
!7062 = !DILocation(line: 1139, column: 11, scope: !7049)
!7063 = !DILocation(line: 1141, column: 5, scope: !7049)
!7064 = !DILocation(line: 1141, column: 9, scope: !7049)
!7065 = !DILocation(line: 1141, column: 15, scope: !7049)
!7066 = !DILocation(line: 1148, column: 12, scope: !7049)
!7067 = !DILocation(line: 1148, column: 5, scope: !7049)
!7068 = !DILocation(line: 1150, column: 1, scope: !7030)
!7069 = distinct !DISubprogram(name: "dup", scope: !445, file: !445, line: 1152, type: !512, scopeLine: 1152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!7070 = !DILocalVariable(name: "oldfd", arg: 1, scope: !7069, file: !445, line: 1152, type: !156)
!7071 = !DILocation(line: 1152, column: 13, scope: !7069)
!7072 = !DILocalVariable(name: "f", scope: !7069, file: !445, line: 1153, type: !4890)
!7073 = !DILocation(line: 1153, column: 15, scope: !7069)
!7074 = !DILocation(line: 1153, column: 30, scope: !7069)
!7075 = !DILocation(line: 1153, column: 19, scope: !7069)
!7076 = !DILocation(line: 1154, column: 8, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7069, file: !445, line: 1154, column: 7)
!7078 = !DILocation(line: 1154, column: 7, scope: !7069)
!7079 = !DILocation(line: 1155, column: 5, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7077, file: !445, line: 1154, column: 11)
!7081 = !DILocation(line: 1155, column: 11, scope: !7080)
!7082 = !DILocation(line: 1156, column: 5, scope: !7080)
!7083 = !DILocalVariable(name: "fd", scope: !7084, file: !445, line: 1158, type: !156)
!7084 = distinct !DILexicalBlock(scope: !7077, file: !445, line: 1157, column: 10)
!7085 = !DILocation(line: 1158, column: 9, scope: !7084)
!7086 = !DILocation(line: 1159, column: 13, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7084, file: !445, line: 1159, column: 5)
!7088 = !DILocation(line: 1159, column: 10, scope: !7087)
!7089 = !DILocation(line: 1159, column: 18, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7087, file: !445, line: 1159, column: 5)
!7091 = !DILocation(line: 1159, column: 21, scope: !7090)
!7092 = !DILocation(line: 1159, column: 5, scope: !7087)
!7093 = !DILocation(line: 1160, column: 27, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7090, file: !445, line: 1160, column: 11)
!7095 = !DILocation(line: 1160, column: 13, scope: !7094)
!7096 = !DILocation(line: 1160, column: 31, scope: !7094)
!7097 = !DILocation(line: 1160, column: 37, scope: !7094)
!7098 = !DILocation(line: 1160, column: 11, scope: !7090)
!7099 = !DILocation(line: 1159, column: 32, scope: !7090)
!7100 = !DILocation(line: 1159, column: 5, scope: !7090)
!7101 = distinct !{!7101, !7092, !7102}
!7102 = !DILocation(line: 1161, column: 9, scope: !7087)
!7103 = !DILocation(line: 1162, column: 9, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7084, file: !445, line: 1162, column: 9)
!7105 = !DILocation(line: 1162, column: 12, scope: !7104)
!7106 = !DILocation(line: 1162, column: 9, scope: !7084)
!7107 = !DILocation(line: 1163, column: 7, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7104, file: !445, line: 1162, column: 24)
!7109 = !DILocation(line: 1163, column: 13, scope: !7108)
!7110 = !DILocation(line: 1164, column: 7, scope: !7108)
!7111 = !DILocation(line: 1166, column: 19, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7104, file: !445, line: 1165, column: 12)
!7113 = !DILocation(line: 1166, column: 26, scope: !7112)
!7114 = !DILocation(line: 1166, column: 14, scope: !7112)
!7115 = !DILocation(line: 1166, column: 7, scope: !7112)
!7116 = !DILocation(line: 1169, column: 1, scope: !7069)
!7117 = distinct !DISubprogram(name: "rmdir", scope: !445, file: !445, line: 1171, type: !5968, scopeLine: 1171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!7118 = !DILocalVariable(name: "pathname", arg: 1, scope: !7117, file: !445, line: 1171, type: !533)
!7119 = !DILocation(line: 1171, column: 23, scope: !7117)
!7120 = !DILocalVariable(name: "dfile", scope: !7117, file: !445, line: 1172, type: !4548)
!7121 = !DILocation(line: 1172, column: 20, scope: !7117)
!7122 = !DILocation(line: 1172, column: 43, scope: !7117)
!7123 = !DILocation(line: 1172, column: 28, scope: !7117)
!7124 = !DILocation(line: 1173, column: 7, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7117, file: !445, line: 1173, column: 7)
!7126 = !DILocation(line: 1173, column: 7, scope: !7117)
!7127 = !DILocation(line: 1175, column: 9, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7129, file: !445, line: 1175, column: 9)
!7129 = distinct !DILexicalBlock(scope: !7125, file: !445, line: 1173, column: 14)
!7130 = !DILocation(line: 1175, column: 9, scope: !7129)
!7131 = !DILocation(line: 1176, column: 7, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7128, file: !445, line: 1175, column: 40)
!7133 = !DILocation(line: 1176, column: 14, scope: !7132)
!7134 = !DILocation(line: 1176, column: 20, scope: !7132)
!7135 = !DILocation(line: 1176, column: 27, scope: !7132)
!7136 = !DILocation(line: 1177, column: 7, scope: !7132)
!7137 = !DILocation(line: 1179, column: 7, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7128, file: !445, line: 1178, column: 12)
!7139 = !DILocation(line: 1179, column: 13, scope: !7138)
!7140 = !DILocation(line: 1180, column: 7, scope: !7138)
!7141 = !DILocation(line: 1184, column: 3, scope: !7117)
!7142 = !DILocation(line: 1185, column: 3, scope: !7117)
!7143 = !DILocation(line: 1185, column: 9, scope: !7117)
!7144 = !DILocation(line: 1186, column: 3, scope: !7117)
!7145 = !DILocation(line: 1187, column: 1, scope: !7117)
!7146 = distinct !DISubprogram(name: "unlink", scope: !445, file: !445, line: 1189, type: !5968, scopeLine: 1189, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!7147 = !DILocalVariable(name: "pathname", arg: 1, scope: !7146, file: !445, line: 1189, type: !533)
!7148 = !DILocation(line: 1189, column: 24, scope: !7146)
!7149 = !DILocalVariable(name: "dfile", scope: !7146, file: !445, line: 1190, type: !4548)
!7150 = !DILocation(line: 1190, column: 20, scope: !7146)
!7151 = !DILocation(line: 1190, column: 43, scope: !7146)
!7152 = !DILocation(line: 1190, column: 28, scope: !7146)
!7153 = !DILocation(line: 1191, column: 7, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !7146, file: !445, line: 1191, column: 7)
!7155 = !DILocation(line: 1191, column: 7, scope: !7146)
!7156 = !DILocation(line: 1193, column: 9, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7158, file: !445, line: 1193, column: 9)
!7158 = distinct !DILexicalBlock(scope: !7154, file: !445, line: 1191, column: 14)
!7159 = !DILocation(line: 1193, column: 9, scope: !7158)
!7160 = !DILocation(line: 1194, column: 7, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7157, file: !445, line: 1193, column: 40)
!7162 = !DILocation(line: 1194, column: 14, scope: !7161)
!7163 = !DILocation(line: 1194, column: 20, scope: !7161)
!7164 = !DILocation(line: 1194, column: 27, scope: !7161)
!7165 = !DILocation(line: 1195, column: 7, scope: !7161)
!7166 = !DILocation(line: 1196, column: 16, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7157, file: !445, line: 1196, column: 16)
!7168 = !DILocation(line: 1196, column: 16, scope: !7157)
!7169 = !DILocation(line: 1197, column: 7, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7167, file: !445, line: 1196, column: 47)
!7171 = !DILocation(line: 1197, column: 13, scope: !7170)
!7172 = !DILocation(line: 1198, column: 7, scope: !7170)
!7173 = !DILocation(line: 1200, column: 7, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7167, file: !445, line: 1199, column: 12)
!7175 = !DILocation(line: 1200, column: 13, scope: !7174)
!7176 = !DILocation(line: 1201, column: 7, scope: !7174)
!7177 = !DILocation(line: 1205, column: 3, scope: !7146)
!7178 = !DILocation(line: 1206, column: 3, scope: !7146)
!7179 = !DILocation(line: 1206, column: 9, scope: !7146)
!7180 = !DILocation(line: 1207, column: 3, scope: !7146)
!7181 = !DILocation(line: 1208, column: 1, scope: !7146)
!7182 = distinct !DISubprogram(name: "unlinkat", scope: !445, file: !445, line: 1210, type: !7183, scopeLine: 1210, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!7183 = !DISubroutineType(types: !7184)
!7184 = !{!156, !156, !533, !156}
!7185 = !DILocalVariable(name: "dirfd", arg: 1, scope: !7182, file: !445, line: 1210, type: !156)
!7186 = !DILocation(line: 1210, column: 18, scope: !7182)
!7187 = !DILocalVariable(name: "pathname", arg: 2, scope: !7182, file: !445, line: 1210, type: !533)
!7188 = !DILocation(line: 1210, column: 37, scope: !7182)
!7189 = !DILocalVariable(name: "flags", arg: 3, scope: !7182, file: !445, line: 1210, type: !156)
!7190 = !DILocation(line: 1210, column: 51, scope: !7182)
!7191 = !DILocalVariable(name: "dfile", scope: !7182, file: !445, line: 1213, type: !4548)
!7192 = !DILocation(line: 1213, column: 20, scope: !7182)
!7193 = !DILocation(line: 1213, column: 43, scope: !7182)
!7194 = !DILocation(line: 1213, column: 28, scope: !7182)
!7195 = !DILocation(line: 1214, column: 7, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7182, file: !445, line: 1214, column: 7)
!7197 = !DILocation(line: 1214, column: 7, scope: !7182)
!7198 = !DILocation(line: 1216, column: 9, scope: !7199)
!7199 = distinct !DILexicalBlock(scope: !7200, file: !445, line: 1216, column: 9)
!7200 = distinct !DILexicalBlock(scope: !7196, file: !445, line: 1214, column: 14)
!7201 = !DILocation(line: 1216, column: 9, scope: !7200)
!7202 = !DILocation(line: 1217, column: 7, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7199, file: !445, line: 1216, column: 40)
!7204 = !DILocation(line: 1217, column: 14, scope: !7203)
!7205 = !DILocation(line: 1217, column: 20, scope: !7203)
!7206 = !DILocation(line: 1217, column: 27, scope: !7203)
!7207 = !DILocation(line: 1218, column: 7, scope: !7203)
!7208 = !DILocation(line: 1219, column: 16, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7199, file: !445, line: 1219, column: 16)
!7210 = !DILocation(line: 1219, column: 16, scope: !7199)
!7211 = !DILocation(line: 1220, column: 7, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7209, file: !445, line: 1219, column: 47)
!7213 = !DILocation(line: 1220, column: 13, scope: !7212)
!7214 = !DILocation(line: 1221, column: 7, scope: !7212)
!7215 = !DILocation(line: 1223, column: 7, scope: !7216)
!7216 = distinct !DILexicalBlock(scope: !7209, file: !445, line: 1222, column: 12)
!7217 = !DILocation(line: 1223, column: 13, scope: !7216)
!7218 = !DILocation(line: 1224, column: 7, scope: !7216)
!7219 = !DILocation(line: 1228, column: 3, scope: !7182)
!7220 = !DILocation(line: 1229, column: 3, scope: !7182)
!7221 = !DILocation(line: 1229, column: 9, scope: !7182)
!7222 = !DILocation(line: 1230, column: 3, scope: !7182)
!7223 = !DILocation(line: 1231, column: 1, scope: !7182)
!7224 = distinct !DISubprogram(name: "readlink", scope: !445, file: !445, line: 1233, type: !7225, scopeLine: 1233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!7225 = !DISubroutineType(types: !7226)
!7226 = !{!519, !533, !367, !448}
!7227 = !DILocalVariable(name: "path", arg: 1, scope: !7224, file: !445, line: 1233, type: !533)
!7228 = !DILocation(line: 1233, column: 30, scope: !7224)
!7229 = !DILocalVariable(name: "buf", arg: 2, scope: !7224, file: !445, line: 1233, type: !367)
!7230 = !DILocation(line: 1233, column: 42, scope: !7224)
!7231 = !DILocalVariable(name: "bufsize", arg: 3, scope: !7224, file: !445, line: 1233, type: !448)
!7232 = !DILocation(line: 1233, column: 54, scope: !7224)
!7233 = !DILocalVariable(name: "dfile", scope: !7224, file: !445, line: 1234, type: !4548)
!7234 = !DILocation(line: 1234, column: 20, scope: !7224)
!7235 = !DILocation(line: 1234, column: 43, scope: !7224)
!7236 = !DILocation(line: 1234, column: 28, scope: !7224)
!7237 = !DILocation(line: 1235, column: 7, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !7224, file: !445, line: 1235, column: 7)
!7239 = !DILocation(line: 1235, column: 7, scope: !7224)
!7240 = !DILocation(line: 1238, column: 9, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7242, file: !445, line: 1238, column: 9)
!7242 = distinct !DILexicalBlock(scope: !7238, file: !445, line: 1235, column: 14)
!7243 = !DILocation(line: 1238, column: 9, scope: !7242)
!7244 = !DILocation(line: 1239, column: 16, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7241, file: !445, line: 1238, column: 40)
!7246 = !DILocation(line: 1239, column: 7, scope: !7245)
!7247 = !DILocation(line: 1239, column: 14, scope: !7245)
!7248 = !DILocation(line: 1240, column: 11, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7245, file: !445, line: 1240, column: 11)
!7250 = !DILocation(line: 1240, column: 18, scope: !7249)
!7251 = !DILocation(line: 1240, column: 11, scope: !7245)
!7252 = !DILocation(line: 1240, column: 22, scope: !7249)
!7253 = !DILocation(line: 1240, column: 29, scope: !7249)
!7254 = !DILocation(line: 1241, column: 11, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7245, file: !445, line: 1241, column: 11)
!7256 = !DILocation(line: 1241, column: 18, scope: !7255)
!7257 = !DILocation(line: 1241, column: 11, scope: !7245)
!7258 = !DILocation(line: 1241, column: 22, scope: !7255)
!7259 = !DILocation(line: 1241, column: 29, scope: !7255)
!7260 = !DILocation(line: 1242, column: 11, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7245, file: !445, line: 1242, column: 11)
!7262 = !DILocation(line: 1242, column: 18, scope: !7261)
!7263 = !DILocation(line: 1242, column: 11, scope: !7245)
!7264 = !DILocation(line: 1242, column: 22, scope: !7261)
!7265 = !DILocation(line: 1242, column: 29, scope: !7261)
!7266 = !DILocation(line: 1243, column: 11, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7245, file: !445, line: 1243, column: 11)
!7268 = !DILocation(line: 1243, column: 18, scope: !7267)
!7269 = !DILocation(line: 1243, column: 11, scope: !7245)
!7270 = !DILocation(line: 1243, column: 22, scope: !7267)
!7271 = !DILocation(line: 1243, column: 29, scope: !7267)
!7272 = !DILocation(line: 1244, column: 15, scope: !7245)
!7273 = !DILocation(line: 1244, column: 22, scope: !7245)
!7274 = !DILocation(line: 1244, column: 14, scope: !7245)
!7275 = !DILocation(line: 1244, column: 7, scope: !7245)
!7276 = !DILocation(line: 1246, column: 7, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7241, file: !445, line: 1245, column: 12)
!7278 = !DILocation(line: 1246, column: 13, scope: !7277)
!7279 = !DILocation(line: 1247, column: 7, scope: !7277)
!7280 = !DILocation(line: 1250, column: 33, scope: !7224)
!7281 = !DILocation(line: 1250, column: 39, scope: !7224)
!7282 = !DILocation(line: 1250, column: 44, scope: !7224)
!7283 = !DILocation(line: 1250, column: 10, scope: !7224)
!7284 = !DILocation(line: 1250, column: 3, scope: !7224)
!7285 = !DILocation(line: 1251, column: 1, scope: !7224)
!7286 = distinct !DISubprogram(name: "select", scope: !445, file: !445, line: 1261, type: !7287, scopeLine: 1262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!7287 = !DISubroutineType(types: !7288)
!7288 = !{!156, !156, !7289, !7289, !7289, !7299}
!7289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7290, size: 64)
!7290 = !DIDerivedType(tag: DW_TAG_typedef, name: "fd_set", file: !7291, line: 70, baseType: !7292)
!7291 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/select.h", directory: "")
!7292 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7291, line: 59, size: 1024, elements: !7293)
!7293 = !{!7294}
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "fds_bits", scope: !7292, file: !7291, line: 64, baseType: !7295, size: 1024)
!7295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7296, size: 1024, elements: !7297)
!7296 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fd_mask", file: !7291, line: 49, baseType: !391)
!7297 = !{!7298}
!7298 = !DISubrange(count: 16)
!7299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5274, size: 64)
!7300 = !DILocalVariable(name: "nfds", arg: 1, scope: !7286, file: !445, line: 1261, type: !156)
!7301 = !DILocation(line: 1261, column: 16, scope: !7286)
!7302 = !DILocalVariable(name: "read", arg: 2, scope: !7286, file: !445, line: 1261, type: !7289)
!7303 = !DILocation(line: 1261, column: 30, scope: !7286)
!7304 = !DILocalVariable(name: "write", arg: 3, scope: !7286, file: !445, line: 1261, type: !7289)
!7305 = !DILocation(line: 1261, column: 44, scope: !7286)
!7306 = !DILocalVariable(name: "except", arg: 4, scope: !7286, file: !445, line: 1262, type: !7289)
!7307 = !DILocation(line: 1262, column: 20, scope: !7286)
!7308 = !DILocalVariable(name: "timeout", arg: 5, scope: !7286, file: !445, line: 1262, type: !7299)
!7309 = !DILocation(line: 1262, column: 44, scope: !7286)
!7310 = !DILocalVariable(name: "in_read", scope: !7286, file: !445, line: 1263, type: !7290)
!7311 = !DILocation(line: 1263, column: 10, scope: !7286)
!7312 = !DILocalVariable(name: "in_write", scope: !7286, file: !445, line: 1263, type: !7290)
!7313 = !DILocation(line: 1263, column: 19, scope: !7286)
!7314 = !DILocalVariable(name: "in_except", scope: !7286, file: !445, line: 1263, type: !7290)
!7315 = !DILocation(line: 1263, column: 29, scope: !7286)
!7316 = !DILocalVariable(name: "os_read", scope: !7286, file: !445, line: 1263, type: !7290)
!7317 = !DILocation(line: 1263, column: 40, scope: !7286)
!7318 = !DILocalVariable(name: "os_write", scope: !7286, file: !445, line: 1263, type: !7290)
!7319 = !DILocation(line: 1263, column: 49, scope: !7286)
!7320 = !DILocalVariable(name: "os_except", scope: !7286, file: !445, line: 1263, type: !7290)
!7321 = !DILocation(line: 1263, column: 59, scope: !7286)
!7322 = !DILocalVariable(name: "i", scope: !7286, file: !445, line: 1264, type: !156)
!7323 = !DILocation(line: 1264, column: 7, scope: !7286)
!7324 = !DILocalVariable(name: "count", scope: !7286, file: !445, line: 1264, type: !156)
!7325 = !DILocation(line: 1264, column: 10, scope: !7286)
!7326 = !DILocalVariable(name: "os_nfds", scope: !7286, file: !445, line: 1264, type: !156)
!7327 = !DILocation(line: 1264, column: 21, scope: !7286)
!7328 = !DILocation(line: 1266, column: 7, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7286, file: !445, line: 1266, column: 7)
!7330 = !DILocation(line: 1266, column: 7, scope: !7286)
!7331 = !DILocation(line: 1267, column: 16, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7329, file: !445, line: 1266, column: 13)
!7333 = !DILocation(line: 1267, column: 15, scope: !7332)
!7334 = !DILocation(line: 1268, column: 5, scope: !7332)
!7335 = !DILocation(line: 1269, column: 3, scope: !7332)
!7336 = !DILocation(line: 1270, column: 5, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7329, file: !445, line: 1269, column: 10)
!7338 = !DILocation(line: 1273, column: 7, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7286, file: !445, line: 1273, column: 7)
!7340 = !DILocation(line: 1273, column: 7, scope: !7286)
!7341 = !DILocation(line: 1274, column: 17, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7339, file: !445, line: 1273, column: 14)
!7343 = !DILocation(line: 1274, column: 16, scope: !7342)
!7344 = !DILocation(line: 1275, column: 5, scope: !7342)
!7345 = !DILocation(line: 1276, column: 3, scope: !7342)
!7346 = !DILocation(line: 1277, column: 5, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7339, file: !445, line: 1276, column: 10)
!7348 = !DILocation(line: 1280, column: 7, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !7286, file: !445, line: 1280, column: 7)
!7350 = !DILocation(line: 1280, column: 7, scope: !7286)
!7351 = !DILocation(line: 1281, column: 18, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7349, file: !445, line: 1280, column: 15)
!7353 = !DILocation(line: 1281, column: 17, scope: !7352)
!7354 = !DILocation(line: 1282, column: 5, scope: !7352)
!7355 = !DILocation(line: 1283, column: 3, scope: !7352)
!7356 = !DILocation(line: 1284, column: 5, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7349, file: !445, line: 1283, column: 10)
!7358 = !DILocation(line: 1287, column: 3, scope: !7286)
!7359 = !DILocation(line: 1288, column: 3, scope: !7286)
!7360 = !DILocation(line: 1289, column: 3, scope: !7286)
!7361 = !DILocation(line: 1292, column: 9, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7286, file: !445, line: 1292, column: 3)
!7363 = !DILocation(line: 1292, column: 8, scope: !7362)
!7364 = !DILocation(line: 1292, column: 13, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7362, file: !445, line: 1292, column: 3)
!7366 = !DILocation(line: 1292, column: 15, scope: !7365)
!7367 = !DILocation(line: 1292, column: 14, scope: !7365)
!7368 = !DILocation(line: 1292, column: 3, scope: !7362)
!7369 = !DILocation(line: 1293, column: 9, scope: !7370)
!7370 = distinct !DILexicalBlock(scope: !7371, file: !445, line: 1293, column: 9)
!7371 = distinct !DILexicalBlock(scope: !7365, file: !445, line: 1292, column: 26)
!7372 = !{!"True"}
!7373 = !DILocation(line: 1293, column: 31, scope: !7370)
!7374 = !DILocation(line: 1293, column: 34, scope: !7370)
!7375 = !DILocation(line: 1293, column: 57, scope: !7370)
!7376 = !DILocation(line: 1293, column: 60, scope: !7370)
!7377 = !DILocation(line: 1293, column: 9, scope: !7371)
!7378 = !DILocalVariable(name: "f", scope: !7379, file: !445, line: 1294, type: !4890)
!7379 = distinct !DILexicalBlock(scope: !7370, file: !445, line: 1293, column: 85)
!7380 = !DILocation(line: 1294, column: 19, scope: !7379)
!7381 = !DILocation(line: 1294, column: 34, scope: !7379)
!7382 = !DILocation(line: 1294, column: 23, scope: !7379)
!7383 = !DILocation(line: 1295, column: 12, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7379, file: !445, line: 1295, column: 11)
!7385 = !DILocation(line: 1295, column: 11, scope: !7379)
!7386 = !DILocation(line: 1296, column: 9, scope: !7387)
!7387 = distinct !DILexicalBlock(scope: !7384, file: !445, line: 1295, column: 15)
!7388 = !DILocation(line: 1296, column: 15, scope: !7387)
!7389 = !DILocation(line: 1297, column: 9, scope: !7387)
!7390 = !DILocation(line: 1298, column: 18, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7384, file: !445, line: 1298, column: 18)
!7392 = !DILocation(line: 1298, column: 21, scope: !7391)
!7393 = !DILocation(line: 1298, column: 18, scope: !7384)
!7394 = !DILocation(line: 1300, column: 13, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7396, file: !445, line: 1300, column: 13)
!7396 = distinct !DILexicalBlock(scope: !7391, file: !445, line: 1298, column: 28)
!7397 = !DILocation(line: 1300, column: 13, scope: !7396)
!7398 = !DILocation(line: 1300, column: 36, scope: !7395)
!7399 = !DILocation(line: 1301, column: 13, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7396, file: !445, line: 1301, column: 13)
!7401 = !DILocation(line: 1301, column: 13, scope: !7396)
!7402 = !DILocation(line: 1301, column: 37, scope: !7400)
!7403 = !DILocation(line: 1302, column: 13, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7396, file: !445, line: 1302, column: 13)
!7405 = !DILocation(line: 1302, column: 13, scope: !7396)
!7406 = !DILocation(line: 1302, column: 38, scope: !7404)
!7407 = !DILocation(line: 1303, column: 9, scope: !7396)
!7408 = !DILocation(line: 1304, column: 7, scope: !7396)
!7409 = !DILocation(line: 1305, column: 13, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7411, file: !445, line: 1305, column: 13)
!7411 = distinct !DILexicalBlock(scope: !7391, file: !445, line: 1304, column: 14)
!7412 = !DILocation(line: 1305, column: 13, scope: !7411)
!7413 = !DILocation(line: 1305, column: 36, scope: !7410)
!7414 = !DILocation(line: 1306, column: 13, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7411, file: !445, line: 1306, column: 13)
!7416 = !DILocation(line: 1306, column: 13, scope: !7411)
!7417 = !DILocation(line: 1306, column: 37, scope: !7415)
!7418 = !DILocation(line: 1307, column: 13, scope: !7419)
!7419 = distinct !DILexicalBlock(scope: !7411, file: !445, line: 1307, column: 13)
!7420 = !DILocation(line: 1307, column: 13, scope: !7411)
!7421 = !DILocation(line: 1307, column: 38, scope: !7419)
!7422 = !DILocation(line: 1308, column: 13, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7411, file: !445, line: 1308, column: 13)
!7424 = !DILocation(line: 1308, column: 16, scope: !7423)
!7425 = !DILocation(line: 1308, column: 22, scope: !7423)
!7426 = !DILocation(line: 1308, column: 19, scope: !7423)
!7427 = !DILocation(line: 1308, column: 13, scope: !7411)
!7428 = !DILocation(line: 1308, column: 41, scope: !7423)
!7429 = !DILocation(line: 1308, column: 44, scope: !7423)
!7430 = !DILocation(line: 1308, column: 47, scope: !7423)
!7431 = !DILocation(line: 1308, column: 39, scope: !7423)
!7432 = !DILocation(line: 1308, column: 31, scope: !7423)
!7433 = !DILocation(line: 1292, column: 22, scope: !7365)
!7434 = !DILocation(line: 1292, column: 3, scope: !7365)
!7435 = distinct !{!7435, !7368, !7436}
!7436 = !DILocation(line: 1311, column: 3, scope: !7362)
!7437 = !DILocation(line: 1313, column: 7, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7286, file: !445, line: 1313, column: 7)
!7439 = !DILocation(line: 1313, column: 15, scope: !7438)
!7440 = !DILocation(line: 1313, column: 7, scope: !7286)
!7441 = !DILocalVariable(name: "tv", scope: !7442, file: !445, line: 1316, type: !5274)
!7442 = distinct !DILexicalBlock(scope: !7438, file: !445, line: 1313, column: 20)
!7443 = !DILocation(line: 1316, column: 20, scope: !7442)
!7444 = !DILocalVariable(name: "r", scope: !7442, file: !445, line: 1317, type: !156)
!7445 = !DILocation(line: 1317, column: 9, scope: !7442)
!7446 = !DILocation(line: 1317, column: 34, scope: !7442)
!7447 = !DILocation(line: 1317, column: 13, scope: !7442)
!7448 = !DILocation(line: 1320, column: 9, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !7442, file: !445, line: 1320, column: 9)
!7450 = !DILocation(line: 1320, column: 11, scope: !7449)
!7451 = !DILocation(line: 1320, column: 9, scope: !7442)
!7452 = !DILocation(line: 1323, column: 12, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7454, file: !445, line: 1323, column: 11)
!7454 = distinct !DILexicalBlock(scope: !7449, file: !445, line: 1320, column: 18)
!7455 = !DILocation(line: 1323, column: 11, scope: !7454)
!7456 = !DILocation(line: 1324, column: 9, scope: !7453)
!7457 = !DILocation(line: 1326, column: 16, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7449, file: !445, line: 1325, column: 12)
!7459 = !DILocation(line: 1326, column: 13, scope: !7458)
!7460 = !DILocation(line: 1329, column: 13, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7458, file: !445, line: 1329, column: 7)
!7462 = !DILocation(line: 1329, column: 12, scope: !7461)
!7463 = !DILocation(line: 1329, column: 17, scope: !7464)
!7464 = distinct !DILexicalBlock(scope: !7461, file: !445, line: 1329, column: 7)
!7465 = !DILocation(line: 1329, column: 19, scope: !7464)
!7466 = !DILocation(line: 1329, column: 18, scope: !7464)
!7467 = !DILocation(line: 1329, column: 7, scope: !7461)
!7468 = !DILocalVariable(name: "f", scope: !7469, file: !445, line: 1330, type: !4890)
!7469 = distinct !DILexicalBlock(scope: !7464, file: !445, line: 1329, column: 30)
!7470 = !DILocation(line: 1330, column: 21, scope: !7469)
!7471 = !DILocation(line: 1330, column: 36, scope: !7469)
!7472 = !DILocation(line: 1330, column: 25, scope: !7469)
!7473 = !DILocation(line: 1331, column: 13, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7469, file: !445, line: 1331, column: 13)
!7475 = !DILocation(line: 1331, column: 15, scope: !7474)
!7476 = !DILocation(line: 1331, column: 19, scope: !7474)
!7477 = !DILocation(line: 1331, column: 22, scope: !7474)
!7478 = !DILocation(line: 1331, column: 13, scope: !7469)
!7479 = !DILocation(line: 1332, column: 15, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7481, file: !445, line: 1332, column: 15)
!7481 = distinct !DILexicalBlock(scope: !7474, file: !445, line: 1331, column: 29)
!7482 = !DILocation(line: 1332, column: 20, scope: !7480)
!7483 = !DILocation(line: 1332, column: 23, scope: !7480)
!7484 = !DILocation(line: 1332, column: 15, scope: !7481)
!7485 = !DILocation(line: 1332, column: 50, scope: !7480)
!7486 = !DILocation(line: 1333, column: 15, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !7481, file: !445, line: 1333, column: 15)
!7488 = !DILocation(line: 1333, column: 21, scope: !7487)
!7489 = !DILocation(line: 1333, column: 24, scope: !7487)
!7490 = !DILocation(line: 1333, column: 15, scope: !7481)
!7491 = !DILocation(line: 1333, column: 52, scope: !7487)
!7492 = !DILocation(line: 1334, column: 15, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7481, file: !445, line: 1334, column: 15)
!7494 = !DILocation(line: 1334, column: 22, scope: !7493)
!7495 = !DILocation(line: 1334, column: 25, scope: !7493)
!7496 = !DILocation(line: 1334, column: 15, scope: !7481)
!7497 = !DILocation(line: 1334, column: 54, scope: !7493)
!7498 = !DILocation(line: 1329, column: 26, scope: !7464)
!7499 = !DILocation(line: 1329, column: 7, scope: !7464)
!7500 = distinct !{!7500, !7467, !7501}
!7501 = !DILocation(line: 1336, column: 7, scope: !7461)
!7502 = !DILocation(line: 1340, column: 10, scope: !7286)
!7503 = !DILocation(line: 1340, column: 3, scope: !7286)
!7504 = !DILocation(line: 1341, column: 1, scope: !7286)
!7505 = distinct !DISubprogram(name: "chroot", scope: !445, file: !445, line: 1431, type: !5968, scopeLine: 1431, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !450, retainedNodes: !157)
!7506 = !DILocalVariable(name: "path", arg: 1, scope: !7505, file: !445, line: 1431, type: !533)
!7507 = !DILocation(line: 1431, column: 24, scope: !7505)
!7508 = !DILocation(line: 1432, column: 7, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7505, file: !445, line: 1432, column: 7)
!7510 = !DILocation(line: 1432, column: 15, scope: !7509)
!7511 = !DILocation(line: 1432, column: 7, scope: !7505)
!7512 = !DILocation(line: 1433, column: 5, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7509, file: !445, line: 1432, column: 24)
!7514 = !DILocation(line: 1433, column: 11, scope: !7513)
!7515 = !DILocation(line: 1434, column: 5, scope: !7513)
!7516 = !DILocation(line: 1437, column: 7, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7505, file: !445, line: 1437, column: 7)
!7518 = !DILocation(line: 1437, column: 15, scope: !7517)
!7519 = !DILocation(line: 1437, column: 22, scope: !7517)
!7520 = !DILocation(line: 1437, column: 25, scope: !7517)
!7521 = !DILocation(line: 1437, column: 33, scope: !7517)
!7522 = !DILocation(line: 1437, column: 7, scope: !7505)
!7523 = !DILocation(line: 1438, column: 5, scope: !7524)
!7524 = distinct !DILexicalBlock(scope: !7517, file: !445, line: 1437, column: 42)
!7525 = !DILocation(line: 1441, column: 3, scope: !7505)
!7526 = !DILocation(line: 1442, column: 3, scope: !7505)
!7527 = !DILocation(line: 1442, column: 9, scope: !7505)
!7528 = !DILocation(line: 1443, column: 3, scope: !7505)
!7529 = !DILocation(line: 1444, column: 1, scope: !7505)
!7530 = distinct !DISubprogram(name: "memcpy", scope: !7531, file: !7531, line: 12, type: !7532, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !585, retainedNodes: !157)
!7531 = !DIFile(filename: "klee/runtime/Freestanding/memcpy.c", directory: "/home/laboni/kleeEnv")
!7532 = !DISubroutineType(types: !7533)
!7533 = !{!58, !58, !526, !448}
!7534 = !DILocalVariable(name: "destaddr", arg: 1, scope: !7530, file: !7531, line: 12, type: !58)
!7535 = !DILocation(line: 12, column: 20, scope: !7530)
!7536 = !DILocalVariable(name: "srcaddr", arg: 2, scope: !7530, file: !7531, line: 12, type: !526)
!7537 = !DILocation(line: 12, column: 42, scope: !7530)
!7538 = !DILocalVariable(name: "len", arg: 3, scope: !7530, file: !7531, line: 12, type: !448)
!7539 = !DILocation(line: 12, column: 58, scope: !7530)
!7540 = !DILocalVariable(name: "dest", scope: !7530, file: !7531, line: 13, type: !367)
!7541 = !DILocation(line: 13, column: 9, scope: !7530)
!7542 = !DILocation(line: 13, column: 16, scope: !7530)
!7543 = !DILocalVariable(name: "src", scope: !7530, file: !7531, line: 14, type: !533)
!7544 = !DILocation(line: 14, column: 15, scope: !7530)
!7545 = !DILocation(line: 14, column: 21, scope: !7530)
!7546 = !DILocation(line: 16, column: 3, scope: !7530)
!7547 = !DILocation(line: 16, column: 13, scope: !7530)
!7548 = !DILocation(line: 16, column: 16, scope: !7530)
!7549 = !DILocation(line: 17, column: 19, scope: !7530)
!7550 = !DILocation(line: 17, column: 15, scope: !7530)
!7551 = !DILocation(line: 17, column: 10, scope: !7530)
!7552 = !DILocation(line: 17, column: 13, scope: !7530)
!7553 = distinct !{!7553, !7546, !7549, !7554}
!7554 = !{!"llvm.loop.mustprogress"}
!7555 = !DILocation(line: 18, column: 10, scope: !7530)
!7556 = !DILocation(line: 18, column: 3, scope: !7530)
!7557 = distinct !DISubprogram(name: "memset", scope: !7558, file: !7558, line: 12, type: !7559, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !587, retainedNodes: !157)
!7558 = !DIFile(filename: "klee/runtime/Freestanding/memset.c", directory: "/home/laboni/kleeEnv")
!7559 = !DISubroutineType(types: !7560)
!7560 = !{!58, !58, !156, !448}
!7561 = !DILocalVariable(name: "dst", arg: 1, scope: !7557, file: !7558, line: 12, type: !58)
!7562 = !DILocation(line: 12, column: 20, scope: !7557)
!7563 = !DILocalVariable(name: "s", arg: 2, scope: !7557, file: !7558, line: 12, type: !156)
!7564 = !DILocation(line: 12, column: 29, scope: !7557)
!7565 = !DILocalVariable(name: "count", arg: 3, scope: !7557, file: !7558, line: 12, type: !448)
!7566 = !DILocation(line: 12, column: 39, scope: !7557)
!7567 = !DILocalVariable(name: "a", scope: !7557, file: !7558, line: 13, type: !367)
!7568 = !DILocation(line: 13, column: 9, scope: !7557)
!7569 = !DILocation(line: 13, column: 13, scope: !7557)
!7570 = !DILocation(line: 14, column: 3, scope: !7557)
!7571 = !DILocation(line: 14, column: 15, scope: !7557)
!7572 = !DILocation(line: 14, column: 18, scope: !7557)
!7573 = !DILocation(line: 15, column: 12, scope: !7557)
!7574 = !DILocation(line: 15, column: 7, scope: !7557)
!7575 = !DILocation(line: 15, column: 10, scope: !7557)
!7576 = distinct !{!7576, !7570, !7573, !7554}
!7577 = !DILocation(line: 16, column: 10, scope: !7557)
!7578 = !DILocation(line: 16, column: 3, scope: !7557)
!7579 = distinct !DISubprogram(name: "klee_overshift_check", scope: !7580, file: !7580, line: 20, type: !7581, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !589, retainedNodes: !157)
!7580 = !DIFile(filename: "klee/runtime/Intrinsic/klee_overshift_check.c", directory: "/home/laboni/kleeEnv")
!7581 = !DISubroutineType(types: !7582)
!7582 = !{null, !69, !69}
!7583 = !DILocalVariable(name: "bitWidth", arg: 1, scope: !7579, file: !7580, line: 20, type: !69)
!7584 = !DILocation(line: 20, column: 46, scope: !7579)
!7585 = !DILocalVariable(name: "shift", arg: 2, scope: !7579, file: !7580, line: 20, type: !69)
!7586 = !DILocation(line: 20, column: 75, scope: !7579)
!7587 = !DILocation(line: 21, column: 7, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7579, file: !7580, line: 21, column: 7)
!7589 = !DILocation(line: 21, column: 16, scope: !7588)
!7590 = !DILocation(line: 21, column: 13, scope: !7588)
!7591 = !DILocation(line: 21, column: 7, scope: !7579)
!7592 = !DILocation(line: 27, column: 5, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7588, file: !7580, line: 21, column: 26)
!7594 = !DILocation(line: 29, column: 1, scope: !7579)
